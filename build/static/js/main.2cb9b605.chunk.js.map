{"version":3,"sources":["tonva/components/index.ts","tonva/index.ts","tonva/CApp/CVEntity.tsx","tonva/net/guestApi.ts","tonva/net/caller.ts","tonva/net/index.ts","tonva/components/nav.tsx","tonva/tool/cacheIds.ts","tonva/tool/localDb.ts","tonva/tool/env.ts","tonva/tool/local.ts","tonva/tool/index.ts","tonva/CApp/tools/jsonStringify.ts","tonva/CApp/tools/pureJsonContent.tsx","tonva/CApp/tools/index.ts","tonva/net/appBridge.ts","tonva/components/page.tsx","tonva/uq/caller.ts","tonva/CApp/form/viewModel.tsx","tonva/net/httpChannel.ts","tonva/net/httpChannelUI.ts","tonva/net/uqApi.ts","tonva/CApp/link/cLink.tsx","tonva/CApp/link/index.ts","tonva/uq/entity.ts","tonva/tool/uid.ts","tonva/net/wsChannel.ts","tonva/uq/index.ts","tonva/uq/query.ts","tonva/components/edit/itemEdit.tsx","tonva/components/image.tsx","tonva/tool/user.ts","tonva/net/host.ts","tonva/CApp/cUq/reactBoxId.tsx","tonva/CApp/tuid/vTuidMain.tsx","tonva/CApp/tuid/vTuidEdit.tsx","tonva/CApp/tuid/vTuidSelect.tsx","tonva/CApp/tuid/vTuidInfo.tsx","tonva/CApp/tuid/vTuidView.tsx","tonva/CApp/tuid/pageItems.ts","tonva/CApp/tuid/vTuidList.tsx","tonva/CApp/tuid/cTuid.ts","tonva/CApp/tuid/index.tsx","tonva/components/res.ts","tonva/uq/action.ts","tonva/CApp/form/vBand.tsx","tonva/CApp/form/vSubmit.tsx","tonva/CApp/form/rule.ts","tonva/CApp/form/vField/vField.tsx","tonva/CApp/form/vField/vComputeField.tsx","tonva/CApp/form/vForm.tsx","tonva/CApp/form/vArr.tsx","tonva/CApp/form/vField/vTuidField.tsx","tonva/CApp/form/bandsBuilder.ts","tonva/CApp/form/vField/buildVmField.ts","tonva/CApp/form/index.ts","tonva/uq/tuid/idCache.ts","tonva/uq/tuid/tuid.ts","tonva/uq/tuid/index.ts","CUqBase.ts","consts.ts","tonva/uq/tuid/reactBoxId.tsx","tonva/net/apiBase.ts","tonva/components/pageHeader.tsx","tonva/CApp/query/defaultRow.tsx","tonva/CApp/query/vQueryMain.tsx","tonva/CApp/query/vQuerySelect.tsx","tonva/CApp/query/cQuery.ts","tonva/CApp/query/index.ts","tonva/components/edit/imageItemEdit.tsx","tonva/entry/userApi.ts","tonva/tool/pageItems.ts","tonva/components/loading.tsx","tonva/components/resUploader.tsx","tonva/uq/uqMan.ts","tonva/uq/sheet.ts","tonva/uq/book.ts","tonva/uq/history.ts","tonva/uq/map.ts","tonva/uq/pending.ts","tonva/CApp/icons.tsx","tonva/CApp/ControllerUq.ts","stockinfo/VStockInfo.tsx","tonva/CApp/sheet/vMain.tsx","tonva/CApp/sheet/vNew.tsx","tonva/CApp/sheet/vSheetView.tsx","tonva/CApp/sheet/vEdit.tsx","tonva/CApp/sheet/vSheetAction.tsx","tonva/CApp/sheet/vSchema.tsx","tonva/CApp/sheet/vArchives.tsx","tonva/CApp/sheet/vList.tsx","tonva/CApp/sheet/vArchived.tsx","tonva/CApp/sheet/vSaved.tsx","tonva/CApp/sheet/vSheet.tsx","tonva/CApp/sheet/vSheetProcessing.tsx","tonva/CApp/sheet/cSheet.ts","tonva/CApp/sheet/index.ts","tonva/components/simple/LMR.tsx","tonva/components/simple/Badge.tsx","tonva/components/simple/FA.tsx","tonva/components/simple/IconText.tsx","tonva/components/simple/Muted.tsx","tonva/components/simple/index.ts","tonva/CApp/book/vBookMain.tsx","tonva/CApp/book/cBook.ts","tonva/CApp/cUq/vUq.tsx","tonva/CApp/cUq/cUq.tsx","tonva/CApp/cUq/index.ts","tonva/CApp/map/vMain.tsx","tonva/CApp/map/inputValues.tsx","tonva/CApp/map/cMap.ts","tonva/CApp/map/index.ts","tonva/CApp/centerApi.ts","tonva/CApp/app/vApp.tsx","tonva/CApp/app/CApp.tsx","tonva/CApp/app/index.ts","tonva/CApp/history/vHistoryMain.tsx","tonva/CApp/history/cHistory.ts","tonva/CApp/history/index.ts","tonva/CApp/pending/vPendingMain.tsx","tonva/CApp/pending/cPending.ts","tonva/CApp/pending/index.ts","tonva/CApp/action/vActionMain.tsx","tonva/CApp/action/cAction.ts","tonva/CApp/action/index.ts","stockinfo/index.ts","images/logo.svg","tonva/net/netToken.ts","tonva/components/VM.tsx","tonva/components/schema/index.ts","tonva/components/rules/index.ts","tonva/components/dropDownActions/index.tsx","tonva/components/easyDate/index.tsx","tonva/components/media.tsx","tonva/components/searchBox.tsx","tonva/uq/tuid/tuidsCache.ts","tonva/uq/uqsMan.ts","tonva/CApp/index.ts","tonva/components/form/rules/index.ts","tonva/components/form/widgets/widget.tsx","tonva/components/form/widgets/textWidget.tsx","tonva/components/form/widgets/textareaWidget.tsx","tonva/components/form/widgets/passwordWidget.tsx","tonva/components/form/widgets/numberWidget.tsx","tonva/components/form/widgets/updownWidget.tsx","tonva/components/form/widgets/dateWidget.tsx","tonva/components/form/widgets/checkBoxWidget.tsx","tonva/components/form/widgets/selectWidget.tsx","tonva/components/form/widgets/radioWidget.tsx","tonva/components/form/widgets/rangeWidget.tsx","tonva/components/form/widgets/idWidget.tsx","tonva/components/form/widgets/unknown.tsx","tonva/components/form/widgets/buttonWidget.tsx","tonva/components/form/context.tsx","tonva/components/form/widgets/arrComponent.tsx","tonva/components/form/widgets/imageWidget.tsx","tonva/components/form/widgets/factory.tsx","tonva/components/form/formRes.ts","tonva/components/form/form.tsx","tonva/components/form/field.tsx","tonva/components/form/index.ts","tonva/app/centerApi.ts","tonva/app/vMain.tsx","tonva/app/CAppBase.ts","tonva/app/start.ts","tonva/app/CBase.ts","tonva/app/index.ts","tonva/components/edit/stringItemEdit.tsx","tonva/components/edit/radioItemEdit.tsx","tonva/components/edit/selectItemEdit.tsx","tonva/components/edit/idItemEdit.tsx","tonva/components/edit/edit.tsx","tonva/components/edit/index.tsx","tonva/components/list/base.tsx","tonva/components/list/clickable.tsx","tonva/components/list/static.tsx","tonva/components/list/selectable.tsx","tonva/components/list/index.tsx","tonva/components/propGrid/row.tsx","tonva/components/propGrid/propView.tsx","tonva/components/propGrid/PropGrid.tsx","tonva/components/propGrid/index.tsx","tonva/entry/meInfo.tsx","tonva/components/tabs/tabs.tsx","tonva/components/tabs/index.tsx","stockinfo/VTags.tsx","stockinfo/CStockInfo.tsx","tonva/components/fetchErrorView.tsx","home/VSiteHeader.tsx","home/VSearchHeader.tsx","home/VHome.tsx","home/CHome.tsx","net/httpChannel.ts","net/httpChannelUI.ts","net/apiBase.ts","net/miApi.ts","me/index.tsx","ui/main.tsx","explorer/VSiteHeader.tsx","explorer/VExplorer.tsx","explorer/CExplorer.tsx","CMiApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CEntity","cUq","entity","ui","res","Object","setPrototypeOf","x","name","typeName","label","icon","entityIcons","this","loadSchema","onSubmit","values","mode","options","buildFormOptions","ret","VForm","setValues","none","submitCaption","arrNewCaption","arrEditCaption","arrTitleNewButton","fields","arrFields","undefined","FormMode","new","formUI","form","arrs","inputs","buildInputs","buildFieldsInputs","arr","items","arrFieldInputs","field","_tuid","tuid","fieldUI","select","buildSelect","content","buildContent","placeHolder","getTuidPlaceHolder","a","ownerField","cTuidSelect","param","getValue","autoList","console","log","call","removeCeased","id","idFromItem","useId","queryName","cQuerySelect","ControllerUq","VEntity","controller","createForm","VPage","guestApi","get","decodeGuestToken","guest","token","unitName","unit","CenterApiBase","Caller","params","method","logMark","logs","stackKey","NavView","props","stack","htmlTitle","waitCount","waitTimeHandler","upgradeUq","nav","start","isHistoryBack","clearError","setState","fetchError","back","bind","navBack","state","wait","window","addEventListener","set","global","setTimeout","clearTimeout","err","error","unauthorized","showLogin","uq","version","show","header","className","onClick","view","disposer","clear","push","length","history","pushState","key","ceased","refresh","item","pop","dispose","level","p","i","len","backLevel","popAndDispose","find","v","confirmClose","confirm","self","top","postMessage","type","message","elWait","elError","test","testing","style","lineHeight","map","index","visibility","React","ws","wsHost","local","LocalData","navSettings","language","culture","resUrl","hashParam","centerHost","lang","resOptions","district","handler","onWsReceiveAny","handlerId","endWsReceive","msg","receive","unitJsonPath","fetch","unitRes","json","remove","envUnit","process","REACT_APP_UNIT","Number","env","isDevelopment","getPredefinedUnitName","unitFromName","unitId","settings","href","document","location","toLowerCase","endsWith","substr","host","hash","pos","getExHashPos","substring","startWait","url","resHost","resUrlFromHost","setCenterUrl","setGuest","exHash","getExHash","appInFrame","setAppInFrame","parent","wsBridge","loadPredefinedUnit","predefinedUnit","user","notLogined","logined","endWait","onLogined","netToken","callback","logoutApis","JSON","stringify","saveLocalUser","showAppView","WSChannel","connect","defaultTop","loginTop","withBack","lv","loginView","default","logout","logoutClear","setCenterToken","cp","ChangePasswordPage","onError","showUpgradeUq","replace","topKey","popTo","ceaseTop","regConfirmClose","confirmBox","apiId","sheetType","sheetId","Promise","resolve","reject","sheet","includes","uh","appUrl","src","title","String","open","date","Date","getTime","toTimeString","step","g","observable","maxCount","ids","dict","loadId","shift","delete","_loadIds","_loadId","setItem","Map","__ls","localStorage","getItem","value","removeItem","LocalCache","text","parse","t","removeLocal","child","Local","caches","locals","k","keyForGet","keyForSet","sk","LocalArr","LocalMap","keyForRemove","removeAll","ks","split","join","_","indexOf","unshift","splice","saveIndex","max","forEach","l","isNaN","ls","testingTags","pn","pathname","isTesting","localDb","d","replacer","jsonStringify","PureJSONContent","uqTokens","logoutUqTokens","appsInFrame","_unit","page","val","isBridged","subFrameStarted","evt","data","subWin","source","setSubAppWindow","el","getElementById","hidden","hideFrameBack","clone","initSubWin","onReceiveAppApiMessage","apiName","db","parts","uqOwner","uqName","uqTokenApi","onAppApiReturn","urlTest","action","uqTokenActions","Error","realUrl","getUrlOrTest","appHash","slice","lastIndexOf","u","uid","getUnit","realUnit","onReceive","callCenterApiFromMessage","bridgeCenterApiReturn","buildAppUq","uqToken","centerToken","at","opener","appUq","brideCenterApis","bridgeCenterApi","body","callId","from","callCenterapi","directCall","result","bca","scrollTimeGap","ScrollView","bottomTime","topTime","onScroll","e","onScrollTop","onScrollBottom","target","scrollTop","offsetHeight","scrollHeight","c","direct","children","_$scroll","toString","eachChild","Page","observer","tabs","cur","tabStates","tab","isSelected","isMounted","t0","load","footer","right","keepHeader","headerClassName","tabPosition","img","redDotView","cn","redDot","alt","classNames","onTabClick","pageHeader","center","sideBar","invisible","onTouchStart","elFooter","renderTabs","renderSingle","EntityCaller","tries","_entity","innerRequest","uqApi","xcall","innerCall","jsonResult","$uq","$modify","pullModify","xresult","retry","schema","rebuildSchema","buildEntities","setSchema","ver","uqVersion","en","ActionCaller","QueryQueryCaller","unpackReturns","buildParams","QueryPageCaller","pageStart","pageSize","$page","ViewModel","vm","JSONContent","RowContent","methodsWithBody","HttpChannel","hostUrl","apiToken","timeout","showError","post","urlPrefix","caller","buildOptions","headers","path","h","append","encodeURI","innerFetch","keys","innerFetchResult","buildError","channel","that","timeOutHandler","ok","statusText","ct","then","retJson","Array","isArray","retError","catch","startsWith","buildHeaders","Headers","CenterHttpChannel","UqHttpChannel","HttpChannelNavUI","channelUIs","channelNoUIs","channels","UqApi","basePath","access","showWaiting","channelUI","init","acc","entities","ApiBase","UnitxApi","buildChannel","centerAppApi","CenterAppApi","unitxUq","centerChannel","centerChannelUI","loginedUserId","userId","uqTokensName","localMap","un","localCache","nowTick","Math","floor","now","tick","appUqParams","appUqsName","appOwner","appName","appUqs","rAppOwner","rAppName","uqsPure","cachedId","cachedUqs","uqs","retId","retUqs","isMatch","isOkCheckUqs","loadAppUqs","checkUqs","CLink","Entity","typeId","jName","sys","cache","returns","face","fieldMaps","f","loadEntitySchema","buildFieldsTuid","buildFieldTuid","buildArrFieldsTuid","fieldName","arrName","fn","getTuid","an","fieldArr","buildFieldsParams","arrResult","pa","rowResult","buildDateTimeParam","getIdFromObj","dt","toISOString","packRow","packArr","row","r","charCodeAt","escape","boxId","ln","unpackRow","unpackArr","ch0","ch","fLen","to","n","vals","ALPHABET","ID_LENGTH","rtn","charAt","random","subAppWindow","win","postWsToTop","WsBase","wsBaseId","handlerSeed","anyHandlers","msgHandlers","seed","$type","wsBaseSeed","WebSocket","onopen","ev","onerror","onmessage","wsMessage","onclose","close","event","netThis","send","Query","PageItems","more","startField","isPaged","size","list","array","deep","pageCaller","request","queryCaller","query","table","obj","ItemEdit","itemSchema","uiItem","newValue","internalStart","internalEnd","rules","nv","verifyRule","rule","Image","altImage","currentTarget","decodeUserToken","jwtDecode","hosts","centerhost","reshost","uqhost","unitxhost","urlFromHost","centerUrlFromHost","centerWsFromHost","fetchOptions","tryLocal","getCenterHost","getResHost","promises","hostArr","findIndex","fetchUrl","debugHostUrl","localCheck","all","results","j","hostValue","debugHost","getUrlOrDebug","urlDebug","fetchLocalCheck","TuidWithUIRes","ReactBoxId","tuidUR","isUndefined","boxName","assureBox","valueFromId","Tv","tuidValue","nullUI","ttv","divObj","bi","logContent","render","boxIdContent","tv","VTuidMain","onNew","onList","onSearch","openPage","link","newButton","isImport","placeholder","VTuidEdit","vForm","next","reset","closePage","finish","getValues","save","unique","setError","isCalling","returnCall","openPageElement","editView","VTuidSelect","mainRowContent","divRowContent","mainView","initKey","onSearchMain","renderMainRow","clickMainRow","before","searchMain","ceasePage","hasDiv","showDiv","divView","renderDivRow","clickDivRow","showMain","rowContent","ownerValue","divs","getDivItems","divItems","VTuidInfo","alert","buildForm","TuidPageItems","search","VTuidList","ownerId","renderRow","clickRow","callOnSelected","rowKey","onSelected","CTuid","buildPageItems","first","searchArr","CTuidBase","cTuidEditFromName","cTuidInfoFromName","cTuidSelectFromName","openVPage","onEdit","itemChanged","cTuidInfo","CTuidInfo","cTuidEdit","CTuidEdit","edit","cTuidList","CTuidList","merge","CTuidMain","CTuidSelect","resLang","navigator","languages","setResOptions","Action","ActionSubmitCaller","SubmitReturnsCaller","pack","VBand","renderContent","addRow","VFieldBand","vField","VArrBand","vArr","setAddRow","VSubmitBand","vSubmit","VSubmit","onClickSubmit","submit","isOk","disabled","caption","Rule","RuleRequired","defy","trim","RuleNum","RuleInt","isInteger","RuleMin","min","RuleMax","VField","fieldRes","buildRules","required","null","str","check","checkRules","errors","readonly","editable","computed","VInputControl","input","inputType","renderError","ref","setInputValue","onFocus","onBlur","computeFields","onChange","setValue","onKeyPress","inputGroup","suffix","ctrlCN","readOnly","maxLength","RedMark","color","position","left","VStringField","KeyCode_Neg","KeyCode_Dot","VNumberControl","extraChars","charCode","onKeyDot","onKeyNeg","preventDefault","VIntField","VDecField","VTextField","VDateTimeField","VDateField","VComputeField","VArr","ownerForm","onEditRow","rowValues","newSubmitCaption","editSubmitCaption","rowPage","valueBoxs","onRowChanged","$owner","renderItem","showRow","editRow","internalAddRow","button","paddingTop","paddingBottom","arrsRes","arrRes","newSubmit","editSubmit","arrUI","buttonStyle","textAlign","paddingLeft","paddingRight","overflow","VTuidField","showInfo","idBox","BandsBuilder","formItems","layout","bandsOnFly","bandsFromLayout","bands","bandsFromFields","bandFromArr","bandFromField","formItem","rfn","resFromName","buildVField","bandColl","vFields","vArrs","onFormSubmit","buildFormValues","buildBands","bandsBuilder","build","band","getVFields","getVArr","getVSubmit","order","rows","initValues","arrList","ctrl","valueFromFieldName","propName","buildFieldValues","buildObservableValues","IdCache","tuidLocal","queue","localArr","waitingIds","tuidInner","divName","initLocalArr","defer","isNumber","has","cacheTuids","moveToHead","_id","loadIds","tuidValues","cacheIdValues","tuids","unpackTuidIds","cacheValue","cacheTuidFieldValues","loadTuidIdsOrLocal","localedValues","filter","netIds","loadTuidIds","netRet","IdDivCache","div","Tuid","idName","cached","TuidBox","TuidInner","cacheFields","idCache","newVersion","tuidDiv","TuidDiv","createBoxId","assureObj","cacheIds","modifyIds","IdsCaller","valuesText","GetCaller","cacheFieldsInValue","arrValues","mainFields","unpackTuidIdsOfFields","SaveCaller","AllCaller","owner","SearchCaller","LoadArrCaller","SaveArrCaller","ArrPosCaller","TuidCaller","$id","transParams","arrParams","arrValue","buildDateParam","bid","$order","TuidImport","loadMain","loadArr","saveArr","posArr","TuidBoxDiv","CUqBase","_uqs","CBase","CSub","consts","uqBasedata","appIcon","miApiHost","miApiHostDebug","TuidContent","tuidName","s","refetchApi","getHttpChannel","callFetch","put","PageHeader","logoutClick","showLogout","navChange","hasBack","debugLogout","b","nick","role","openWindow","rightView","DefaultRow","VQueryMain","resetPage","loadPage","replacePage","pageResult","queryResult","again","renderExtra","rightClose","queryRow","VQuerySelect","selectRow","QueryPageItems","CQueryBase","CQuery","main","CQuerySelect","ImageItemEdit","resUploader","upload","overSize","resId","isChanged","multiple","maxSize","border","padding","userApi","account","verify","password","prop","itemObservable","isFirst","_items","firstSize","appendPosition","topDiv","bottomDiv","beforeLoad","loaded","allLoaded","loading","onLoad","setPageStart","reverse","Loading","ResUploader","fileInput","files","FormData","file","abortController","AbortController","signal","onFilesChange","fieldDefaultValue","UqMan","uqData","tvs","actions","sheets","queries","books","maps","histories","pendings","tuidsCache","localAccess","localModifyMax","createBoxIdFromTVs","tuidArr","actionArr","sheetArr","queryArr","bookArr","mapArr","historyArr","pendingArr","clearTuids","TuidsCache","accesses","loadAccess","buildTuids","buildAccess","entityName","newTuid","fromType","fromObj","book","Book","History","pending","Pending","Sheet","newAction","newQuery","newBook","newMap","newHistory","newSheet","newPending","buildSheet","buildTuidBox","buildTuidDivBox","modifyMax","states","ops","op","discription","app","flow","brief","unpackSheet","flows","GetSheetCaller","getArchive","unpack","SheetArchiveCaller","SheetArchivesCaller","StateSheetsCaller","PageStateItems","StateSheetCountCaller","MySheetsCaller","SheetCaller","count","getStateSheets","queryApiName","BookQueryCaller","schemaFrom","actionSchema","querySchema","AddCaller","DelCaller","PageCaller","qc","QueryCaller","MapCaller","getCaller","MapAddCaller","add","MapDelCaller","MapAllCaller","MapPageCaller","MapQueryCaller","fixWidth","Controller","VStockInfo","openMetaView","baseItem","onTags","stockTags","isLogined","code","baseInfo","capitalEarning","bonus","pe","roe","price","onClickName","toFixed","symbol","capitalearning","capital","earning","year","day","VSheetMain","newClick","schemaClick","archivesClick","sheetStateClick","renderState","badge","getStateLabel","templet","statesCount","isDev","VSheetNew","valuesWithBox","onSave","leftFlowStyle","width","VSheetView","sheetData","flowRow","sheetView","removed","VSheetEdit","saveSheet","VSheetAction","actionClick","acted","deleteClick","editClick","editSheet","actionButtons","startButtons","no","stateLabel","getActionLabel","backPage","VSheetSchema","schemaStringify","VArchives","archiveClick","processing","archiveRow","getArchives","VSheetList","stateName","rowClick","pageStateItems","listRow","VArchived","VSheetSaved","restart","buttons","VSheetProcessing","CSheet","curState","showSaved","loadStateSheetCount","createPageStateItems","onSheet","me","preState","$","sheetActPreState","sheetActState","changeStateCount","delta","stateCount","showArchived","showAction","showProcessing","beforeStart","onEvent","getSheetData","vCall","inBrief","getArchived","getStateUI","actionName","stateSheetCount","getSheet","sheetTitle","disc","sheetNew","sheetSaved","sheetEdit","sheetAction","LMR","badgeAlign","badgeVertical","cursor","FA","spin","pull","pulse","rotate","flip","inverse","IconText","iconClass","textClass","Muted","VBookMain","CBook","VUq","isSysVisible","tuidLinks","mapLinks","sheetLinks","actionLinks","queryLinks","bookLinks","historyLinks","pendingLinks","linkItem","cLink","lists","isVisible","cTuidMain","cMap","cSheet","cAction","cQuery","cBook","cHistory","cPending","createElement","View","lowerPropertyName","CUq","cApp","tuidURs","CMap","CAction","CHistory","CPending","getUI","loadEntities","tuidPlaceHolder","sheetTypeId","sheetFromTypeId","startSheet","entityType","cFromName","ownerTuid","tUIs","tUI","cEntity","VMapMain","isFrom","itemRender","ItemRow","valuesView","box","isLeaf","keyIndex","keyUI","keyUIs","keyContent","valuesContent","keyNone","addClick","removeClick","VInputValues","onValuesSubmit","MapItem","keyFields","keysLen","keysLast","idx","keyField","kn","searchParam","ki","searchOnKey","arr1","rowIndex","createItem","getLable","confirmDelete","template","v0","del","q","retFields","newItem","addItem","tuidBox","callParam","centerApi","VAppMain","appPage","appContent","cUqArr","VUnsupportedUnit","userName","VUnitSelect","onRowClick","appUnits","VErrorsPage","VAppStartError","CApp","cUqCollection","cImportUqs","setSettings","UQsMan","getCUq","uqUI","retErrors","userAppUnits","showUnsupport","appUnit","localData","uqAppData","promiseInits","uqFullName","newCUq","addUq","setTuidImportsLocal","clearPrevPages","showMainPage","uqId","getCUqFromId","navSheet","VHistoryMain","VPendingMain","VActionMain","resultPage","mainPage","submitReturns","module","exports","receiveHandlerId","onMessageReceive","onMessage","_resolve_$","unregisterReceiveHandler","onDispose","vp","registerReceiveHandler","mobileRegex","emailRegex","renderDate","vDate","withTime","nDate","_date","month","hm","nowYear","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","EasyDate","Media","disp","px","py","SearchBox","allowEmptySearch","inputSize","lab","inputClassName","buttonText","defaultValue","cacheTimer","clearCacheTimer","seconds","tuidCached","innerPullModify","tuidLists","queueModify","group","modify","tonvaAppName","collection","buildTVs","uqTVs","lj","uqsData","lower","uqMan","sName","setInner","tuidImport","fromName","iName","setFrom","RuleCustom","func","RulePredefined","minMsg","maxMsg","number","checkMore","integer","Widget","context","fieldProps","isChanging","onInputChange","changeValue","container","visible","inNode","requiredFlag","FieldContainer","renderBody","getUiItem","contextErrors","removeErrorWidget","addErrorWidget","initData","fromElement","onChanging","onChanged","prev","allowChange","setDataValue","setElementValue","elDiscription","hasError","discriptionClassName","Templet","errorList","tag","fieldClass","FieldClass","uiLabel","TextWidget","onKeyDown","internalOnKeyDown","keyCode","onEnter","blur","checkContextRules","clearErrors","renderTemplet","renderErrors","TextAreaWidget","PasswordWidget","UrlWidget","EmailWidget","NumberWidget","UpdownWidget","returnValue","isValidKey","DateWidget","DateTimeWidget","TimeWidget","MonthWidget","CheckBoxWidget","trueValue","falseValue","checked","defaultChecked","SelectWidget","option","radioStyle","height","RadioWidget","isRow","RangeWidget","IdWidget","pickId","clearContextError","Unknown","dataType","uiType","dataTypes","ButtonWidget","observerRender","widgetType","widget","ButtonClass","Context","uiSchema","subContexts","widgets","arrRowContexts","itemName","getDisabled","setDisabled","getReadOnly","setReadOnly","getVisible","setVisible","buttonName","errorWidgets","ew","onButtonClick","checkFieldRules","rowContext","setContextError","clearWidgetsErrors","clearContextErrors","checkHasError","rowKeySeed","RowContext","parentContext","arrSchema","uiArr","itemSchemas","FormContext","ContextContainer","ArrComponent","selectable","deletable","restorable","getArrRowContexts","arrLabel","ArrContainer","RowContainer","RowSeperator","formSelectable","formDeletable","formRestorable","arrSelectable","arrDeletable","arrRestorable","ac","rc","rs","sep","typeofTemplet","factory","selectCheck","deleteIcon","$isSelected","$source","isDeleted","$isDeleted","editContainer","Provider","ImageWidget","imageSrc","end","widgetsFactory","textarea","datetime","time","email","updown","checkbox","image","checkboxes","radio","range","typeWidget","getItemSchema","getTypeWidget","WidgetClass","formRes","zh","Form","formContext","Container","watch","formData","calcSelectOrDelete","DefaultContainer","DefaultFieldContainer","fieldLabelSize","labelView","fieldCol","DefaultFieldClass","DefaultButtonClass","DefaultRes","autorun","initDataItem","arrItem","arrItems","arrDict","arrItemOperated","formArrVal","beforeShow","contextType","uqsMan","VStartError","CAppBase","config","buildUQs","appConfig","StringItemEdit","preValue","verifyValue","element","RadioItemEdit","SelectItemEdit","IdItemEdit","Edit","defaultSepClassName","defaultRowContainerClassName","topBorder","bottomBorder","rowContainerClassName","divValue","requireFlag","stopEdit","onItemChanged","onItemClick","itemEdit","createItemEdit","topBorderClassName","bottomBorderClassName","sepClassName","elItems","ListBase","pageItems","Clickable","Static","Selectable","buildItems","itemsArray","selectedItems","compare","comp","selectItem","retItems","selected","si","labelId","obItem","onSelect","flex","marginBottom","htmlFor","anySelected","some","List","listBase","buildBase","selectAll","unselectAll","waitingMore","isLoading","staticRow","PropRow","PropBorder","borderTop","PropGap","w","backgroundColor","LabeledPropRow","gridProps","col","labelFixLeft","bk","renderLabel","renderProp","align","vAlign","alignValue","renderPropBody","renderPropContent","StringPropRow","NumberPropRow","ListPropRow","borderBottom","ComponentPropRow","component","full","PropView","buildRows","isGap","PropGrid","propView","userSetProp","Tab","contentBuilder","notify","_content","TabCaptionComponent","Tabs","tabBack","contentBack","tabClick","selectedTab","tabName","display","notifyCircle","num","VTags","onTaged","renderTag","tags","selectedTags","onNewTag","VNewTag","onFormButtonClick","onSaveNewTag","CStockInfo","_earning","_capitalearning","_bonus","_divideInfo","loadData","miApi","mi","TagStock","stock","rets","arr2","arr3","arr4","arr5","arr6","loadTags","st","SaveTag","newTag","AllTags","FetchErrorView","reApi","errContent","VSiteHeader","logo","renderSearchHeader","VSearchHeader","VHome","onPage","openStockInfo","HomePageItems","cHome","yearlen","CHome","renderSiteHeader","renderView","renderHome","newC","MiApiChannel","MiApi","pbody","proc","meTab","LoadableComponent","Loadable","loader","cExporer","faceTabs","VExplorer","ce","CExplorer","CMiApp","miHost","App","Boolean","hostname","match","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cb9b605.chunk.js","sourcesContent":["export * from './nav';\nexport * from './pageHeader';\nexport * from './page';\nexport * from './VM';\nexport * from './schema';\nexport * from './form';\nexport * from './edit';\nexport * from './res';\nexport * from './tabs';\nexport * from './loading';\nexport * from './image';\nexport * from './resUploader';\nexport * from './rules';\nexport * from './list';\nexport * from './dropDownActions';\nexport * from './easyDate';\nexport * from './propGrid';\nexport * from './simple';\nexport * from './media';\nexport * from './searchBox';\n","export * from './tool';\nexport * from './net';\nexport * from './components';\nexport * from './entry';\nexport * from './uq';\nexport * from './CApp';\nexport * from './app';\n","import * as React from 'react';\nimport { VPage } from '../components';\nimport { Entity, Field } from '../uq';\nimport { CUq } from './cUq/cUq';\nimport { VForm, FieldInputs, FieldCall, FormOptions, FormMode } from './form';\nimport { CQuerySelect } from './query';\nimport { FormUI, FieldTuidUI } from './formUI';\nimport { entityIcons } from './icons';\nimport { ControllerUq } from './ControllerUq';\n\nexport interface EntityUI {\n    form?: FormUI;\n}\n\nexport abstract class CEntity<T extends Entity, UI extends EntityUI> extends ControllerUq {\n    constructor(cUq: CUq, entity: T, ui: UI, res: any) {\n        super(cUq, res);\n        Object.setPrototypeOf(this.x, cUq.x);\n        let {name, typeName} = entity;\n        this.entity = entity;\n        this.ui = ui; // || entityUI.ui;\n        this.label = this.res.label || name;\n        this.icon = entityIcons[typeName];\n    }\n    readonly entity: T;\n    readonly ui: UI;\n\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        return true;\n    }\n\n    createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode) {\n        let options = this.buildFormOptions(mode);\n        let ret = new VForm(options, onSubmit);\n        ret.setValues(values);\n        return ret;\n    }\n\n    private buildFormOptions(mode?:FormMode):FormOptions {\n        let {fields, arrFields} = this.entity;\n        let none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton;\n        if (this.res !== undefined) {\n            none = this.res['none'];\n            submitCaption = this.res['submit'];\n            arrNewCaption = this.res['arrNew'];\n            arrEditCaption = this.res['arrEdit'];\n            arrTitleNewButton = this.res['arrTitleNewButton'];\n        }\n        if (none === undefined) {\n            none = this.cUq.res['none'] || 'none';\n        }\n        if (submitCaption === undefined)\n            submitCaption = this.cUq.res['submit'] || 'Submit';\n        if (arrNewCaption === undefined)\n            arrNewCaption = this.cUq.res['arrNew'] || 'New';\n        if (arrEditCaption === undefined)\n            arrEditCaption = this.cUq.res['arrEdit'] || 'Edit';\n        if (arrTitleNewButton === undefined)\n        arrTitleNewButton = this.cUq.res['arrTitleNewButton'];\n        if (mode === undefined) mode = FormMode.new;\n        let formUI = this.ui.form;\n        let ret:FormOptions = {\n            fields: fields,\n            arrs: arrFields,\n            ui: formUI,\n            res: this.res || {},\n            inputs: this.buildInputs(formUI),\n            none: none,\n            submitCaption: submitCaption,\n            arrNewCaption: arrNewCaption,\n            arrEditCaption: arrEditCaption,\n            arrTitleNewButton: arrTitleNewButton,\n            mode: mode,\n        }\n        return ret;\n    }\n\n    private buildInputs(formUI: FormUI):FieldInputs {\n        let {fields, arrFields} = this.entity;\n        let ret:FieldInputs = {};\n        this.buildFieldsInputs(ret, fields, undefined, formUI);\n        if (arrFields !== undefined) {\n            for (let arr of arrFields) {\n                let {name, fields} = arr;\n                let items = formUI && formUI.items;\n                this.buildFieldsInputs(ret, fields, name, items && items[name] as FormUI);\n            }\n        }\n        return ret;\n    }\n\n    private buildFieldsInputs(ret:FieldInputs, fields:Field[], arr:string, formUI: FormUI) {\n        if (arr !== undefined) {\n            let arrFieldInputs = ret[arr];\n            if (arrFieldInputs === undefined) {\n                ret[arr] = arrFieldInputs = {};\n                ret = arrFieldInputs;\n            }\n        }\n        for (let field of fields) {\n            let {name, _tuid} = field;\n            if (_tuid === undefined) continue;\n            let {tuid} = _tuid;\n            let fieldUI = formUI && formUI.items && formUI.items[name] as FieldTuidUI;\n            ret[name] = {\n                select: this.buildSelect(field, arr, fieldUI),\n                content: this.buildContent(field, arr),\n                placeHolder: this.cUq.getTuidPlaceHolder(tuid),\n            };\n        }\n    }\n\n    protected buildSelect(field:Field, arr:string, fieldUI: FieldTuidUI):FieldCall {\n        return async (form:VForm, field:Field, values:any):Promise<any> => {\n            let {_tuid } = field;\n            let {ownerField} = _tuid;\n            let cTuidSelect = undefined; // await tuid.cSelectFrom();\n            let param:any = undefined;\n            if (ownerField !== undefined) param = form.getValue(ownerField.name);\n            if (fieldUI && fieldUI.autoList === true) {\n                console.log('select search set param=empty string');\n                param = '';\n            }\n            let ret = await cTuidSelect.call(param);\n            cTuidSelect.removeCeased(); // 清除已经废弃的顶部页面\n            if (ret === undefined) return undefined;\n            let id = cTuidSelect.idFromItem(ret);\n            _tuid.useId(id);\n            return id;\n        };\n    }\n\n    protected buildContent(field:Field, arr:string): React.StatelessComponent<any> {\n        return;\n    }\n\n    cQuerySelect(queryName:string):CQuerySelect {\n        return this.cUq.cQuerySelect(queryName);\n    }\n}\n\nexport abstract class VEntity<T extends Entity, UI extends EntityUI, C extends CEntity<T, UI>> extends VPage<C> {\n    protected readonly entity: T;\n    protected readonly ui: UI;\n    constructor(controller: C) {\n        super(controller);\n        this.entity = controller.entity;\n        this.ui = controller.ui;\n    }\n\n    get label():string {return this.controller.label}\n\n    //private _form_$: VForm;\n    protected createForm(onSubmit:()=>Promise<void>, values?:any, mode?:FormMode): VForm {\n        //if (this._form_$ !== undefined) return this._form_$;\n        return this.controller.createForm(onSubmit, values, mode);\n    }\n}\n","import { decodeGuestToken } from '../tool/user';\nimport { CenterApiBase } from './uqApi';\n\nexport class GuestApi extends CenterApiBase {\n    async guest(): Promise<any> {\n        //let guest = nav.local.guest.get();\n        let ret = await this.get('', {});\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeGuestToken(ret);\n            case 'object':\n                let guest = decodeGuestToken(ret.token);\n                return guest;\n        }\n    }\n\n    async unitFromName(unitName:string): Promise<number> {\n        let ret = await this.get(unitName);\n        return ret && ret.unit;\n    }\n}\n\nexport const guestApi = new GuestApi('tv/guest/', undefined);\n","export abstract class Caller<T> {\n    protected readonly params: T;\n    constructor(params: T) {\n        this.params = params;\n    }\n    buildParams():any {return this.params;}\n    method: string  = 'POST';\n    abstract get path(): string;\n    get headers(): {[header:string]: string} {return undefined}\n}\n","export {WSChannel, wsBridge, postWsToTop} from './wsChannel';\nexport * from './apiBase';\nexport * from './guestApi';\nexport * from './caller';\nexport * from './uqApi';\nexport {appInFrame, isBridged, getExHash} from './appBridge';\nexport * from './host';\n","import * as React from 'react';\nimport {observable} from 'mobx';\nimport {User, Guest/*, UserInNav*/} from '../tool/user';\nimport {Page} from './page';\nimport {netToken} from '../net/netToken';\nimport FetchErrorView from './fetchErrorView';\nimport {FetchError} from '../net/fetchError';\nimport {appUrl, setAppInFrame, getExHash, getExHashPos} from '../net/appBridge';\nimport {LocalData, env} from '../tool';\nimport {guestApi, logoutApis, setCenterUrl, setCenterToken, WSChannel, appInFrame, host, resUrlFromHost} from '../net';\nimport { WsBase, wsBridge } from '../net/wsChannel';\nimport { resOptions } from './res';\nimport { Loading } from './loading';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../css/va-form.css';\nimport '../css/va.css';\nimport '../css/animation.css';\nimport { FA } from './simple';\n\n/*\nconst regEx = new RegExp('Android|webOS|iPhone|iPad|' +\n    'BlackBerry|Windows Phone|'  +\n    'Opera Mini|IEMobile|Mobile' , \n    'i');\nconst isMobile = regEx.test(navigator.userAgent);\n*/\n/*\nexport const mobileHeaderStyle = isMobile? {\n    minHeight:  '3em'\n} : undefined;\n*/\n//const logo = require('../img/logo.svg');\nlet logMark: number;\nconst logs:string[] = [];\n\nexport interface Props //extends React.Props<Nav>\n{\n    //view: JSX.Element | (()=>JSX.Element);\n    //start?: ()=>Promise<void>;\n    onLogined: ()=>Promise<void>;\n    notLogined?: ()=>Promise<void>;\n};\nlet stackKey = 1;\nexport interface StackItem {\n    key: number;\n    view: JSX.Element;\n    ceased: boolean;\n    confirmClose?: ()=>Promise<boolean>;\n    disposer?: ()=>void;\n}\nexport interface NavViewState {\n    stack: StackItem[];\n    wait: 0|1|2;\n    fetchError: FetchError\n}\n\nexport class NavView extends React.Component<Props, NavViewState> {\n    private stack: StackItem[];\n    private htmlTitle: string;\n    private waitCount: number = 0;\n    private waitTimeHandler?: NodeJS.Timer;\n\n    constructor(props) {\n        super(props);\n        this.back = this.back.bind(this);\n        this.navBack = this.navBack.bind(this);\n        this.stack = [];\n        this.state = {\n            stack: this.stack,\n            wait: 0,\n            fetchError: undefined\n        };\n    }\n    async componentWillMount() {\n        window.addEventListener('popstate', this.navBack);\n    }\n\n    async componentDidMount()\n    {\n        nav.set(this);\n        /*\n        let start = this.props.start;\n        if (start !== undefined) {\n            await start();\n        }\n        else {\n        */\n            await nav.start();\n        //}\n    }\n\n    get level(): number {\n        return this.stack.length;\n    }\n\n    startWait() {\n        if (this.waitCount === 0) {\n            this.setState({wait: 1});\n            this.waitTimeHandler = global.setTimeout(\n                () => {\n                    this.waitTimeHandler = undefined;\n                    this.setState({wait: 2});\n                },\n                1000) as NodeJS.Timer;\n        }\n        ++this.waitCount;\n        this.setState({\n            fetchError: undefined,\n        });\n    }\n\n    endWait() {\n        setTimeout(() => {\n            /*\n            this.setState({\n                fetchError: undefined,\n            });*/\n            --this.waitCount;\n            if (this.waitCount === 0) {\n                if (this.waitTimeHandler !== undefined) {\n                    clearTimeout(this.waitTimeHandler);\n                    this.waitTimeHandler = undefined;\n                }\n                this.setState({wait: 0});\n            }\n        },100);\n    }\n\n    async onError(fetchError: FetchError)\n    {\n        let err = fetchError.error;\n        if (err !== undefined && err.unauthorized === true) {\n            await nav.showLogin(undefined);\n            return;\n        }\n        this.setState({\n            fetchError: fetchError,\n        });\n    }\n\n    private upgradeUq = () => {\n        nav.start();\n    }\n\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\n        this.show(<Page header={false}>\n            <div>\n                UQ升级了，请点击按钮升级 <br />\n                <small className=\"text-muted\">{uq} ver-{version}</small>\n                <button className=\"btn btn-primary\" onClick={this.upgradeUq}>升级</button>\n            </div>\n        </Page>)\n    }\n\n    show(view: JSX.Element, disposer?: ()=>void): number {\n        this.clear();\n        return this.push(view, disposer);\n    }\n\n    push(view: JSX.Element, disposer?: ()=>void): number {\n        this.removeCeased();\n        if (this.stack.length > 0) {\n            window.history.pushState('forward', null, null);\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key,\n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        this.refresh();\n        //console.log('push: %s pages', this.stack.length);\n        return key;\n    }\n\n    replace(view: JSX.Element, disposer?: ()=>void): number {\n        let item:StackItem = undefined;\n        let stack = this.stack;\n        if (stack.length > 0) {\n            item = stack.pop();\n            //this.popAndDispose();\n        }\n        let key = stackKey++;\n        this.stack.push({\n            key: key, \n            view: view, \n            ceased: false,\n            disposer: disposer\n        });\n        if (item !== undefined) this.dispose(item.disposer);\n        this.refresh();\n        //console.log('replace: %s pages', this.stack.length);\n        return key;\n    }\n\n    ceaseTop(level:number = 1) {\n        let p = this.stack.length - 1;\n        for (let i=0; i<level; i++, p--) {\n            if (p < 0) break;\n            let item = this.stack[p];\n            item.ceased = true;\n        }\n    }\n\n    pop(level:number = 1) {\n        let stack = this.stack;\n        let len = stack.length;\n        //console.log('pop start: %s pages level=%s', len, level);\n        if (level <= 0 || len <= 1) return;\n        if (len < level) level = len;\n        let backLevel = 0;\n        for (let i = 0; i < level; i++) {\n            if (stack.length === 0) break;\n            //stack.pop();\n            this.popAndDispose();\n            ++backLevel;\n        }\n        if (backLevel >= len) backLevel--;\n        this.refresh();\n        if (this.isHistoryBack !== true) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(backLevel);\n            //window.addEventListener('popstate', this.navBack);\n        }\n        //console.log('pop: %s pages', stack.length);\n    }\n\n    popTo(key: number) {\n        if (key === undefined) return;\n        if (this.stack.find(v => v.key === key) === undefined) return;\n        while (this.stack.length >0) {\n            let len = this.stack.length;\n            let top = this.stack[len-1];\n            if (top.key === key) break;\n            this.pop();\n        }\n    }\n\n    topKey():number {\n        let len = this.stack.length;\n        if (len === 0) return undefined;\n        return this.stack[len-1].key;\n    }\n\n    removeCeased() {\n        for (;;) {\n            let p=this.stack.length-1;\n            if (p < 0) break;\n            let top = this.stack[p];\n            if (top.ceased === false) break;\n            let item = this.stack.pop();\n            let {disposer} = item;\n            this.dispose(disposer);\n        }\n        this.refresh();\n    }\n\n    private popAndDispose() {\n        this.removeCeased();\n        let item = this.stack.pop();\n        if (item === undefined) return;\n        let {disposer} = item;\n        this.dispose(disposer);\n        this.removeCeased();\n        return item;\n    }\n\n    private dispose(disposer:()=>void) {\n        if (disposer === undefined) return;\n        let item = this.stack.find(v => v.disposer === disposer);\n        if (item === undefined) disposer();\n    }\n\n    clear() {\n        let len = this.stack.length;\n        while (this.stack.length > 0) this.popAndDispose();\n        //this.refresh();\n        if (len > 1) {\n            //window.removeEventListener('popstate', this.navBack);\n            //window.history.back(len-1);\n            //window.addEventListener('popstate', this.navBack);\n        }\n    }\n\n    regConfirmClose(confirmClose:()=>Promise<boolean>) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        let top = stack[len-1];\n        top.confirmClose = confirmClose;\n    }\n\n    private isHistoryBack:boolean = false;\n    navBack() {\n        nav.log('backbutton pressed - nav level: ' + this.stack.length);\n        this.isHistoryBack = true;\n        this.back(true);\n        this.isHistoryBack = false;\n    }\n\n    async back(confirm:boolean = true) {\n        let stack = this.stack;\n        let len = stack.length;\n        if (len === 0) return;\n        if (len === 1) {\n            if (window.self !== window.top) {\n                window.top.postMessage({type:'pop-app'}, '*');\n            }\n            return;\n        }\n        let top = stack[len-1];\n        if (confirm===true && top.confirmClose) {\n            if (await top.confirmClose()===true) this.pop();\n        }\n        else {\n            this.pop();\n        }\n    }\n\n    confirmBox(message?:string): boolean {\n        return window.confirm(message);\n    }\n    clearError = () => {\n        this.setState({fetchError: undefined});\n    }\n    /*\n    private clickCount = 0;\n    private firstClick: number = 0;\n    private clickRange = 3000;\n    private clickMax = 6;\n    private onClick = () => {\n        let now = Date.now();\n        if (now - this.firstClick > this.clickRange) {\n            this.clickCount = 1;\n            this.firstClick = now;\n            return;\n        }\n        ++this.clickCount;\n        if (this.clickCount >= this.clickMax) {\n            nav.reverseTest();\n            this.firstClick = 0;\n            return;\n        }\n    }\n    */\n    /*\n    private onTestClick = () => {\n        nav.testing = false;\n        nav.push(<Page header={false}>\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\n                <div>当前运行在测试模式</div>\n                <div className=\"mt-4\">\n                    <button className=\"btn btn-danger\" onClick={nav.toNormal}>正常模式</button>\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>{nav.testing=true;this.pop()}}>测试模式</button>\n                </div>\n            </div>\n        </Page>);\n    }\n    */\n    render() {\n        const {wait, fetchError} = this.state;\n        let stack = this.state.stack;\n        let top = stack.length - 1;\n        let elWait = null, elError = null;\n        switch (wait) {\n            case 1:\n                elWait = <li className=\"va-wait va-wait1\">\n                </li>;\n                break;\n            case 2:\n                elWait = <li className=\"va-wait va-wait2\">\n                    <Loading />\n                </li>;\n                break;\n        }\n        if (fetchError)\n            elError = <FetchErrorView clearError={this.clearError} {...fetchError} />;\n        let test = nav.testing===true && \n            <span className=\"cursor-pointer position-absolute\" style={{lineHeight:0}}>\n                <FA className=\"text-warning\" name=\"info-circle\" />\n            </span>;\n        //onClick={this.onClick}\n        return (\n        <ul className=\"va\">\n            {\n                stack.map((item, index) => {\n                    let {key, view} = item;\n                    return <li key={key} style={index<top? {visibility: 'hidden'}:undefined}>\n                        {view}\n                    </li>\n                })\n            }\n            {elWait}\n            {elError}\n            {test}\n        </ul>\n        );\n    }\n\n    private refresh() {\n        // this.setState({flag: !this.state.flag});\n        this.setState({stack: this.stack });\n        // this.forceUpdate();\n    }\n}\n\nexport interface NavSettings {\n    loginTop?: JSX.Element;\n}\n\nexport class Nav {\n    private nav:NavView;\n    private ws: WsBase;\n    private wsHost: string;\n    private local: LocalData = new LocalData();\n    private navSettings: NavSettings;\n    @observable user: User/*InNav*/ = undefined;\n    testing: boolean;\n    language: string;\n    culture: string;\n    resUrl: string;\n\n    constructor() {\n        let {lang, district} = resOptions;\n        this.language = lang;\n        this.culture = district;\n        this.testing = false;\n    }\n\n    get guest(): number {\n        let guest = this.local.guest;\n        if (guest === undefined) return 0;\n        let g = guest.get();\n        if (g === undefined) return 0;\n        return g.guest;\n    }\n\n    set(nav:NavView) {\n        //this.logo = logo;\n        this.nav = nav;\n    }\n\n    registerReceiveHandler(handler: (message:any)=>Promise<void>):number {\n        if (this.ws === undefined) return;\n        return this.ws.onWsReceiveAny(handler);\n    }\n\n    unregisterReceiveHandler(handlerId:number) {\n        if (this.ws === undefined) return;\n        if (handlerId === undefined) return;\n        this.ws.endWsReceive(handlerId);\n    }\n\n    /*\n    private static testMode = '测试';\n    private static normalMode = '正常';\n    private setTesting(testing:boolean) {\n        this.testing = testing;\n        this.local.testing.set(testing);\n    };\n    private resetTest = () => {\n        this.setTesting(!this.testing);\n        //this.pop();\n        this.start();\n    }\n    toNormal = () => {\n        this.setTesting(false);\n        this.start();\n    }\n    reverseTest() {\n        let m1:string, m2:string;\n        if (this.testing === true) {\n            m1 = Nav.testMode;\n            m2 = Nav.normalMode;\n        }\n        else {\n            m1 = Nav.normalMode;\n            m2 = Nav.testMode;\n        }\n\n        this.push(<Page back=\"close\" header={false}>\n            <div className=\"m-5 border border-info bg-white rounded p-4 text-center\">\n                <div>\n                    <p>从{m1}模式切换到{m2}模式吗?</p>\n                    <p className=\"small text-muted\">测试模式下，页面左上角会有一个 <FA className=\"text-warning\" name=\"info-circle\" /></p>\n                </div>\n                <div className=\"mt-4\">\n                    <button className=\"btn btn-danger\" onClick={this.resetTest}>切换</button>\n                    <button className=\"btn btn-outline-info ml-3\" onClick={()=>this.pop()}>取消</button>\n                </div>\n            </div>\n        </Page>);\n    }\n    */\n\n    async onReceive(msg:any) {\n        if (this.ws === undefined) return;\n        await this.ws.receive(msg);\n    }\n\n    private async getPredefinedUnitName() {\n        try {\n            let unitJsonPath = this.unitJsonPath();\n            let unitRes = await fetch(unitJsonPath, {});\n            let res = await unitRes.json();\n            return res.unit;\n        }\n        catch (err) {\n            this.local.unit.remove();\n            return;\n        }\n    }\n\n    private async loadPredefinedUnit() {\n        let envUnit = process.env.REACT_APP_UNIT;\n        if (envUnit !== undefined) {\n            return Number(envUnit);\n        }\n        let unitName:string;\n        let unit = this.local.unit.get();\n        if (unit !== undefined) {\n            if (env.isDevelopment !== true) return unit.id;\n            unitName = await this.getPredefinedUnitName();\n            if (unitName === undefined) return;\n            if (unit.name === unitName) return unit.id;\n        }\n        else {\n            unitName = await this.getPredefinedUnitName();\n            if (unitName === undefined) return;\n        }\n        let unitId = await guestApi.unitFromName(unitName);\n        if (unitId !== undefined) {\n            this.local.unit.set({id: unitId, name: unitName});\n        }\n        return unitId;\n    }\n\n    setSettings(settings?: NavSettings) {\n        this.navSettings = settings;\n    }\n\n    hashParam: string;\n    private centerHost: string;\n    private arrs = ['/test', '/test/'];\n    private unitJsonPath():string {\n        let {href} = document.location;\n        href = href.toLowerCase();\n        for (let item of this.arrs) {\n            if (href.endsWith(item) === true) {\n                href = href.substr(0, href.length - item.length);\n                break;\n            }\n        }\n        if (href.endsWith('/') === true || href.endsWith('\\\\') === true) {\n            href = href.substr(0, href.length-1);\n        }\n        return href + '/unit.json';\n    }\n    async start() {\n        try {\n            this.testing = env.testing;\n            await host.start(this.testing);\n            let hash = document.location.hash;\n            if (hash !== undefined && hash.length > 0) {\n                let pos = getExHashPos();\n                if (pos < 0) pos = undefined;\n                this.hashParam = hash.substring(1, pos);\n            }\n            nav.clear();\n            this.startWait();\n            let {url, ws, resHost} = host;\n            this.centerHost = url;\n            this.resUrl = resUrlFromHost( resHost);\n            this.wsHost = ws;\n            setCenterUrl(url);\n            \n            let guest:Guest = this.local.guest.get();\n            if (guest === undefined) {\n                guest = await guestApi.guest();\n            }\n            nav.setGuest(guest);\n\n            let exHash = getExHash();\n            let appInFrame = setAppInFrame(exHash);\n            if (exHash !== undefined && window !== window.parent) {\n                // is in frame\n                if (appInFrame !== undefined) {\n                    this.ws = wsBridge;\n                    console.log('this.ws = wsBridge in sub frame');\n                    //nav.user = {id:0} as User;\n                    if (window.self !== window.parent) {\n                        window.parent.postMessage({type:'sub-frame-started', hash: appInFrame.hash}, '*');\n                    }\n                    // 下面这一句，已经移到 appBridge.ts 里面的 initSubWin，也就是响应从main frame获得user之后开始。\n                    //await this.showAppView();\n                    return;\n                }\n            }\n\n            let predefinedUnit = await this.loadPredefinedUnit();\n            appInFrame.predefinedUnit = predefinedUnit;\n\n            let user: User = this.local.user.get();\n            if (user === undefined) {\n                let {notLogined} = this.nav.props;\n                if (notLogined !== undefined) {\n                    await notLogined();\n                }\n                else {\n                    await nav.showLogin(undefined);\n                }\n                return;\n            }\n\n            await nav.logined(user);\n        }\n        catch (err) {\n        }\n        finally {\n            this.endWait();\n        }\n    }\n\n    async showAppView() {\n        let {onLogined} = this.nav.props;\n        if (onLogined === undefined) {\n            nav.push(<div>NavView has no prop onLogined</div>);\n            return;\n        }\n        nav.clear();\n        await onLogined();\n        console.log('logined: AppView shown');\n    }\n\n    setGuest(guest: Guest) {\n        this.local.guest.set(guest);\n        netToken.set(0, guest.token);\n    }\n\n    saveLocalUser() {\n        this.local.user.set(this.user);\n    }\n\n    async logined(user: User, callback?: (user:User)=>Promise<void>) {\n        logoutApis();\n        console.log(\"logined: %s\", JSON.stringify(user));\n        this.user = user;\n        this.saveLocalUser();\n        netToken.set(user.id, user.token);\n        if (callback !== undefined) //this.loginCallbacks.has)\n            callback(user);\n            //this.loginCallbacks.call(user);\n        else {\n            await this.showAppView();\n        }\n    }\n\n    wsConnect() {\n        let ws:WSChannel = this.ws = new WSChannel(this.wsHost, this.user.token);\n        ws.connect();\n    }\n\n    loginTop(defaultTop:JSX.Element) {\n        return (this.navSettings && this.navSettings.loginTop) || defaultTop;\n    }\n\n    async showLogin(callback?: (user:User)=>Promise<void>, withBack?:boolean) {\n        let lv = await import('../entry/login');\n        let loginView = <lv.default \n            withBack={withBack} \n            callback={callback} />;\n        if (withBack !== true) {\n            this.nav.clear();\n            this.pop();\n        }\n        this.nav.push(loginView);\n    }\n\n    async showLogout(callback?: ()=>Promise<void>) {\n        nav.push(<Page header=\"安全退出\" back=\"close\">\n            <div className=\"m-5 border border-info bg-white rounded p-3 text-center\">\n                <div>退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号</div>\n                <div className=\"mt-3\">\n                    <button className=\"btn btn-danger\" onClick={()=>this.logout(callback)}>退出</button>\n                </div>\n            </div>\n        </Page>);\n    }\n\n    async logout(callback?:()=>Promise<void>) { //notShowLogin?:boolean) {\n        appInFrame.unit = undefined;\n        this.local.logoutClear();\n        this.user = undefined; //{} as User;\n        logoutApis();\n        let guest = this.local.guest.get();\n        setCenterToken(0, guest && guest.token);\n        this.ws = undefined;\n        /*\n        if (this.loginCallbacks.has)\n            this.logoutCallbacks.call();\n        else {\n            if (notShowLogin === true) return;\n        }\n        await nav.start();\n        */\n        if (callback === undefined)\n            await nav.start();\n        else\n            await callback();\n    }\n\n    async changePassword() {\n        let cp = await import('../entry/changePassword');\n        nav.push(<cp.ChangePasswordPage />);\n    }\n\n    get level(): number {\n        return this.nav.level;\n    }\n    startWait() {\n        this.nav.startWait();\n    }\n    endWait() {\n        this.nav.endWait();\n    }\n    async onError(error: FetchError) {\n        await this.nav.onError(error);\n    }\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\n        await this.nav.showUpgradeUq(uq, version);\n    }\n\n    show (view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.show(view, disposer);\n    }\n    push(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.push(view, disposer);\n    }\n    replace(view: JSX.Element, disposer?: ()=>void): void {\n        this.nav.replace(view, disposer);\n    }\n    pop(level:number = 1) {\n        this.nav.pop(level);\n    }\n    topKey():number {\n        return this.nav.topKey();\n    }\n    popTo(key:number) {\n        this.nav.popTo(key);\n    }\n    clear() {\n        this.nav.clear();\n    }\n    navBack() {\n        this.nav.navBack();\n    }\n    ceaseTop(level?:number) {\n        this.nav.ceaseTop(level);\n    }\n    removeCeased() {\n        this.nav.removeCeased();\n    }\n    async back(confirm:boolean = true) {\n        await this.nav.back(confirm);\n    }\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.nav.regConfirmClose(confirmClose);\n    }\n    confirmBox(message?:string): boolean {\n        return this.nav.confirmBox(message);\n    }\n    async navToApp(url: string, unitId: number, apiId?:number, sheetType?:number, sheetId?:number):Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            let sheet = this.centerHost.includes('http://localhost:') === true? 'sheet_debug':'sheet'\n            let uh = sheetId === undefined?\n                    appUrl(url, unitId) :\n                    appUrl(url, unitId, sheet, [apiId, sheetType, sheetId]);\n            console.log('navToApp: %s', JSON.stringify(uh));\n            nav.push(<article className='app-container'>\n                <span id={uh.hash} onClick={()=>this.back()} /*style={mobileHeaderStyle}*/>\n                    <i className=\"fa fa-arrow-left\" />\n                </span>\n                <iframe src={uh.url} title={String(sheetId)} />\n            </article>, \n            ()=> {\n                resolve();\n            });\n        });\n    }\n\n    navToSite(url: string) {\n        // show in new window\n        window.open(url);\n    }\n\n    get logs() {return logs};\n    log(msg:string) {\n        logs.push(msg);\n    }\n    logMark() {\n        let date = new Date();\n        logMark = date.getTime();\n        logs.push('log-mark: ' + date.toTimeString());\n    }\n    logStep(step:string) {\n        logs.push(step + ': ' + (new Date().getTime() - logMark));\n    }\n}\nexport const nav: Nav = new Nav();\n","import {observable} from 'mobx';\n\nexport interface Id {\n    id: number;\n}\n\nexport abstract class CacheIds<T extends Id> {\n    constructor(maxCount:number = 100) {\n        this.maxCount = maxCount;\n    }\n    private maxCount:number;\n    private arr:T[] = [];\n    @observable dict = new Map<number, T>();\n\n    loadIds(ids:number[]) {\n        let arr:number[] = [];\n        for (let id of ids) {\n            if (id === null) continue;\n            let item = this.dict.get(id);\n            if (item === undefined) {\n                arr.push(id);\n                item = {id:id} as T;\n                this.dict.set(id, item);\n            }\n        }                \n        this.loadId(arr);\n    }\n\n    get(id:number):T {\n        if (id === undefined || id === null) return null;\n        let item = this.dict.get(id);\n        if (item === undefined) {\n            this.dict.set(id, {id:id} as T);\n            this.loadId([id]);\n            item = this.dict.get(id);\n        }\n        return item;\n    }\n    private setItem(id:number, item:T) {\n        if (item === undefined) {\n            this.dict.set(id, null);\n            this.arr.push({id: id} as T);\n        }\n        else {\n            this.dict.set(id, item);\n            this.arr.push(item);\n        }\n        if (this.arr.length > this.maxCount) {\n            item = this.arr.shift();\n            this.dict.delete(item.id);\n        }\n    }\n    private async loadId(ids:number[]) {\n        let items = await this._loadIds(ids);\n        if (items === undefined) {\n            for (let id of ids) {\n                if (id === null) continue;\n                let item = await this._loadId(id);\n                this.setItem(id, item);\n            }\n        }\n        else {\n            for (let id of ids) {\n                let item = items.find(v => v.id === id);\n                this.setItem(id, item);\n            }\n        }\n    }\n\n    protected abstract async _loadIds(ids:number[]):Promise<T[]>;\n    protected abstract async _loadId(id:number):Promise<T>;\n}\n","import _ from 'lodash';\n\nclass _LocalStorage {\n    getItem(key:string) {\n        return localStorage.getItem(key)\n    }\n    setItem(key:string, value:string) {\n        localStorage.setItem(key, value);\n    }\n    removeItem(key:string) {\n        localStorage.removeItem(key);\n    }\n}\n\nconst __ls = new _LocalStorage(); // new Ls;\n\nexport class LocalCache {\n    private readonly local: Local;\n    //private value: T;\n    readonly key: string|number;\n\n    constructor(local:Local, key:string|number) {\n        this.local = local;\n        this.key = key;\n    }\n    get():any {\n        try {\n            // 下面缓冲的内容不能有，可能会被修改，造成circular引用\n            //if (this.value !== undefined) return this.value;\n            let text = this.local.getItem(this.key);\n            if (text === null) return;\n            if (text === undefined) return undefined;\n            //return this.value = \n            return JSON.parse(text);\n        }\n        catch (err) {\n            this.local.removeItem(this.key);\n            return;\n        }\n    }\n    set(value:any) {\n        //this.value = value;\n        let t = JSON.stringify(value);\n        this.local.setItem(this.key, t);\n        /*\n        let text = Flatted.stringify(value, undefined, undefined);\n        let objs:object[] = [];\n        let circular:any = {};\n        let path:string[] = [];\n        try {\n            if (testCircular(value, objs, circular, path) === true) debugger;\n            let t = JSON.stringify(value);\n            this.local.setItem(this.key, t);\n        }\n        catch (e) {\n            let s = null;\n        }\n        */\n    }\n    remove(local?:Local) {\n        if (local === undefined) {\n            this.local.removeItem(this.key);\n            //this.value = undefined;\n        }\n        else {\n            this.local.removeLocal(local);\n        }\n    }\n    child(key:string|number):LocalCache {\n        return this.local.child(key);\n    }\n    arr(key:string|number):LocalArr {\n        return this.local.arr(key);\n    }\n    map(key:string|number):LocalMap {\n        return this.local.map(key);\n    }\n}\n\nabstract class Local {\n    private readonly caches: {[key:string]:LocalCache};\n    private readonly locals: {[key:string]:Local};\n    protected readonly name: string;\n    constructor(name: string) {\n        this.name = name;\n        this.caches = {};\n        this.locals = {};\n    }\n\n    protected abstract keyForGet(key:string|number):string;\n    protected abstract keyForSet(key:string|number):string;\n    protected abstract keyForRemove(key:string|number):string;\n    abstract removeAll():void;\n    getItem(key:string|number):string {\n        let k = this.keyForGet(key);\n        if (k === undefined) return;\n        return __ls.getItem(k);\n    }\n    setItem(key:string|number, value: string):void {\n        let k = this.keyForSet(key);\n        __ls.setItem(k, value);\n    }\n    removeItem(key:string|number):void {\n        let k = this.keyForSet(key);\n        if (k === undefined) return;\n        localStorage.removeItem(k);\n    }\n    arr(key:string|number):LocalArr {\n        let sk = String(key);\n        let arr = this.locals[sk] as LocalArr;\n        if (arr === undefined) {\n            let k = this.keyForSet(key);\n            this.locals[sk] = arr = new LocalArr(k);\n        }\n        return arr;\n    }\n    map(key:string|number):LocalMap {\n        let sk = String(key);\n        let map = this.locals[sk] as LocalMap;\n        if (map === undefined) {\n            let k = this.keyForSet(key);\n            this.locals[sk] = map = new LocalMap(k);\n        }\n        return map;\n    }\n    removeLocal(local:Local) {\n        let sk = local.name;\n        let k = this.keyForRemove(sk);\n        if (k === undefined) return;\n        let arr = this.locals[sk];\n        if (arr === undefined) arr = new LocalArr(k);\n        else this.locals[sk] = undefined;\n        arr.removeAll();\n    }\n    child(key:string|number):LocalCache {\n        let ks = String(key);\n        let ret = this.caches[ks];\n        if (ret !== undefined) return ret;\n        return this.caches[ks] =ret = new LocalCache(this, key);\n    }\n}\n\nconst maxArrSize = 500;\nexport class LocalArr extends Local {\n    private readonly index: number[];\n    constructor(name: string) {\n        super(name);\n        let index = __ls.getItem(this.name);\n        this.index = index === null? [] : index.split('\\n').map(v => Number(v));\n    }\n    private saveIndex() {\n        __ls.setItem(this.name, this.index.join('\\n'));\n    }\n    protected keyForGet(key:number):string {\n        let i = _.indexOf(this.index, key);\n        if (i < 0) return undefined;\n        return `${this.name}.${key}`;\n    }\n    protected keyForSet(key:number):string {\n        let i = _.indexOf(this.index, key);\n        if (i<0) {\n            this.index.unshift(key);\n            if (this.index.length > maxArrSize) this.index.pop();\n        }\n        else {\n            this.index.splice(i, 1);\n            this.index.unshift(key)\n        }\n        this.saveIndex();\n        return `${this.name}.${key}`;\n    }\n    protected keyForRemove(key:number):string {\n        let i = _.indexOf(this.index, key);\n        if (i<0) return;\n        this.index.splice(i, 1);\n        this.saveIndex();\n        return `${this.name}.${key}`;\n    }\n    removeAll():void {\n        for (let i of this.index) {\n            __ls.removeItem(`${this.name}.${i}`);\n        }\n        __ls.removeItem(this.name);\n        this.index.splice(0);\n    }\n    item(index:number):LocalCache {\n        return this.child(index);\n    }\n}\n\nexport class LocalMap extends Local {\n    private readonly index: {[key:string]:number};\n    private max: number;\n    constructor(name: string) {\n        super(name);\n        this.max = 0;\n        this.index = {};\n        let index = __ls.getItem(this.name);\n        if (index !== null) {\n            let ls = index.split('\\n');\n            ls.forEach(l => {\n                let p = l.indexOf('\\t');\n                if (p<0) return;\n                let key = l.substr(0, p);\n                let i = Number(l.substr(p+1));\n                if (isNaN(i) === true) return;\n                this.index[key] = i;\n                if (i>this.max) this.max = i;\n            });\n        }\n    }\n    private saveIndex() {\n        let ls:string[] = [];\n        for (let k in this.index) {\n            let v = this.index[k];\n            if (v === undefined) continue;\n            ls.push(`${k}\\t${v}`);\n        }\n        __ls.setItem(this.name, ls.join('\\n'));\n    }\n    protected keyForGet(key:number):string {\n        let i = this.index[key];\n        if (i === undefined) return undefined;\n        return `${this.name}.${i}`;\n    }\n    protected keyForSet(key:number):string {\n        let i = this.index[key];\n        if (i === undefined) {\n            ++this.max;\n            i = this.max;\n            this.index[key] = i;\n            this.saveIndex();\n        }\n        return `${this.name}.${i}`;\n    }\n    protected keyForRemove(key:string|number):string {\n        let i = this.index[key];\n        if (i===undefined) return;\n        this.index[key] = undefined;\n        this.saveIndex();\n        return `${this.name}.${i}`;\n    }\n    removeAll():void {\n        for (let i in this.index) {\n            __ls.removeItem(`${this.name}.${this.index[i]}`);\n            this.index[i] = undefined;\n        }\n        __ls.removeItem(this.name);\n        this.max = 0;\n    }\n    item(key:string):LocalCache {\n        return this.child(key);\n    }\n}\n","import { LocalMap } from './localDb';\n\nconst testingTags:string[] = ['/test', '/test/', '-test', '-test/'];\nfunction isTesting():boolean {\n    let {pathname} = document.location;\n    let pn = pathname.toLowerCase();\n    for (let item of testingTags) {\n        if (pn.endsWith(item) === true) return true;\n    }\n    return false;\n}\n\nexport const env = (function () {\n    let testing = isTesting();\n    let localDb = new LocalMap(testing===true? '$$':'$');\n    return {\n        testing: testing,\n        isDevelopment: process.env.NODE_ENV === 'development',\n        localDb: localDb,\n    }\n}());\n","import { env } from './env';\n\nexport class LocalData {\n    user = env.localDb.child('user');\n    guest = env.localDb.child('guest');\n    unit = env.localDb.child('unit');\n\n    logoutClear() {\n        [\n            this.user,\n            this.unit,\n        ].forEach(d => d.remove());\n    }\n}\n","export {left0} from './left0';\nexport * from './user';\nexport * from './uid';\nexport {PageItems} from './pageItems';\nexport {CacheIds} from './cacheIds';\nexport {LocalMap, LocalArr, LocalCache} from './localDb';\nexport {LocalData} from './local';\nexport {env} from './env';","function replacer(key:string, value:any) {\n    let first = key.substr(0, 1);\n    switch (first) {\n        default: return value;\n        case '$':\n        case '_': return;\n    }\n}\n\nexport function jsonStringify(value:any) {\n    return JSON.stringify(value, replacer, ' ');\n}\n","import * as React from 'react';\n\nexport const PureJSONContent = (values:any, x?:any) => <>content: {JSON.stringify(values)}</>;\n","export * from './jsonStringify';\nexport * from './pureJsonContent';","import _ from 'lodash';\nimport {nav} from '../components';\nimport {uid} from '../tool/uid';\nimport {uqTokenApi, callCenterapi, centerToken, setCenterToken} from './uqApi';\nimport {setSubAppWindow} from './wsChannel';\nimport { host } from './host';\n\nexport interface UqToken {\n    name: string;\n    db: string;\n    url: string;\n    token: string;\n}\nconst uqTokens:{[uqName:string]: UqToken}  = {};\nexport function logoutUqTokens() {\n    for (let i in uqTokens) {\n        uqTokens[i] = undefined;\n    }\n}\n\nexport interface AppInFrame {\n    hash: string;\n    unit: number;       // unit id\n    page?: string;\n    param?: string[];\n    predefinedUnit?: number;  // 比如像Cart这样的应用，直接让用户访问的，就需要在unit.json里面定义unitName\n}\nconst appsInFrame:{[key:string]:AppInFrame} = {};\n\nclass AppInFrameClass implements AppInFrame {\n    hash: string;\n    private _unit: number;\n    get unit(): number {return this._unit;}       // unit id\n    set unit(val:number) { this._unit=val;}\n    page?: string;\n    param?: string[];\n}\n\nexport let appInFrame:AppInFrame = new AppInFrameClass();\n/* {\n    hash: undefined,\n    get unit():number {return } undefined, //debugUnitId,\n    page: undefined;\n    param: undefined,\n}*/\n\nexport function isBridged():boolean {\n    return window.self !== window.parent;\n}\n\nwindow.addEventListener('message', async function(evt) {\n    var message = evt.data;\n    switch (message.type) {\n        case 'sub-frame-started':\n            subFrameStarted(evt);\n            break;\n        case 'ws':\n            //wsBridge.receive(message.msg);\n            await nav.onReceive(message.msg);\n            break;\n        case 'init-sub-win':\n            await initSubWin(message);\n            break;\n        case 'pop-app':\n            nav.navBack();\n            break;\n        case 'center-api':\n            await callCenterApiFromMessage(evt.source as Window, message);\n            break;\n        case 'center-api-return':\n            bridgeCenterApiReturn(message);\n            break;\n        case 'app-api':\n            let ret = await onReceiveAppApiMessage(message.hash, message.apiName);\n            (evt.source as Window).postMessage({\n                type: 'app-api-return', \n                apiName: message.apiName,\n                db: ret.db,\n                url: ret.url,\n                token: ret.token} as any, \"*\");\n            break;\n        case 'app-api-return':\n            console.log(\"app-api-return: %s\", JSON.stringify(message));\n            console.log('await onAppApiReturn(message);');\n            await onAppApiReturn(message);\n            break;\n        default:\n            this.console.log('message: %s', JSON.stringify(message));\n            break;\n    }\n});\n\nfunction subFrameStarted(evt:any) {\n    var message = evt.data;\n    let subWin = evt.source as Window;\n    setSubAppWindow(subWin);\n    hideFrameBack(message.hash);\n    let msg:any = _.clone(nav.user);\n    msg.type = 'init-sub-win';\n    subWin.postMessage(msg, '*');\n}\nfunction hideFrameBack(hash:string) {\n    let el = document.getElementById(hash);\n    if (el !== undefined) el.hidden = true;\n}\nasync function initSubWin(message:any) {\n    console.log('initSubWin: set nav.user', message);\n    let user = nav.user = message; // message.user;\n    setCenterToken(user.id, user.token);\n    await nav.showAppView();\n}\nasync function onReceiveAppApiMessage(hash: string, apiName: string): Promise<UqToken> {\n    let appInFrame = appsInFrame[hash];\n    if (appInFrame === undefined) return {name:apiName, db:undefined, url:undefined, token:undefined};\n    //let unit = getUnit();\n    let {unit, predefinedUnit} = appInFrame;\n    unit = unit || predefinedUnit;\n    if (!unit) {\n        console.error('no unit defined in unit.json or not logined in', unit);\n    }\n    let parts = apiName.split('/');\n    let param = {unit: unit, uqOwner: parts[0], uqName: parts[1]};\n    console.log('uqTokenApi.uq onReceiveAppApiMessage', param);\n    let ret = await uqTokenApi.uq(param);\n    let {db, url, token} = ret;\n    return {name: apiName, db:db, url: url, token: token};\n}\n\nasync function onAppApiReturn(message:any) {\n    let {apiName, db, url, urlTest, token} = message;\n    let action = uqTokenActions[apiName];\n    if (action === undefined) {\n        throw new Error('error app api return');\n        //return;\n    }\n    let realUrl = host.getUrlOrTest(db, url, urlTest);\n    console.log('onAppApiReturn(message:any): url=' + url + ', real=' + realUrl);\n    //action.url = realUrl;\n    //action.token = token;\n    action.resolve({\n        name: apiName,\n        db: db,\n        url: realUrl,\n        token: token,\n    } as UqToken);\n}\n\nexport function setAppInFrame(appHash: string):AppInFrame {\n    if (appHash) {\n        let parts = appHash.split('-');\n        let len = parts.length;\n        if (len > 0) {\n            let p = 1;\n            appInFrame.hash = parts[p++];\n            if (len>0) appInFrame.unit = Number(parts[p++]);\n            if (len>1) appInFrame.page = parts[p++];\n            if (len>2) appInFrame.param = parts.slice(p++);\n        }\n    }\n    return appInFrame;\n}\n\nexport function getExHashPos():number {\n    let hash = document.location.hash;\n    if (hash !== undefined && hash.length > 0) {\n        let pos = hash.lastIndexOf('#tv-');\n        if (pos < 0) pos = hash.lastIndexOf('#tvdebug-');\n        return pos;\n    }\n    return -1;\n}\n\nexport function getExHash():string {\n    let pos = getExHashPos();\n    if (pos < 0) return undefined;\n    return document.location.hash.substring(pos);\n}\n\nexport function appUrl(url: string, unitId: number, page?:string, param?:any[]):{url:string; hash:string} {\n    let u:string;\n    for (;;) {\n        u = uid();\n        let a = appsInFrame[u];\n        if (a === undefined) {\n            appsInFrame[u] = {hash:u, unit:unitId};\n            break;\n        }\n    }\n    url += '#tv-' + u + '-' + unitId;\n    if (page !== undefined) {\n        url += '-' + page;\n        if (param !== undefined) {\n            for (let i=0; i<param.length; i++) {\n                url += '-' + param[i];\n            }\n        }\n    }\n    return {url: url, hash: u};\n}\n\nfunction getUnit():number {\n    let {unit, predefinedUnit} = appInFrame;\n    let realUnit = unit || predefinedUnit;\n    if (realUnit === undefined) {\n        throw new Error('no unit defined in unit.json or not logined in');\n    }\n    return realUnit;\n}\n\ninterface UqTokenAction {\n    resolve: (value?: UqToken | PromiseLike<UqToken>) => void;\n    reject: (reason?: any) => void;\n}\nconst uqTokenActions:{[uq:string]: UqTokenAction} = {};\nexport async function buildAppUq(uq:string, uqOwner:string, uqName:string):Promise<void> {\n    if (!isBridged()) {\n        let unit = getUnit();\n        let uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {db, url, urlTest} = uqToken;\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"**** before buildAppUq ****\", appInFrame);\n    let bp = uqTokenActions[uq];\n    if (bp !== undefined) return;\n    return new Promise<void>((resolve, reject) => {\n        uqTokenActions[uq] = {\n            resolve: async (at:any) => {\n                let {db, url, token} = await at;\n                uqTokens[uq] = {\n                    name: uq,\n                    db: db,\n                    url: url,\n                    token: token,\n                };\n                uqTokenActions[uq] = undefined;\n                console.log(\"**** after buildAppUq ****\", appInFrame);\n                resolve();\n            },\n            reject: reject,\n        };\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: appInFrame.hash,\n        }, \"*\");\n    });\n}\n\nexport function appUq(uq:string):UqToken {\n    let uts = uqTokens;\n    return uts[uq];\n}\n/*\nexport async function appUq(uq:string, uqOwner:string, uqName:string): Promise<UqToken> {\n    let uqToken = uqTokens[uq];\n    if (uqToken !== undefined) return uqToken;\n    if (!isBridged()) {\n        let unit = getUnit();\n        uqToken = await uqTokenApi.uq({unit:unit, uqOwner:uqOwner, uqName:uqName});\n        if (uqToken.token === undefined) uqToken.token = centerToken;\n        let {url, urlDebug} = uqToken;\n        let realUrl = host.getUrlOrDebug(url, urlDebug);\n        console.log('realUrl: %s', realUrl);\n        uqToken.url = realUrl;\n        uqTokens[uq] = uqToken;\n        return uqToken;\n    }\n    console.log(\"appApi parent send: %s\", appInFrame.hash);\n    uqToken = {\n        name: uq,\n        url: undefined,\n        urlDebug: undefined,\n        token: undefined,\n        resolve: undefined,\n        reject: undefined,\n    };\n    uqTokens[uq] = uqToken;\n    return new Promise<UqToken>((resolve, reject) => {\n        uqToken.resolve = async (at) => {\n            let a = await at;\n            console.log('return from parent window: %s', JSON.stringify(a));\n            uqToken.url = a.url;\n            uqToken.urlDebug = a.urlDebug;\n            uqToken.token = a.token;\n            resolve(uqToken);\n        }\n        uqToken.reject = reject;\n        (window.opener || window.parent).postMessage({\n            type: 'app-api',\n            apiName: uq,\n            hash: appInFrame.hash,\n        }, \"*\");\n    });\n}\n*/\ninterface BridgeCenterApi {\n    id: string;\n    resolve: (value?:any)=>any;\n    reject: (reason?:any)=>void;\n}\nconst brideCenterApis:{[id:string]: BridgeCenterApi} = {};\nexport async function bridgeCenterApi(url:string, method:string, body:any):Promise<any> {\n    console.log('bridgeCenterApi: url=%s, method=%s', url, method);\n    return await new Promise<any>(async (resolve, reject) => {\n        let callId:string;\n        for (;;) {\n            callId = uid();\n            let bca = brideCenterApis[callId];\n            if (bca === undefined) {\n                brideCenterApis[callId] = {\n                    id: callId,\n                    resolve: resolve,\n                    reject: reject,\n                }\n                break;\n            }\n        }\n        (window.opener || window.parent).postMessage({\n            type: 'center-api',\n            callId: callId,\n            url: url,\n            method: method,\n            body: body\n        }, '*');\n    });\n}\n\nasync function callCenterApiFromMessage(from:Window, message):Promise<void> {\n    let {callId, url, method, body} = message;\n    let result = await callCenterapi.directCall(url, method, body);\n    from.postMessage({\n        type: 'center-api-return',\n        callId: callId,\n        result: result,\n    }, '*');\n}\n\nfunction bridgeCenterApiReturn(message:any) {\n    let {callId, result} = message;\n    let bca = brideCenterApis[callId];\n    if (bca === undefined) return;\n    brideCenterApis[callId] = undefined;\n    bca.resolve(result);\n}\n","import * as React from 'react';\nimport {IComputedValue} from 'mobx';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport {PageHeader} from './pageHeader';\n\nexport interface ScrollProps {\n    onScroll?: (e:any) => void;\n    onScrollTop?: () => void;\n    onScrollBottom?: () => void;\n}\ninterface ScrollViewProps extends ScrollProps {\n    className?: string;\n}\nconst scrollTimeGap = 100;\nclass ScrollView extends React.Component<ScrollViewProps, null> {\n    private bottomTime:number = 0;\n    private topTime:number = 0;\n\n    private onScroll = async (e) => {\n        let {onScroll, onScrollTop, onScrollBottom} = this.props;\n        if (onScroll) this.props.onScroll(e);\n        let el = e.target as HTMLBaseElement;\n        if (el.scrollTop < 30) {\n            //this.eachChild(this, 'top');\n            if (onScrollTop !== undefined) {\n                let topTime = new Date().getTime();\n                if (topTime-this.topTime > scrollTimeGap) {\n                    this.topTime = topTime;\n                    onScrollTop();\n                }\n            }\n        }\n        if (el.scrollTop + el.offsetHeight > el.scrollHeight - 30) {\n            //this.eachChild(this, 'bottom');\n            if (onScrollBottom !== undefined) {\n                let bottomTime = new Date().getTime();\n                if (bottomTime - this.bottomTime > scrollTimeGap) {\n                    this.bottomTime = bottomTime;\n                    onScrollBottom();\n                }\n            }\n        }\n    }\n    private eachChild(c:any, direct:'top'|'bottom') {\n        let { props } = c;\n        if (props === undefined)\n            return;\n        let { children } = props;\n        if (children === undefined)\n            return;\n        React.Children.forEach(children, (child, index) => {\n            let {_$scroll} = child as any;\n            if (_$scroll) _$scroll(direct);\n            console.log(child.toString());\n            this.eachChild(child, direct);\n        });\n    }\n    render() {\n        return (\n            <main className={this.props.className} onScroll={this.onScroll}>\n                {this.props.children}\n            </main>\n        );\n    }\n}\n\nexport interface Tab extends ScrollProps {\n    title: string | JSX.Element;    \n    icon?: string;\n    className?: string;\n    content?: JSX.Element | (()=>JSX.Element);\n    header?: string;\n    isSelected?: boolean;\n    redDot?: IComputedValue<number>;\n    load?: () => Promise<void>;\n}\nexport interface TabState extends Tab {\n    isMounted?: boolean;\n}\nexport interface PageProps extends ScrollProps {\n    back?: 'close' | 'back' | 'none';\n    header?: boolean | string | JSX.Element;\n    keepHeader?: boolean;\n    right?: JSX.Element;\n    sideBar?: JSX.Element;\n    footer?: JSX.Element;\n    tabs?: Tab[];\n    tabPosition?: 'top' | 'bottom';\n    logout?: boolean | (()=>Promise<void>);\n    headerClassName?: string;\n}\nexport interface PageState {\n    cur?: Tab;\n    tabs?: TabState[];\n}\n\n@observer\nexport class Page extends React.Component<PageProps, PageState> {\n    private tabs:TabState[];\n    constructor(props: PageProps) {\n        super(props);\n        let {tabs} = props;\n        if (tabs === undefined || tabs.length === 0) return;\n        this.tabs = tabs;\n        let cur:Tab;\n        let tabStates:Tab[] = [];\n        for (let tab of tabs) {\n            let t:TabState = _.clone(tab);\n            if (cur === undefined) {\n                if (t.isSelected === true)\n                    cur = t;\n                else\n                    t.isSelected = false;\n            }\n            else {\n                t.isSelected = false;\n            }\n            t.isMounted = false;\n            tabStates.push(t);\n        }\n        this.state = {\n            cur: cur,\n            tabs: tabStates,\n        };\n    }\n\n    async componentDidMount() {\n        if (this.tabs === undefined) return;\n        let t0 = this.state.tabs.find(v => v.isSelected === true);\n        if (t0 === undefined) {\n            t0 = this.state.tabs[0];\n            if (t0 === undefined) return;\n        }\n        await t0.load && await t0.load();\n        //await this.onTabClick(t0);\n    }\n\n    private async onTabClick(tab: TabState) {\n        if (tab.isSelected === true) return;\n        let cur:TabState;\n        let tabs = this.state.tabs;\n        for (let t of tabs) {\n            if (t === tab) {\n                t.isSelected = true;\n                cur = t;\n            }\n            else\n                t.isSelected = false;\n        }\n        if (cur.isMounted !== true) {\n            let {load} = cur;\n            if (load !== undefined) {\n                await load();\n            }\n        }\n        this.setState({\n            cur: cur,\n            tabs: tabs\n        });\n    }\n\n    private onTouchStart(evt: React.TouchEvent<HTMLElement>) {\n    }\n\n    private renderTabs(footer: JSX.Element) {\n        const {header, back, right, keepHeader, headerClassName, tabPosition} = this.props;\n        let cur = this.state.cur;\n        let tabs = <div>{\n                this.state.tabs.map((tab, index) => {\n                    const {icon, isSelected, title, redDot, className} = tab;\n                    let img:any, redDotView:any, cn:any;\n                    if (icon !== undefined) img = <img src={icon} alt=\"tab icon\" />;\n                    if (redDot !== undefined) {\n                        let v = redDot.get();\n                        if (v < 0) {\n                            cn = classNames('red-dot', className);\n                            redDotView = <u />;\n                        }\n                        else if (v > 0) {\n                            cn = classNames('red-dot', 'num', className);\n                            redDotView = <u>{v}</u>;\n                        }\n                    }\n                    return <div key={index}\n                        className= {classNames('va-tab', {cur: isSelected})}\n                        onClick={() => this.onTabClick(tab)}>\n                        {img}<div className={cn}>{title}{redDotView}</div>\n                    </div>\n                })\n            }</div>;\n        let pageHeader = header !== false &&\n            <PageHeader \n                back={back} \n                center={keepHeader===true? (header as string) : (cur && (cur.header || cur.title))}\n                right={right}\n                className={headerClassName}\n            />;\n\n        return <article className='page-container'>\n            {pageHeader}\n            {tabPosition==='top' && tabs}\n            <section className=\"position-relative\">\n            {this.props.sideBar}\n            {\n                this.state.tabs.map((tab, index) => {\n                    let {isSelected, isMounted, content} = tab;\n                    if (isSelected === true || isMounted === true) {\n                        tab.isMounted = true;\n                        return <ScrollView key={index}\n                            className={classNames({invisible: isSelected===false})}\n                            onScroll={tab.onScroll}\n                            onScrollTop={tab.onScrollTop}\n                            onScrollBottom={tab.onScrollBottom}\n                        >\n                            {(typeof content)==='function'? (content as ()=>JSX.Element)():content}\n                        </ScrollView>;\n                    }\n                    return undefined;\n                })\n            }\n            </section>\n            {tabPosition!=='top' && tabs}\n            {footer}\n        </article>;\n    }\n    private renderSingle(footer: JSX.Element) {\n        const {back, header, right, onScroll, onScrollTop, onScrollBottom, children, headerClassName} = this.props;\n        let pageHeader = header !== false && <PageHeader \n            back={back} \n            center={header as any}\n            right={right}\n            logout={this.props.logout}\n            className={headerClassName}\n        />;\n        return (\n            <article className='page-container' onTouchStart={this.onTouchStart}>\n                {pageHeader}\n                <section className=\"position-relative\">\n                    {this.props.sideBar}\n                    <ScrollView\n                        onScroll={onScroll}\n                        onScrollTop={onScrollTop}\n                        onScrollBottom={onScrollBottom}\n                    >\n                        {children}\n                    </ScrollView>\n                </section>\n                {footer}\n            </article>\n        );\n    }\n\n    render() {\n        const {footer} = this.props;\n        let elFooter = footer !== undefined && <footer>{footer}</footer>;\n        if (this.tabs !== undefined)\n            return this.renderTabs(elFooter);\n        else\n            return this.renderSingle(elFooter);\n    }\n}\n","//import _ from 'lodash';\nimport { Caller } from '../net';\nimport { Entity } from './entity';\nimport { Action } from './action';\nimport { Query } from './query';\n\ninterface UqResponseSchema {\n    uq: any;\n    entity: any;\n}\n\nexport abstract class EntityCaller<T> extends Caller<T> {\n    private tries: number;\n    protected _entity: Entity;\n\n    constructor(entity: Entity, params:T) {\n        super(params);\n        this.tries = 0;\n        this._entity = entity;\n    }\n\n    protected get entity(): Entity {return this._entity;}\n\n    //大多的entityCaller都不需要这个\n    //buildParams() {return this.entity.buildParams(this.params);}\n    \n    async request(): Promise<any> {\n        await this.entity.loadSchema();\n        let ret = await this.innerRequest();\n        return ret;\n    }\n\n    protected async innerCall(): Promise<any> {\n        return await this.entity.uqApi.xcall(this);\n    }\n\n    async innerRequest(): Promise<any> {\n        let jsonResult = await this.innerCall();\n        let {$uq, $modify, res} = jsonResult;\n        this.entity.uq.pullModify($modify);\n        if ($uq === undefined) {\n            //if (res === undefined) debugger;\n            let ret = this.xresult(res);\n            //if (ret === undefined) debugger;\n            return ret;\n        }\n        return await this.retry($uq);\n    }\n\n    xresult(res:any):any {return res}\n\n    get headers(): {[header:string]: string} {\n        let {ver, uq} = this.entity;\n        let {uqVersion} = uq;\n        return {\n            uq: `${uqVersion}`,\n            en: `${ver}`,\n        }\n    }\n\n    private async retry(schema: UqResponseSchema) {\n        ++this.tries;\n        if (this.tries > 5) throw new Error('can not get right uq response schema, 5 tries');\n        this.rebuildSchema(schema);\n        return await this.innerRequest();\n    }\n\n    private rebuildSchema(schema: UqResponseSchema) {\n        let {uq, entity} = schema;\n        if (uq !== undefined) this.entity.uq.buildEntities(uq);\n        if (entity !== undefined) this.entity.setSchema(entity);\n    }\n}\n\nexport abstract class ActionCaller extends EntityCaller<any> {\n    protected entity: Action;\n}\n\nexport class QueryQueryCaller extends EntityCaller<any> {\n    protected get entity(): Query {return this._entity as Query};\n    get path():string {return `query/${this.entity.name}`;}\n    xresult(res:any) {\n        let data = this.entity.unpackReturns(res);\n        return data;\n    }\n    buildParams() {return this.entity.buildParams(this.params);}\n}\n\nexport class QueryPageCaller extends EntityCaller<any> {\n    protected readonly params: {pageStart:any; pageSize:number, params:any};\n    protected get entity(): Query {return this._entity as Query};\n    get path():string {return `query-page/${this.entity.name}`;}\n    buildParams() {\n        let {pageStart, pageSize, params} = this.params;\n        let p:any;\n        if (params === undefined) {\n            p = {key: ''};\n        }\n        else {\n            p = this.entity.buildParams(params);\n        }\n        /*\n        switch (typeof params) {\n            case 'undefined': p = {key: ''}; break;\n            default: p = _.clone(params); break;\n        }\n        */\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        return p;\n    };\n    xresult(res:any) {\n        let data = this.entity.unpackReturns(res);\n        return data.$page;// as any[];\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { jsonStringify, PureJSONContent } from '../tools';\n\nexport type TypeViewModel = typeof ViewModel;\nexport type TypeView = React.StatelessComponent<{vm: ViewModel, className?:string|string[]}>;\nexport type TypeContent = React.StatelessComponent<any>;\n\nexport abstract class ViewModel {\n    protected abstract get view(): TypeView;\n    render(className?:string|string[]):JSX.Element {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view, {vm: this, className:className});\n    }\n}\n\n/*\nexport const PureJSONContent = (values:any, x?:any) => {\n    return <>content: {jsonStringify(values)}</>;\n}\n*/\n\nexport const JSONContent = observer(PureJSONContent);\nexport const RowContent = \n    (values:any) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>\n;\n","import {bridgeCenterApi, isBridged} from './appBridge';\nimport {FetchError} from './fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from '../components/nav';\nimport { Caller } from './caller';\nimport { env } from '../tool';\n\n/*\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(false, url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n*/\n\nconst methodsWithBody = ['POST', 'PUT'];\n\nexport abstract class HttpChannel {\n    private timeout: number;\n    protected ui?: HttpChannelUI;\n    protected hostUrl: string;\n    protected apiToken: string;\n\n    constructor(hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = env.isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async xcall(urlPrefix:string, caller:Caller<any>): Promise<void> {\n        let options = this.buildOptions();\n        let {headers, path, method} = caller;\n        if (headers !== undefined) {\n            let h = options.headers;\n            for (let i in headers) {\n                h.append(i, encodeURI(headers[i]));\n            }\n        }\n        options.method = method;\n        let p = caller.buildParams();\n        if (methodsWithBody.indexOf(method) >= 0 && p !== undefined) {\n            options.body = JSON.stringify(p)\n        }\n        return await this.innerFetch(urlPrefix + path, options);\n    }\n\n    private async innerFetchResult(url: string, options: any): Promise<any> {\n        let ret = await this.innerFetch(url, options);\n        return ret.res;\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetchResult(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetchResult(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetchResult(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetchResult(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: any) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        if (typeof retJson !== 'object') {\n                            debugger;\n                        }\n                        else if (Array.isArray(retJson) === true) {\n                            debugger;\n                        }\n                        /*\n                        let json = retJson.res;\n                        if (json === undefined) {\n                            json = {\n                                $uq: retJson.$uq\n                            }\n                        }\n                        */\n                        //json.$modify = retJson.$modify;\n                        //return resolve(json);\n                        return resolve(retJson);\n                    }\n                    let retError = retJson.error;\n                    if (retError === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retError));\n                        reject(retError);\n                    }\n                }).catch(async error => {\n                    await that.showError(buildError(error));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                let err = error.toLowerCase();\n                if (err.startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    protected abstract async innerFetch(url: string, options: any): Promise<any>;\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): {method:string; headers:Headers; body:any} {\n        let headers = this.buildHeaders();\n        let options = {\n            headers: headers,\n            method: undefined,\n            body: undefined,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n\n    protected buildHeaders():Headers {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        return headers;\n    }\n}\n\nexport class CenterHttpChannel extends HttpChannel {\n    protected async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        if (this.apiToken === undefined && isBridged())\n            return await bridgeCenterApi(u, options.method, options.body);\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n}\n\nexport class UqHttpChannel extends HttpChannel {\n    /*\n    private uqForChannel: IUqForChannel;\n    constructor(hostUrl: string, apiToken:string, uqForChannel: IUqForChannel, ui?: HttpChannelUI) {\n        super(hostUrl, apiToken, ui);\n        this.uqForChannel = uqForChannel;\n    }\n    */\n    protected async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    /*\n    protected buildHeaders():Headers {\n        let headers = super.buildHeaders();\n        if (this.uqForChannel !== undefined) {\n            let {uqVersion} = this.uqForChannel;\n            if (uqVersion !== undefined) {\n                headers.append('tonva-uq-version', String(uqVersion));\n            }\n        }\n        return headers;\n    }\n\n    protected async showSpecificError(err:string):Promise<boolean> {\n        if (err === 'unmatched uq version') {\n            if (this.ui !== undefined) {\n                let uq:string, uqVersion:number;\n                if (this.uqForChannel !== undefined) {\n                    uq = this.uqForChannel.uq;\n                    uqVersion = this.uqForChannel.uqVersion;\n                }\n                else {\n                    uq = 'undefined uq';\n                    uqVersion = 0;\n                }\n                await this.ui.showUpgradeUq(uq, uqVersion);\n                return true;\n            }\n        }\n        return false;\n    }\n    */\n}\n","import {nav} from '../components/nav';\nimport {FetchError} from './fetchError';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:FetchError):Promise<void>;\n    showUpgradeUq(uq:string, version:number):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:FetchError):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n    async showUpgradeUq(uq:string, version:number):Promise<void> {\n        await nav.showUpgradeUq(uq, version);\n    }\n}\n\n","import _ from 'lodash';\nimport {HttpChannel, CenterHttpChannel, UqHttpChannel} from './httpChannel';\nimport {HttpChannelNavUI} from './httpChannelUI';\nimport {appUq, logoutUqTokens, buildAppUq} from './appBridge';\nimport {ApiBase} from './apiBase';\nimport { host } from './host';\nimport { nav } from '../components';\nimport { LocalCache, LocalMap, env } from '../tool';\n\nlet channelUIs:{[name:string]: HttpChannel} = {};\nlet channelNoUIs:{[name:string]: HttpChannel} = {};\n\nexport function logoutApis() {\n    channelUIs = {};\n    channelNoUIs = {};\n    logoutUnitxApis();\n    logoutUqTokens();\n}\n\ninterface UqLocal {\n    user: number;\n    unit: number;\n    value: any;\n    tick?: number;\n    isNet?: boolean;\n}\ninterface UqLocals {\n    user: number;\n    unit: number;\n    uqs: {[uq:string]: UqLocal};\n}\n/*\nconst uqLocalEntities = 'uqLocalEntities';\nclass CacheUqLocals {\n    private local:UqLocals;\n\n    async loadAccess(uqApi: UqApi):Promise<any> {\n        try {\n            let {uqOwner, uqName} = uqApi;\n            if (this.local === undefined) {\n                let ls = null; // localStorage.getItem(uqLocalEntities);\n                if (ls !== null) {\n                    this.local = JSON.parse(ls);\n                }\n            }\n            if (this.local !== undefined) {\n                let {user, uqs} = this.local;\n                if (user !== loginedUserId || uqs === undefined) {\n                    this.local = undefined;\n                }\n                else {\n                    for (let i in uqs) {\n                        let ul = uqs[i];\n                        ul.isNet = undefined;\n                    }\n                }\n            }\n            if (this.local === undefined) {\n                this.local = {\n                    user: loginedUserId,\n                    unit: undefined,\n                    uqs: {}\n                };\n            }\n\n            let ret: any;\n            let un = uqOwner+'/'+uqName;\n            let uq = this.local.uqs[un];\n            if (uq !== undefined) {\n                let {value} = uq;\n                ret = value;\n            }\n            if (ret === undefined) {\n                ret = await uqApi.__loadAccess();\n                //this.saveLocal(un, ret);\n            }\n            return _.cloneDeep(ret);\n        }\n        catch (err) {\n            this.local = undefined;\n            localStorage.removeItem(uqLocalEntities);\n            throw err;\n        }\n    }\n\n    private saveLocal(uqName:string, accessValue: any) {\n        this.local.uqs[uqName] = {\n            value: accessValue,\n            isNet: true,\n        }\n        let str = JSON.stringify(this.local);\n        localStorage.setItem(uqLocalEntities, str);\n    }\n\n    async checkAccess(uqApi: UqApi):Promise<boolean> {\n        if (this.local === undefined) return false;\n        let {uqOwner, uqName} = uqApi;\n        let un = uqOwner+'/'+uqName;\n        let uq = this.local.uqs[un];\n        if (uq === undefined) return false;\n        let {isNet, value} = uq;\n        if (isNet === true) return true;\n        let ret = await uqApi.__loadAccess();\n        let isMatch = _.isMatch(value, ret);\n        if (isMatch === false) {\n            this.saveLocal(un, ret);\n            return false;\n        }\n        uq.isNet = true;\n        return true;\n    }\n}\n\nconst localUqs = new CacheUqLocals;\n*/\nexport class UqApi extends ApiBase {\n    private access:string[];\n    uqOwner: string;\n    uqName: string;\n    uq: string;\n    //uqVersion: number;\n\n    constructor(basePath: string, uqOwner: string, uqName: string, access:string[], showWaiting?: boolean) {\n        super(basePath, showWaiting);\n        if (uqName) {\n            this.uqOwner = uqOwner;\n            this.uqName = uqName;\n            this.uq = uqOwner + '/' + uqName;\n        }\n        this.access = access;\n        this.showWaiting = showWaiting;\n    }\n\n    //setUqVersion(uqVersion:number) {this.uqVersion = undefined}\n\n    async init() {\n        await buildAppUq(this.uq, this.uqOwner, this.uqName);\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channels: {[name:string]: HttpChannel};\n        let channelUI: HttpChannelNavUI;\n        if (this.showWaiting === true || this.showWaiting === undefined) {\n            channels = channelUIs;\n            channelUI = new HttpChannelNavUI();\n        }\n        else {\n            channels = channelNoUIs;\n        }\n        let channel = channels[this.uq];\n        if (channel !== undefined) return channel;\n        let uqToken = appUq(this.uq); //, this.uqOwner, this.uqName);\n        if (!uqToken) {\n            debugger;\n            await this.init();\n            uqToken = appUq(this.uq);\n        }\n        let {url, token} = uqToken;\n        this.token = token;\n        channel = new UqHttpChannel(url, token, channelUI);\n        return channels[this.uq] = channel;\n    }\n\n    /*async update():Promise<string> {\n        return await this.get('update');\n    }*/\n\n    /*\n    async __loadAccess():Promise<any> {\n        let acc = this.access === undefined?\n            '' :\n            this.access.join('|');\n        let ret = await this.get('access', {acc:acc});\n        return ret;\n    }\n    */\n    async loadAccess():Promise<any> {\n        //return await localUqs.loadAccess(this);\n        let acc = this.access === undefined?\n            '' :\n            this.access.join('|');\n        let ret = await this.get('access', {acc:acc});\n        return ret;\n    }\n\n    /*async loadEntities():Promise<any> {\n        return await this.get('entities');\n    }*/\n\n    /*\n    async checkAccess():Promise<boolean> {\n        return await localUqs.checkAccess(this);\n    }\n    */\n\n    async schema(name:string):Promise<any> {\n        return await this.get('schema/' + name);\n    }\n\n    async queueModify(start:number, page:number, entities:string) {\n        return await this.post('queue-modify', {start:start, page:page, entities:entities});\n    }\n\n    /*async schemas(names:string[]):Promise<any[]> {\n        return await this.post('schema', names);\n    }*/\n\n    /*\n    async tuidGet(name:string, id:number):Promise<any> {\n        return await this.get('tuid/' + name + '/' + id);\n    }\n\n    async tuidGetAll(name:string):Promise<any[]> {\n        return await this.get('tuid-all/' + name + '/');\n    }\n\n    async tuidSave(name:string, params:any):Promise<any> {\n        return await this.post('tuid/' + name, params);\n    }\n\n    async tuidSearch(name:string, arr:string, owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        let ret = await this.post('tuids/' + name, {\n            arr: arr,\n            owner: owner,\n            key: key,\n            pageStart: pageStart,\n            pageSize: pageSize\n        });\n        return ret;\n    }\n    async tuidArrGet(name:string, arr:string, owner:number, id:number):Promise<any> {\n        return await this.get('tuid-arr/' + name + '/' + owner + '/' + arr + '/' + id);\n    }\n    async tuidArrGetAll(name:string, arr:string, owner:number):Promise<any[]> {\n        return await this.get('tuid-arr-all/' + name + '/' + owner + '/' + arr + '/');\n    }\n    async tuidArrSave(name:string, arr:string, owner:number, params:any):Promise<any> {\n        return await this.post('tuid-arr/' + name + '/' + owner + '/' + arr + '/', params);\n    }\n    async tuidArrPos(name:string, arr:string, owner:number, id:number, order:number):Promise<any> {\n        return await this.post('tuid-arr-pos/' + name + '/' + owner + '/' + arr + '/', {\n            id: id,\n            $order: order\n        });\n    }\n\n    async tuidIds(name:string, arr:string, ids:number[]):Promise<any[]> {\n        try {\n            let url = 'tuidids/' + name + '/';\n            if (arr !== undefined) url += arr;\n            else url += '$';\n            let ret = await this.post(url, ids);\n            return ret;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    */\n    /*async sheetSave(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name, data);\n    }*/\n\n    /*async sheetAction(name:string, data:object) {\n        return await this.put('sheet/' + name, data);\n    }*/\n\n    /*async stateSheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/states', data);\n    }*/\n\n    /*async stateSheetCount(name:string):Promise<any> {\n        return await this.get('sheet/' + name + '/statecount');\n    }*/\n\n    /*async mySheets(name:string, data:object) {\n        return await this.post('sheet/' + name + '/my-sheets', data);\n    }*/\n\n    /*async getSheet(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/get/' + id);\n    }*/\n\n    /*async sheetArchives(name:string, data:object):Promise<any> {\n        return await this.post('sheet/' + name + '/archives', data);\n    }\n\n    async sheetArchive(name:string, id:number):Promise<any> {\n        return await this.get('sheet/' + name + '/archive/' + id);\n    }*/\n\n    /*async action(name:string, data:object):Promise<any> {\n        return await this.post('action/' + name, data);\n    }\n\n    async actionReturns(name:string, data:object):Promise<any[][]> {\n        return await this.post('action/' + name + '/returns', data);\n    }\n\n    async page(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p:any;\n        switch (typeof params) {\n            case 'undefined': p = {key: ''}; break;\n            default: p = _.clone(params); break;\n        }\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        return await this.post('query-page/' + name, p);\n    }\n\n    async query(name:string, params:any):Promise<any> {\n        let ret = await this.post('query/' + name, params);\n        return ret;\n    }\n    */\n/*\n    async history(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n\n    async book(name:string, pageStart:any, pageSize:number, params:any):Promise<string> {\n        let p = _.clone(params);\n        p['$pageStart'] = pageStart;\n        p['$pageSize'] = pageSize;\n        let ret = await this.post('history/' + name, p);\n        return ret;\n    }\n*/\n    /*async user():Promise<any> {\n        return await this.get('user');\n    }*/\n}\n\nlet channels:{[unitId:number]: HttpChannel} = {};\n\nexport function logoutUnitxApis() {\n    channels = {};\n}\n\nexport class UnitxApi extends UqApi {\n    private unitId:number;\n    constructor(unitId:number) {\n        super('tv/', undefined, undefined, undefined, true);\n        this.unitId = unitId;\n    }\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        let channel = channels[this.unitId];\n        if (channel !== undefined) return channel;\n        return channels[this.unitId] = await this.buildChannel();\n    }\n\n    private async buildChannel():Promise<HttpChannel> {\n        let channelUI = new HttpChannelNavUI();\n        let centerAppApi = new CenterAppApi('tv/', undefined);\n        let ret = await centerAppApi.unitxUq(this.unitId);\n        let {token, db, url, urlTest} = ret;\n        let realUrl = host.getUrlOrTest(db, url, urlTest);\n        this.token = token;\n        return new UqHttpChannel(realUrl, token, channelUI);\n    }\n}\n\nlet centerHost:string;\n\nexport function setCenterUrl(url:string) {\n    console.log('setCenterUrl %s', url);\n    centerHost = url;\n    centerToken = undefined;\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nexport let centerToken:string|undefined = undefined;\n\nlet loginedUserId:number = 0;\nexport function setCenterToken(userId:number, t?:string) {\n    loginedUserId = userId;\n    centerToken = t;\n    console.log('setCenterToken %s', t);\n    centerChannel = undefined;\n    centerChannelUI = undefined;\n}\n\nlet centerChannelUI:HttpChannel;\nlet centerChannel:HttpChannel;\nfunction getCenterChannelUI():HttpChannel {\n    if (centerChannelUI !== undefined) return centerChannelUI;\n    return centerChannelUI = new CenterHttpChannel(centerHost, centerToken, new HttpChannelNavUI());\n}\nfunction getCenterChannel():HttpChannel {\n    if (centerChannel !== undefined) return centerChannel;\n    return centerChannel = new CenterHttpChannel(centerHost, centerToken);\n}\n\nexport abstract class CenterApiBase extends ApiBase {\n    /*\n    constructor(path: string, showWaiting?: boolean) {\n        super(path, showWaiting);\n    }*/\n\n    protected async getHttpChannel(): Promise<HttpChannel> {\n        return (this.showWaiting === true || this.showWaiting === undefined)?\n            getCenterChannelUI():\n            getCenterChannel();\n    }\n}\n\nconst uqTokensName = 'uqTokens';\nexport class UqTokenApi extends CenterApiBase {\n    private localMap: LocalMap = env.localDb.map(uqTokensName);\n\n    async uq(params: {unit:number, uqOwner:string, uqName:string}):Promise<any> {\n        let {uqOwner, uqName} = params;\n        let un = uqOwner+'/'+uqName;\n        let localCache = this.localMap.child(un);\n        try {\n            let uqToken:UqLocal = localCache.get();\n            if (uqToken !== undefined) {\n                let {unit, user} = uqToken;\n                if (unit !== params.unit || user !== loginedUserId) {\n                    localCache.remove();\n                    uqToken = undefined;\n                }\n            }\n            let nowTick = Math.floor(Date.now() / 1000);\n            if (uqToken !== undefined) {\n                let {tick, value} = uqToken;\n                if (value !== undefined && (nowTick - tick) < 24*3600) {\n                    return _.clone(value);\n                }\n            }\n            let appUqParams:any = _.clone(params);\n            appUqParams.testing = host.testing;\n            let ret = await this.get('app-uq', appUqParams);\n            if (ret === undefined) {\n                let {unit, uqOwner, uqName} = params;\n                let err = `center get app-uq(unit=${unit}, '${uqOwner}/${uqName}') - not exists or no unit-service`;\n                throw err;\n            }\n\n            uqToken = {\n                unit: params.unit,\n                user: loginedUserId,\n                tick: nowTick,\n                value: ret,\n            }\n            localCache.set(uqToken);\n            return _.clone(ret);\n        }\n        catch (err) {\n            localCache.remove();\n            throw err;\n        }\n    }\n}\n\nexport const uqTokenApi = new UqTokenApi('tv/tie/', undefined);\n\nexport class CallCenterApi extends CenterApiBase {\n    directCall(url:string, method:string, body:any):Promise<any> {\n        return this.call(url, method, body);\n    }\n}\nexport const callCenterapi = new CallCenterApi('', undefined);\n\nexport interface UqAppData {\n    appName: string;\n    appOwner: string;\n    id: number;\n    version: string;        // AppUI version\n    uqs: UqData[];\n}\n\nexport interface UqData {\n    id: number;\n    uqOwner: string;\n    uqName: string;\n    access: string;\n    newVersion: boolean;\n}\n\nexport interface UqServiceData {\n    id: number;\n    db: string;\n    url: string;\n    urlTest: string;\n    token: string;\n}\n\nconst appUqsName = 'appUqs';\n\nexport class CenterAppApi extends CenterApiBase {\n    private local: LocalCache = env.localDb.item(appUqsName);\n    //private cachedUqs: UqAppData;\n    async uqs(appOwner:string, appName:string):Promise<UqAppData> {\n        let ret:UqAppData;\n        let appUqs = this.local.get();\n        if (appUqs) {\n            let {appOwner:rAppOwner, appName:rAppName} = appUqs;\n            if (appOwner === rAppOwner && appName === rAppName) ret = appUqs;\n        }\n        if (ret === undefined) {\n            ret = await this.uqsPure(appOwner, appName);\n            ret.appName = appName;\n            ret.appOwner = appOwner;\n            //localStorage.setItem(JSON.stringify(obj));\n            this.local.set(ret);\n        }\n        //return this.cachedUqs = _.cloneDeep(ret);\n        return ret;\n    }\n    private async uqsPure(appOwner:string, appName:string):Promise<UqAppData> {\n        return await this.get('tie/app-uqs', {appOwner:appOwner, appName:appName});\n    }\n    private async isOkCheckUqs(appOwner:string, appName:string):Promise<boolean> {\n        let ret = await this.uqsPure(appOwner, appName);\n        let {id:cachedId, uqs:cachedUqs} = this.local.get(); //.cachedUqs;\n        let {id:retId, uqs:retUqs} = ret;\n        if (cachedId !== retId) return false;\n        if (cachedUqs.length !== retUqs.length) return false;\n        let len = cachedUqs.length;\n        for (let i=0; i<len; i++) {\n            if (_.isMatch(cachedUqs[i], retUqs[i]) === false) return false;\n        }\n        return true;\n    }\n    async checkUqs(appOwner:string, appName:string):Promise<boolean> {\n        let ret = await this.isOkCheckUqs(appOwner, appName);\n        if (ret === false) {\n            this.local.remove();\n            nav.start();\n        }\n        return ret;\n    }\n    async unitxUq(unit:number):Promise<UqServiceData> {\n        return await this.get('tie/unitx-uq', {unit:unit});\n    }\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\n        return await this.post('tie/change-password', param);\n    }\n}\n\nexport async function loadAppUqs(appOwner:string, appName:string): Promise<UqAppData> {\n    let centerAppApi = new CenterAppApi('tv/', undefined);\n    //let unit = meInFrame.unit;\n    let ret = await centerAppApi.uqs(appOwner, appName);\n    await centerAppApi.checkUqs(appOwner, appName);\n    /*\n    .then(v => {\n        if (v === false) {\n            localStorage.removeItem(appUqs);\n            nav.start();\n        }\n    });\n    */\n    return ret;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Controller } from '../../components';\n\nexport abstract class Link {\n    abstract onClick: () => void;\n    abstract render(className?:string):JSX.Element;\n}\n\nexport class CLink extends Link {\n    private controller: Controller;\n    protected icon:string|JSX.Element;\n    protected label:string|JSX.Element;\n\n    constructor(controller:Controller) {\n        super();\n        this.controller = controller;\n        this.icon = controller.icon;\n        this.label = controller.label;\n    }\n\n    onClick = async () => {\n        await this.controller.start();\n    }\n\n    render(className?:string) {\n        return <div\n            className={classNames('px-3', 'py-2', 'align-items-center', 'cursor-pointer', className)}\n            onClick={this.onClick}>\n            {this.icon} &nbsp; {this.label}\n        </div>;\n        //return React.createElement(this.view, className);\n    }\n}\n","export * from './cLink';\n","import { UqApi } from '../net';\nimport { LocalCache } from '../tool';\nimport { UqMan, Field, ArrFields, FieldMap } from './uqMan';\nimport { Tuid } from './tuid';\n//import { EntityCache } from './caches';\n\nconst tab = '\\t';\nconst ln = '\\n';\n\nexport abstract class Entity {\n    private jName: string;\n    schema: any;\n    ver: number = 0;\n    sys?: boolean;\n    readonly uq: UqMan;\n    readonly name: string;\n    readonly typeId: number;\n    readonly cache: LocalCache;\n    readonly uqApi: UqApi;\n    abstract get typeName(): string;\n    get sName():string {return this.jName || this.name}\n    fields: Field[];\n    arrFields: ArrFields[];\n    returns: ArrFields[];\n\n    constructor(uq:UqMan, name:string, typeId:number) {\n        this.uq = uq;\n        this.name = name;\n        this.typeId = typeId;\n        this.sys = this.name.indexOf('$') >= 0;\n        this.cache = this.uq.localMap.item(this.name); // new EntityCache(this);\n        this.uqApi = this.uq.uqApi;\n    }\n\n    public face: any;           // 对应字段的label, placeHolder等等的中文，或者语言的翻译\n\n    //getApiFrom() {return this.entities.uqApi;}\n\n    private fieldMaps: {[arr:string]: FieldMap} = {};\n    fieldMap(arr?:string): FieldMap {\n        if (arr === undefined) arr = '$';\n        let ret = this.fieldMaps[arr];\n        if (ret === undefined) {\n            let fields:Field[];\n            if (arr === '$') fields = this.fields;\n            else if (this.arrFields !== undefined) {\n                let arrFields = this.arrFields.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            else if (this.returns !== undefined) {\n                let arrFields = this.returns.find(v => v.name === arr);\n                if (arrFields !== undefined) fields = arrFields.fields;\n            }\n            if (fields === undefined) return {};\n            ret = {};\n            for (let f of fields) ret[f.name] = f;\n            this.fieldMaps[arr] = ret;\n        }\n        return ret;\n    }\n\n    public async loadSchema():Promise<void> {\n        if (this.schema !== undefined) return;\n        let schema = this.cache.get();\n        if (!schema) {\n            schema = await this.uq.loadEntitySchema(this.name);\n        }\n        this.setSchema(schema);\n        this.buildFieldsTuid();\n    }\n\n    // 如果要在setSchema里面保存cache，必须先调用clearSchema\n    public clearSchema() {\n        this.schema = undefined;\n    }\n\n    public setSchema(schema:any) {\n        if (schema === undefined) return;\n        let {name, version} = schema;\n        this.ver = version || 0;\n        if (name !== this.name) this.jName = name;\n        //if (this.schema === undefined) \n        this.cache.set(schema);\n        this.schema = schema;\n        //this.buildFieldsTuid();\n    }\n\n    public buildFieldsTuid() {\n        let {fields, arrs, returns} = this.schema;\n        this.uq.buildFieldTuid(this.fields = fields);\n        this.uq.buildArrFieldsTuid(this.arrFields = arrs, fields);\n        this.uq.buildArrFieldsTuid(this.returns = returns, fields);\n    }\n\n    schemaStringify():string {\n        return JSON.stringify(this.schema, (key:string, value:any) => {\n            if (key === '_tuid') return undefined;\n            return value;\n        }, 4);\n    }\n\n    tuidFromName(fieldName:string, arrName?:string):Tuid {\n        if (this.schema === undefined) return;\n        let {fields, arrs} = this.schema;\n        let entities = this.uq;\n        function getTuid(fn:string, fieldArr:Field[]) {\n            if (fieldArr === undefined) return;\n            let f = fieldArr.find(v => v.name === fn);\n            if (f === undefined) return;\n            return entities.getTuid(f.tuid);\n        }\n        let fn = fieldName.toLowerCase();\n        if (arrName === undefined) return getTuid(fn, fields);\n        if (arrs === undefined) return;\n        let an = arrName.toLowerCase();\n        let arr = (arrs as ArrFields[]).find(v => v.name === an);\n        if (arr === undefined) return;\n        return getTuid(fn, arr.fields);\n    }\n\n    buildParams(params:any):any {\n        let result = {};\n        let fields = this.fields;\n        if (fields !== undefined) this.buildFieldsParams(result, fields, params);\n        let arrs = this.arrFields;\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                let {name, fields} = arr;\n                let paramsArr:any[] = params[name];\n                if (paramsArr === undefined) continue;\n                let arrResult = [];\n                result[name] = arrResult;\n                for (let pa of params) {\n                    let rowResult = {};\n                    this.buildFieldsParams(rowResult, fields, pa);\n                    arrResult.push(rowResult);\n                }\n            }\n        }\n        return result;\n    }\n\n    private buildFieldsParams(result:any, fields:Field[], params:any) {\n        for (let field of fields) {\n            let {name, type} = field;            \n            let d = params[name];\n            let val:any;\n            if (type === 'datetime') {\n                val = this.buildDateTimeParam(d);\n            }\n            else {\n                switch (typeof d) {\n                    default: val = d; break;\n                    case 'object':\n                        let tuid = field._tuid;\n                        if (tuid === undefined) val = d.id;\n                        else val = tuid.getIdFromObj(d);\n                        break;\n                }\n            }\n            result[name] = val;\n        }\n    }\n\n    buildDateTimeParam(val:any) {\n        let dt: Date;\n        switch (typeof val) {\n            default: debugger; throw new Error('escape datetime field in pack data error: value=' + val);\n            case 'undefined': return undefined;\n            case 'object': dt = (val as Date); break;\n            case 'string':\n            case 'number': dt = new Date(val); break;\n        }\n        return Math.floor(dt.getTime()/1000);\n    }\n\n    buildDateParam(val:any) {\n        let dt: Date;\n        switch (typeof val) {\n            default: debugger; throw new Error('escape datetime field in pack data error: value=' + val);\n            case 'undefined': return undefined;\n            case 'string': return val;\n            case 'object': dt = (val as Date); break;\n            case 'number': dt = new Date(val); break;\n        }\n        let ret = dt.toISOString();\n        let p = ret.indexOf('T');\n        return p>0? ret.substr(0, p) : ret;\n}\n\n    pack(data:any):string {\n        let ret:string[] = [];\n        let fields = this.fields;\n        if (fields !== undefined) this.packRow(ret, fields, data);\n        let arrs = this.arrFields; \n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                this.packArr(ret, arr.fields, data[arr.name]);\n            }\n        }\n        return ret.join('');\n    }\n\n    private escape(row:any, field:Field):any {\n        let d = row[field.name];\n        switch (field.type) {\n            case 'datetime':\n                return this.buildDateTimeParam(d);\n            default:\n                switch (typeof d) {\n                    default: return d;\n                    case 'object':\n                        let tuid = field._tuid;\n                        if (tuid === undefined) return d.id;\n                        return tuid.getIdFromObj(d);\n                    case 'string':\n                        let len = d.length;\n                        let r = '', p = 0;\n                        for (let i=0;i<len;i++) {\n                            let c = d.charCodeAt(i);\n                            switch(c) {\n                                case 9: r += d.substring(p, i) + '\\\\t'; p = i+1; break;\n                                case 10: r += d.substring(p, i) + '\\\\n'; p = i+1; break;\n                            }\n                        }\n                        return r + d.substring(p);\n                    case 'undefined': return '';\n                }\n        }\n    }\n\n    private packRow(result:string[], fields:Field[], data:any) {\n        let len = fields.length;\n        if (len === 0) return;\n        let ret = '';\n        ret += this.escape(data, fields[0]);\n        for (let i=1;i<len;i++) {\n            let f = fields[i];\n            ret += tab + this.escape(data, f);\n        }\n        result.push(ret + ln);\n    }\n\n    private packArr(result:string[], fields:Field[], data:any[]) {\n        if (data !== undefined) {\n            for (let row of data) {\n                this.packRow(result, fields, row);\n            }\n        }\n        result.push(ln);\n    }\n    protected cacheFieldsInValue(values:any, fields:Field[]) {\n        for (let f of fields as Field[]) {\n            let {name, _tuid} = f;\n            if (_tuid === undefined) continue;\n            let id = values[name];\n            //_tuid.useId(id);\n            values[name] = _tuid.boxId(id);\n        }\n    }\n\n    protected unpackTuidIdsOfFields(values:string[], fields: Field[]):any[] {\n        if (fields === undefined) return values as any[];\n        //if (this.fields === undefined) return values as any[];\n        let ret:any[] = []\n        for (let ln of values) {\n            if (!ln) continue;\n            let len = ln.length;\n            let p = 0;\n            while (p<len) {\n                let ch = ln.charCodeAt(p);\n                if (ch === 10) {\n                    ++p;\n                    break;\n                }\n                let row = {};\n                p = this.unpackRow(row, fields, ln, p);\n                ret.push(row);\n            }\n        }\n        return ret;\n    }\n\n    unpackSheet(data:string):any {\n        let ret = {} as any; //new this.newMain();\n        //if (schema === undefined || data === undefined) return;\n        let fields = this.fields;\n        let p = 0;\n        if (fields !== undefined) p = this.unpackRow(ret, fields, data, p);\n        let arrs = this.arrFields; //schema['arrs'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n\n    unpackReturns(data:string):any {\n        if (data === undefined) debugger;\n        let ret = {} as any;\n        //if (schema === undefined || data === undefined) return;\n        //let fields = schema.fields;\n        let p = 0;\n        //if (fields !== undefined) p = unpackRow(ret, schema.fields, data, p);\n        let arrs = this.returns; //schema['returns'];\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                //let creater = this.newRet[arr.name];\n                p = this.unpackArr(ret, arr, data, p);\n            }\n        }\n        return ret;\n    }\n\n    protected unpackRow(ret:any, fields:Field[], data:string, p:number):number {\n        let ch0 = 0, ch = 0, c = p, i = 0, len = data.length, fLen = fields.length;\n        for (;p<len;p++) {\n            ch0 = ch;\n            ch = data.charCodeAt(p);\n            if (ch === 9) {\n                let f = fields[i];\n                let {name} = f;\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[name] = null;\n                }\n                c = p+1;\n                ++i;\n                if (i>=fLen) {\n                    p = data.indexOf('\\n', c);\n                    if (p >= 0) ++p;\n                    else p = len;\n                    return p;\n                }\n            }\n            else if (ch === 10) {\n                let f = fields[i];\n                let {name} = f;\n                if (ch0 !== 8) {\n                    if (p>c) {\n                        let v = data.substring(c, p);\n                        ret[name] = this.to(ret, v, f);\n                    }\n                }\n                else {\n                    ret[name] = null;\n                }\n                ++p;\n                ++i;\n                return p;\n            }\n        }\n        let f = fields[i];\n        let {name} = f;\n        if (ch0 !== 8) {\n            let v = data.substring(c);\n            ret[name] = this.to(ret, v, f);\n        }\n        return len;\n    }\n\n    private to(ret:any, v:string, f:Field):any {\n        switch (f.type) {\n            default: return v;\n            case 'datetime':\n            case 'time':\n                let n = Number(v);\n                let date = isNaN(n) === true? new Date(v) : new Date(n*1000);\n                return date;\n            case 'date':\n                let parts = v.split('-');\n                return new Date(Number(parts[0]), Number(parts[1])-1, Number(parts[2]));\n            case 'tinyint':\n            case 'smallint':\n            case 'int':\n            case 'bigint':\n            case 'dec':\n                return Number(v);\n            case 'id':\n                let id = Number(v);\n                let {_tuid} = f;\n                if (_tuid === undefined) return id;\n                return _tuid.boxId(id);\n        }\n    }\n\n    private unpackArr(ret:any, arr:ArrFields, data:string, p:number):number {\n        let vals:any[] = [], len = data.length;\n        let {name, fields} = arr;\n        while (p<len) {\n            let ch = data.charCodeAt(p);\n            if (ch === 10) {\n                ++p;\n                break;\n            }\n            let val = {} as any; //new creater();\n            vals.push(val);\n            p = this.unpackRow(val, fields, data, p);\n        }\n        ret[name] = vals;\n        return p;\n    }\n}\n","const ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst ID_LENGTH = 8;\n\nexport function uid():string {\n    let len = ALPHABET.length;\n    let rtn = '';\n    for (let i = 0; i < ID_LENGTH; i++) {\n        rtn += ALPHABET.charAt(Math.floor(Math.random() * len));\n    }\n    return rtn;\n}\n","\nlet subAppWindow:Window;\nfunction postWsToSubApp(msg:any) {\n    if (subAppWindow === undefined) return;\n    subAppWindow.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport function setSubAppWindow(win:Window) {\n    subAppWindow = win;\n}\n\nexport function postWsToTop(msg:any) {\n    window.top.postMessage({\n        type: 'ws',\n        msg: msg\n    }, '*');\n}\n\nexport abstract class WsBase {\n    wsBaseId:string;\n    private handlerSeed = 1;\n    private anyHandlers:{[id:number]:(msg:any)=>Promise<void>} = {};\n    private msgHandlers:{[id:number]:{type:string, handler:(msg:any)=>Promise<void>}} = {};\n    onWsReceiveAny(handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.anyHandlers[seed] = handler;\n        return seed;\n    }\n    onWsReceive(type:string, handler:(msg:any)=>Promise<void>):number {\n        let seed = this.handlerSeed++;\n        this.msgHandlers[seed] = {type:type, handler: handler};\n        return seed;\n    }\n    endWsReceive(handlerId:number) {\n        delete this.anyHandlers[handlerId];\n        delete this.msgHandlers[handlerId];\n    }\n    async receive(msg:any) {\n        let {$type} = msg;\n        for (let i in this.anyHandlers) {\n            await this.anyHandlers[i](msg);\n        }\n        for (let i in this.msgHandlers) {\n            let {type, handler} = this.msgHandlers[i];\n            if (type !== $type) continue;\n            await handler(msg);\n        }\n    }\n}\n\nlet wsBaseSeed = 1;\nexport class WsBridge extends WsBase {\n    wsBaseId:string = 'WsBridge seed ' + wsBaseSeed++;\n}\n\nexport const wsBridge = new WsBridge();\n\nexport class WSChannel extends WsBase {\n    wsBaseId:string = 'WSChannel seed ' + wsBaseSeed++;\n    static centerToken:string;\n    private wsHost: string;\n    private token: string;\n    private ws: WebSocket;\n\n    constructor(wsHost: string, token: string) {\n        super();\n        this.wsHost = wsHost;\n        this.token = token;\n    }\n\n    static setCenterToken(token?: string) {\n        WSChannel.centerToken = token;\n    }\n    \n    connect():Promise<void> {\n        //this.wsHost = wsHost;\n        //this.token = token || WSChannel.centerToken;\n        if (this.ws !== undefined) return;\n        let that = this;\n        return new Promise((resolve, reject) => {\n            let ws = new WebSocket(this.wsHost, this.token || WSChannel.centerToken);\n            console.log('connect webSocket %s', this.wsHost);\n            ws.onopen = (ev) => {\n                console.log('webSocket connected %s', this.wsHost);\n                that.ws = ws;\n                resolve();\n            };\n            ws.onerror = (ev) => {\n                reject('webSocket can\\'t open!');\n            };\n            ws.onmessage = async (msg) => await that.wsMessage(msg);\n            ws.onclose = (ev) => {\n                that.ws = undefined;\n                console.log('webSocket closed!');\n            }\n        });\n    }\n    close() {\n        if (this.ws !== undefined) {\n            this.ws.close();\n            this.ws = undefined;\n        }\n    }\n    private async wsMessage(event:any):Promise<void> {\n        try {\n            console.log('websocket message: %s', event.data);\n            let msg = JSON.parse(event.data);\n            postWsToSubApp(msg);\n            await this.receive(msg);\n        }\n        catch (err) {\n            console.log('ws msg error: ', err);\n        }\n    }\n    sendWs(msg:any) {\n        let netThis = this;\n        this.connect().then(() => {\n            netThis.ws.send(msg);\n        });\n    }\n}\n","export * from './uqMan';\nexport * from './entity';\nexport * from './action';\nexport * from './query';\nexport * from './sheet';\nexport * from './tuid';\nexport * from './book';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './uqsMan';\n","//import _ from 'lodash';\nimport {observable, IObservableArray} from 'mobx';\nimport { PageItems } from '../tool';\nimport {Field, ArrFields} from './uqMan';\nimport {Entity} from './entity';\nimport { QueryQueryCaller, QueryPageCaller } from './caller';\n\nexport type QueryPageApi = (name:string, pageStart:any, pageSize:number, params:any) => Promise<string>;\n\nexport class QueryPager<T> extends PageItems<T> {\n    private query: Query;\n    constructor(query: Query, pageSize?: number, firstSize?: number) {\n        super();\n        this.query = query;\n        if (pageSize !== undefined) this.pageSize = pageSize;\n        if (firstSize !== undefined) this.firstSize = firstSize;\n    }\n\n    protected async onLoad() {\n        let {schema} = this.query;\n        if (schema === undefined) await this.query.loadSchema();\n    }\n\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<T[]> {\n        if (pageStart === undefined) pageStart = 0;\n        let ret = await this.query.page(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:T) {\n        let {schema} = this.query;\n        if (schema === undefined) return;\n        let $page = (schema.returns as any[]).find(v => v.name === '$page');\n        if ($page === undefined) return;\n        let {order} = $page;\n        if (order === undefined) return;\n        let {field, type, asc} = order;\n        let start:any;\n        if (item !== undefined) start = item[field];\n        if (asc === false) {\n            this.appendPosition = 'head';\n            switch (type) {\n                default:\n                case 'tinyint':\n                case 'smallint':\n                case 'int':\n                case 'bigint':\n                case 'dec': start = 999999999999; break;\n                case 'date':\n                case 'datetime': start = undefined; break;          // 会自动使用现在\n                case 'char': start = ''; break;\n            }\n        }\n        else {\n            this.appendPosition = 'tail';\n            switch (type) {\n                default:\n                case 'tinyint':\n                case 'smallint':\n                case 'int':\n                case 'bigint':\n                case 'dec': start = 0; break;\n                case 'date':\n                case 'datetime': start = '1970-1-1'; break;\n                case 'char': start = ''; break;\n            }\n        }\n        this.pageStart = start;\n    }\n}\n\nexport class Query extends Entity {\n    get typeName(): string { return 'query';}\n    private pageStart: any;\n    private pageSize:number;\n    private params:any;\n    private more: boolean;\n    private startField: Field;\n    @observable list:IObservableArray; // = observable.array([], {deep: false});\n    returns: ArrFields[];\n    isPaged: boolean;\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        let {returns} = schema;\n        //this.returns = returns;\n        this.isPaged = returns && (returns as any[]).find(v => v.name === '$page') !== undefined;\n    }\n\n    resetPage(size:number, params:any) {\n        this.pageStart = undefined;\n        this.pageSize = size;\n        this.params = params;\n        this.more = false;\n        this.list = undefined;\n    }\n    get hasMore() {return this.more;}\n    async loadPage():Promise<void> {\n        if (this.pageSize === undefined) {\n            throw new Error('call resetPage(size:number, params:any) first');\n        }\n        let pageStart:any;\n        if (this.pageStart !== undefined) {\n            switch (this.startField.type) {\n                default: pageStart = this.pageStart; break;\n                case 'date':\n                case 'time':\n                case 'datetime': pageStart = (this.pageStart as Date).getTime(); break;\n            }\n        }\n        let page = await this.page(this.params, pageStart, this.pageSize+1);\n        /*\n        await this.loadSchema();\n        let res = await this.tvApi.page(this.name, pageStart, this.pageSize+1, this.params);\n        let data = await this.unpackReturns(res);\n        let page = data['$page'] as any[];\n        */\n        this.list = observable.array([], {deep: false});\n        if (page !== undefined) {\n            if (page.length > this.pageSize) {\n                this.more = true;\n                page.pop();\n                let ret = this.returns.find(r => r.name === '$page');\n                this.startField = ret.fields[0];\n                this.pageStart = page[page.length-1][this.startField.name];\n            }\n            else {\n                this.more = false;\n            }\n            this.list.push(...page);\n        }\n        //this.loaded = true;\n    }\n\n    protected pageCaller(params: any): QueryPageCaller {\n        return new QueryPageCaller(this, params);\n    }\n\n    async page(params:any, pageStart:any, pageSize:number):Promise<any[]> {\n        /*\n        await this.loadSchema();\n        let res = await this.uqApi.page(this.name, pageStart, pageSize+1, this.buildParams(params));\n        */\n        let p = {pageStart:pageStart, pageSize:pageSize+1, params:params};\n        let res = await this.pageCaller(p).request();\n        //let data = this.unpackReturns(res);\n        //return data.$page;// as any[];\n        return res;\n    }\n    protected queryCaller(params: any): QueryQueryCaller {\n        return new QueryQueryCaller(this, params);\n    }\n    async query(params:any):Promise<any> {\n        /*\n        await this.loadSchema();\n        let res = await this.uqApi.query(this.name, this.buildParams(params));\n        */\n        let res = await this.queryCaller(params).request();\n        //let data = this.unpackReturns(res);\n        //return data;\n        return res;\n    }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n","//import * as React from 'react';\nimport { ItemSchema, UiItem } from '../schema';\nimport { nav } from '../nav';\n//import { Page } from '../page';\n//import { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { FieldRule } from '../form/rules';\n\nexport abstract class ItemEdit {\n    protected name: string;\n    protected itemSchema: ItemSchema;\n    protected uiItem:UiItem;\n    protected value: any;\n    protected label: string;\n\n    @observable protected error: string;\n    @observable protected isChanged: boolean = false;\n    protected newValue: any;\n\n    constructor(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) {\n        this.itemSchema = itemSchema;\n        this.uiItem = uiItem\n        this.value = value;\n        let {name} = itemSchema;\n        this.name = name;\n        this.label = label;\n    }\n    async start():Promise<any> {\n        return await this.internalStart();\n    }\n\n    protected abstract internalStart():Promise<any>;\n\n    async end():Promise<any> {\n        await this.internalEnd()\n    }\n\n    protected async internalEnd():Promise<void> {nav.pop()}\n\n    protected verifyValue() {\n        if (this.uiItem === undefined) return;\n        let {rules} = this.uiItem;\n        if (rules === undefined) return;\n        let nv = this.newValue;\n        function verifyRule(rule:FieldRule, value: any):string {\n            let error = rule(nv);\n            if (error !== undefined) {\n                if (typeof error !== 'object')\n                    return error;\n                else\n                    return JSON.stringify(error);\n            }\n        }\n        if (Array.isArray(rules)) {\n            for (let rule of rules) {\n                let error = verifyRule(rule as FieldRule, nv);\n                if (error !== undefined) {\n                    this.error = error;\n                    break;\n                }\n            }\n        }\n        else {\n            this.error = verifyRule(rules as FieldRule, nv);\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { nav } from './nav';\n\nexport interface ImageProps {\n    src: string;\n    className?: string;\n    style?: React.CSSProperties;\n    altImage?: string;\n}\n\nexport function Image(props: ImageProps) {\n    let {className, style, src, altImage} = props;\n    if (!src) {\n        return <div className={classNames(className, 'image-none')} style={style}>\n            <i className=\"fa fa-file-o\" />\n        </div>;\n    }\n    if (src.startsWith(':') === true) {\n        src = nav.resUrl + src.substr(1);\n    }\n    return <img src={src} className={className} alt=\"img\"\n        style={style}\n        onError={evt=>{\n            if (altImage) evt.currentTarget.src=altImage;\n            else evt.currentTarget.src = 'https://tv.jkchemical.com/imgs/0001.png';\n        }} />;\n}\n","import jwtDecode from 'jwt-decode';\n\nexport interface Unit {\n    id: number;\n    name: string;\n}\n\nexport interface Guest {\n    id: number;             // id = 0\n    guest: number;\n    token: string;\n}\n\nexport interface User extends Guest {\n    id: number;\n    name: string;\n    nick?: string;\n    icon?: string;\n}\n\n/*\nexport class UserInNav {\n    private user: User;\n    constructor(user: User) {\n        this.user = user;\n    }\n    get id():number {return this.user.id}\n    get name(): string {return this.user.name}\n    get nick(): string {return this.user.nick}\n    get icon(): string {return this.user.icon || ('http://' + process.env['REACT_APP_CENTER_HOST'] + '/imgs/Bear-icon.png');}\n    get guest(): number {return this.user.guest}\n    get token(): string {return this.user.token}\n}\n*/\nexport function decodeUserToken(token: string): User {\n    let ret:any = jwtDecode(token);\n    let user: User = {\n        id: ret.id,\n        name: ret.name,\n        guest: ret.guest,\n        token: token,\n    };\n    return user;\n}\n\nexport function decodeGuestToken(token: string): Guest {\n    let ret:any = jwtDecode(token);\n    let guest: Guest = {\n        id: 0,\n        guest: ret.guest,\n        token: token,\n    };\n    return guest;\n}\n","import { env } from '../tool';\n\nconst centerHost = process.env['REACT_APP_CENTER_HOST'];\nconst centerDebugHost = 'localhost:3000'; //'192.168.86.64';\nconst resHost = process.env['REACT_APP_RES_HOST'] || centerHost;\nconst resDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugHost = 'localhost:3015'; //'192.168.86.63';\nconst uqDebugBuilderHost = 'localhost:3009';\ninterface HostValue {\n    value: string;\n    local: boolean;\n}\nconst hosts:{[name:string]:HostValue} = {\n    centerhost: {\n        value: process.env['REACT_APP_CENTER_DEBUG_HOST'] || centerDebugHost, \n        local: false\n    },\n    reshost: {\n        value: process.env['REACT_APP_RES_DEBUG_HOST'] || resDebugHost,\n        local: false\n    },\n    uqhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    unitxhost: {\n        value: process.env['REACT_APP_UQ_DEBUG_HOST'] || uqDebugHost, \n        local: false\n    },\n    \"uq-build\": {\n        value: process.env['REACT_APP_UQ_DEBUG_BUILDER_HOST'] || uqDebugBuilderHost, \n        local: false\n    }\n}\n\nfunction urlFromHost(host:string):string {\n    if (host.startsWith('https://') === true) {\n        if (host.endsWith('/')) return host;\n        return host + '/';\n    }\n    return `http://${host}/`;\n}\n\nfunction centerUrlFromHost(host:string):string {\n    return urlFromHost(host);\n}\nfunction centerWsFromHost(host:string) {\n    let https = 'https://';\n    if (host.startsWith(https) === true) {\n        host = host.substr(https.length);\n        if (host.endsWith('/') === true) host = host.substr(0, host.length-1);\n        return 'wss://' + host + '/tv/';\n    }\n    return `ws://${host}/tv/`\n}\nexport function resUrlFromHost(host:string) {\n    let url = urlFromHost(host);\n    return url + 'res/';\n}\n\nconst fetchOptions = {\n    method: \"GET\",\n    mode: \"no-cors\", // no-cors, cors, *same-origin\n    headers: {\n        \"Content-Type\": \"text/plain\"\n    },\n};\n\nclass Host {\n    testing: boolean;\n    url: string;\n    ws: string;\n    resHost: string;\n\n    async start(testing:boolean) {\n        this.testing = testing;\n        if (env.isDevelopment === true) {\n            await this.tryLocal();\n        }\n        let host = this.getCenterHost();\n        this.url = centerUrlFromHost(host);\n        this.ws = centerWsFromHost(host);\n        this.resHost = this.getResHost();\n    }\n\n    private debugHostUrl(host:string) {return `http://${host}/hello`}\n    private async tryLocal() {\n        let promises:PromiseLike<any>[] = [];\n        let hostArr:string[] = [];\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            let {value} = hostValue;\n            if (hostArr.findIndex(v => v === value) < 0) hostArr.push(value);\n        }\n\n        for (let host of hostArr) {\n            let fetchUrl = this.debugHostUrl(host);\n            promises.push(localCheck(fetchUrl));\n        }\n        let results = await Promise.all(promises);\n        let len = hostArr.length;\n        for (let i=0; i<len; i++) {\n            let local = results[i];\n            let host = hostArr[i];\n            for (let j in hosts) {\n                let hostValue = hosts[j];\n                if (hostValue.value === host) {\n                    hostValue.local = local;\n                }\n            }\n        }\n        /*\n        let p = 0;\n        for (let i in hosts) {\n            let hostValue = hosts[i];\n            hostValue.local = results[p];\n            ++p;\n        }\n        */\n    }\n\n    private getCenterHost():string {\n        let {value, local} = hosts.centerhost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (env.isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return centerHost;\n    }\n\n    private getResHost():string {\n        let {value, local} = hosts.reshost;\n        let hash = document.location.hash;\n        if (hash.includes('sheet_debug') === true) {\n            return value;\n        }\n        if (env.isDevelopment === true) {\n            if (local === true) return value;\n        }\n        return resHost;\n    }\n\n    getUrlOrDebug(url:string, debugHost:string = 'uqhost'):string {\n        if (env.isDevelopment === false) return url;\n        let host = hosts[debugHost];\n        if (host === undefined) return url;\n        let {value, local} = host;\n        if (local === false) return url;\n        return `http://${value}/`;\n    }\n    getUrlOrTest(db:string, url:string, urlTest:string):string {\n        let path:string;\n        if (this.testing === true) {\n            if (urlTest !== '-') url = urlTest;\n            path = 'uq/test/' + db + '/';\n        }\n        else {\n            path = 'uq/prod/' + db + '/';\n        }\n        url = this.getUrlOrDebug(url);\n        return url + path;\n    }\n\n    async localCheck(urlDebug: string):Promise<boolean> {\n        return await localCheck(urlDebug);\n    }\n}\n\nexport const host:Host = new Host();\n\n// 因为测试的都是局域网服务器，甚至本机服务器，所以一秒足够了\n// 网上找了上面的fetch timeout代码。\n// 尽管timeout了，fetch仍然继续，没有cancel\n\n// 实际上，一秒钟不够。web服务器会自动停。重启的时候，可能会比较长时间。也许两秒甚至更多。\n//const timeout = 2000;\nconst timeout = 200;\n\nfunction fetchLocalCheck(url:string):Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(url, fetchOptions as any)\n      .then(v => {\n          v.text().then(resolve).catch(reject);\n      })\n      .catch(reject);\n      const e = new Error(\"Connection timed out\");\n      setTimeout(reject, timeout, e);\n    });\n}\n\nasync function localCheck(url:string):Promise<boolean> {\n    try {\n        await fetchLocalCheck(url);\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n\n/*\nexport interface IUqForChannel {\n    uq: string;\n    uqVersion: number;\n}\n*/","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Tuid, BoxId } from '../../uq';\nimport { PureJSONContent } from '../tools';\n\nexport class TuidWithUIRes {\n    readonly tuid: Tuid;\n    readonly ui: any;\n    readonly res: any;\n    constructor(tuid:Tuid, ui:any, res:any) {\n        this.tuid = tuid;\n        this.ui = ui;\n        this.res = res;\n    }\n}\n\nexport class ReactBoxId implements BoxId {\n    readonly id: number;\n    protected tuidUR: TuidWithUIRes;\n    readonly isUndefined:boolean;\n    constructor(tuidUR: TuidWithUIRes, id: number) {\n        this.tuidUR = tuidUR;\n        this.id = id;\n        this.isUndefined = (this.tuidUR.tuid === undefined);\n    }\n\n    get obj():any {\n        return this.tuidUR.tuid.valueFromId(this.id);\n    }\n\n    render(ui:TvTemplet, x:any):JSX.Element {\n        if (this.id === undefined || this.id === null) return;\n        let boxName = this.boxName; // this.tuid.name;\n        let val = this.obj; // this.tuid.valueFromId(this.id);\n        if (this.isUndefined === true) {\n            if (ui !== undefined) return ui(val, x);\n            return PureJSONContent(val, x);\n        }\n        switch (typeof val) {\n            case 'undefined':\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\n            case 'number':\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\n        }\n        if (ui === undefined) {\n            ui = this.tuidUR.ui;\n        }\n        if (ui !== undefined) {\n            if (typeof ui !== 'function') {\n                ui = (ui as any).content;\n            }\n            if (ui !== undefined) {\n                let ret = ui(val, this.tuidUR.res);\n                if (ret !== undefined) return ret;\n                return <del className=\"text-danger\">{boxName} {this.id}</del>;\n            }\n        }\n\n        return PureJSONContent(val);\n    }\n\n    get boxName():string {return this.tuidUR.tuid.name}\n    // ui(): TvTemplet {return this.tuid.ui}\n    // res(): any {return this.tuid.res}\n\n    async assure(): Promise<void> {\n        await this.tuidUR.tuid.assureBox(this.id);\n    }\n}\n\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\n    let logContent:any;\n    let boxId:ReactBoxId = bi as ReactBoxId;\n    switch(typeof bi) {\n        case 'undefined': logContent = <>boxId undefined</>; break;\n        case 'number': logContent = <>id:{bi}</>; break;\n        default:\n            if (typeof boxId.render !== 'function') {\n                if (ui === undefined) {\n                    logContent = PureJSONContent(bi, x);\n                }\n                else {\n                    return ui(bi, x);\n                }\n            }\n            break;\n    }\n    if (logContent !== undefined) {\n        return <del className=\"text-danger\">{logContent}</del>;\n    }\n    return boxId.render(ui, x);\n}\n\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\n\ninterface Props {\n    tuidValue: number|BoxId, \n    ui?: TvTemplet,\n    x?: any,\n    nullUI?: ()=>JSX.Element\n}\n\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\n    if (tuidValue === undefined) {\n        if (nullUI === undefined) return <>[undefined]</>;\n        return nullUI();\n    }\n    if (tuidValue === null) {\n        if (nullUI === undefined) return <>[null]</>;\n        return nullUI();\n    }\n    let ttv = typeof tuidValue;\n    switch (ttv) {\n        default:\n            if (ui === undefined)\n                return <>{ttv}-{tuidValue}</>;\n            else {\n                let ret = ui(tuidValue, x);\n                if (ret !== undefined) return ret;\n                return <>{tuidValue}</>;\n            }\n        case 'object':\n            let divObj = boxIdContent(tuidValue, ui, x);\n            if (divObj !== undefined) return divObj;\n            return nullUI === undefined? <>id null</>: nullUI();\n        case 'number':\n            return <>id...{tuidValue}</>;\n    }\n});\n\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\n};\n\n/*\nclass BoxDivId extends BoxId {\n    private div: TuidDiv;\n    constructor(tuid: Tuid, div: TuidDiv, id: number) {\n        super(tuid, id);\n        this.div = div;\n    }\n    get obj():any {\n        return this.div.valueFromId(this.id);\n    }\n    boxName():string {return this.div.name}\n    isUndefined(): boolean {return this.div === undefined}\n    ui(): TvTemplet {return this.div.ui}\n    res(): any {return this.div.res}\n\n    async assure(): Promise<void> {\n        await this.div.assureBox(this.id);\n    }\n}\n*/\n","import * as React from 'react';\nimport { Page, SearchBox, LMR } from '../../components';\nimport { Tuid } from '../../uq';\nimport { CLink } from '../link';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\n\nexport class VTuidMain extends VEntity<Tuid, TuidUI, CTuidMain> {\n    protected controller: CTuidMain;\n    onNew = () => this.event('new');\n    onList = () => this.event('list');\n    onSearch = async (key:string) => this.event('list', key);\n\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected entityRender(link: CLink, index: number): JSX.Element {\n        return link.render();\n    }\n\n    protected async entityClick(link: CLink) {\n        await link.onClick();\n    }\n\n    protected get view() {\n        let {label, isImport} = this.controller;\n        let newButton:any;\n        if (isImport === false) newButton = <button className=\"btn btn-outline-success ml-2\" onClick={this.onNew}>新增</button>;\n        let right = <>\n            {newButton}\n            <button className=\"btn btn-outline-info ml-2\" onClick={this.onList}>全部</button>\n        </>;\n        let content = <LMR className='m-3' right={right}>\n            <SearchBox className=\"w-100\" size=\"md\"\n                onSearch={this.onSearch} \n                placeholder={'搜索'+label} />\n        </LMR>;\n        return () => <Page header={label}>\n            {content}\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { Page, FA } from '../../components';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CTuidMain, TuidUI } from './cTuid';\nimport { Tuid } from '../../uq';\n\nexport type TypeVTuidEdit = typeof VTuidEdit;\n\nexport class VTuidEdit extends VEntity<Tuid, TuidUI, CTuidMain> {\n    private vForm: VForm;\n    private id: number;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        if (param !== undefined) {\n            this.id = param.id;\n        }\n        this.openPage(this.editView);\n    }\n\n    protected get editView() {\n        return () => <Page header={(this.id===undefined? '新增':'编辑') + ' - ' + this.label}>\n            {this.vForm.render('py-3')}\n        </Page>;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n        this.event('edit-end');\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.controller.entity.save(this.id, values);\n        let {id} = ret;\n        if (id < 0) {\n            let {unique} = this.controller.entity;\n            if (unique !== undefined) {\n                for (let u of unique) {\n                    this.vForm.setError(u, '不能重复');\n                }\n            }\n            return;\n        }\n        if (this.controller.isCalling) {\n            this.returnCall(id);\n            this.closePage();\n            return;\n        }\n        this.openPageElement(<Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n\n        this.event('item-changed', {id: this.id, values: values});\n        return;\n    }\n\n    //protected view = TuidNewPage;\n}\n/*\nconst TuidNewPage = observer(({vm}:{vm:VmTuidEdit}) => {\n    let {label, id, vmForm} = vm;\n    return <Page header={(id===undefined? '新增':'编辑') + ' - ' + label}>\n        {vmForm.render('mx-3 my-2')}\n    </Page>;\n});\n*/","import { Page, SearchBox, List } from '../../components';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../uq';\nimport { CTuid, TuidUI } from './cTuid';\nimport React from 'react';\nimport { RowContent } from '../form/viewModel';\nimport { observer } from 'mobx-react';\n\nexport class VTuidSelect extends VEntity<Tuid, TuidUI, CTuid<Tuid>> {\n    protected mainRowContent: (row:any) => JSX.Element;\n    protected divRowContent: (row:any) => JSX.Element;\n\n    async open(param?:any): Promise<void> {\n        if (param === undefined)\n            await this.showMain(param);\n        else\n            await this.showDiv(param);\n    }\n\n    private async showMain(param) {\n        this.mainRowContent = this.ui.rowContent || RowContent;\n        await this.controller.searchMain(param);\n        this.openPage(this.mainView);\n    }\n\n    private async showDiv(ownerValue: any) {\n        let {divs} = this.ui;\n        if (divs !== undefined) {\n            this.divRowContent = divs[this.entity.name].rowContent;\n        }\n        if (this.divRowContent === undefined) {\n            this.divRowContent = RowContent;\n        }\n        let divItems = await this.controller.getDivItems(ownerValue);\n        this.openPage(this.divView, {items: divItems});\n    }\n\n    protected mainView = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearchMain} placeholder={'搜索'+this.label} />;\n        return <Page header={header} back=\"close\">\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderMainRow, onClick: this.clickMainRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n\n    onSearchMain = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderMainRow = (item:any, index:number):JSX.Element => <this.mainRowContent {...item} />;\n    clickMainRow = async (item:any) => {\n        this.ceasePage();\n        if (this.controller.entity.hasDiv === undefined) {\n            this.returnCall(item);\n            return;\n        }\n        await this.showDiv(this.entity.getIdFromObj(item));\n    }\n\n    protected divView = (param:any) => {\n        return <Page header=\"选择Div\">\n            <List\n                items={param.items}\n                item={{render: this.renderDivRow, onClick: this.clickDivRow}} />\n        </Page>;\n    }\n    renderDivRow = (item:any, index:number):JSX.Element => <this.divRowContent {...item} />;\n    clickDivRow = (item:any) => {\n        this.ceasePage();\n        this.returnCall(item);\n    }\n}\n","//import React from 'react';\nimport { VTuidView } from './vTuidView';\n\nexport class VTuidInfo  extends VTuidView {\n/*\n    async open(param?:any) {\n        this.open(this.view);\n    }\n*/\n/*\n    private view = () => {\n        return <Page>\n            TuidInfo\n        </Page>\n    }\n*/\n}\n","import * as React from 'react';\nimport { FA, Page } from '../../components';\nimport { jsonStringify } from '../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { Tuid } from '../../uq';\nimport { TuidUI, CTuidMain } from './cTuid';\n\nexport type TypeVTuidView = typeof VTuidView;\n\nexport class VTuidView extends VEntity<Tuid, TuidUI, CTuidMain> {\n    vForm: VForm;\n    id: number;\n\n    protected buildForm(param:any) {\n        this.vForm = this.createForm(undefined, param);\n    }\n\n    async open(param:any) {\n        this.buildForm(param);\n        this.openPage(this.view);\n    }\n\n    render(param:any) {\n        this.buildForm(param);\n        return this.vForm.render();\n    }\n\n    async loadId(id: number) {\n        this.id = id;\n    }\n\n    protected next = async () => {\n        this.vForm.reset();\n        this.closePage();\n    }\n\n    protected finish = () => {\n        this.closePage(2);\n    }\n\n    protected resetForm() {\n        this.vForm.reset();\n    }\n\n    protected onSubmit = async () => {\n        let values = this.vForm.getValues();\n        let ret = await this.entity.save(this.id, values);\n        if (ret) {\n            alert('这里还要判断返回值，先不处理了 \\n' + jsonStringify(ret));\n        }\n        this.openPage(() => <Page header={this.label + '提交成功'} back=\"none\">\n            <div className='m-3'>\n                <span className=\"text-success\">\n                    <FA name='check-circle' size='lg' /> 成功提交！\n                </span>\n                <div className='mt-5'>\n                    <button className=\"btn btn-primary mr-3\" onClick={this.next}>继续录入</button>\n                    <button className=\"btn btn-outline-primary\" onClick={this.finish}>不继续</button>\n                </div>\n            </div>\n        </Page>);\n        return;\n    }\n\n    protected view = () => <Page header={this.label}>\n            {this.vForm.render('py-3')}\n    </Page>;\n}\n","import { PageItems } from '../../tool';\nimport { Tuid } from '../../uq';\n\nexport class TuidPageItems<T> extends PageItems<T> {\n    private tuid: Tuid;\n    constructor(tuid: Tuid) {\n        super(true);\n        this.tuid = tuid;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.tuid.search(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { SearchBox, List, Page } from '../../components';\n//import { jsonStringify } from '../tools';\nimport { Tuid } from '../../uq';\nimport { VEntity } from '../CVEntity';\nimport { TuidUI, CTuidMain } from './cTuid';\nimport { RowContent } from '../form/viewModel';\n\nexport abstract class VTuidListBase  extends VEntity<Tuid, TuidUI, CTuidMain> {\n    protected rowContent: (row:any) => JSX.Element;\n    protected ownerId: number;\n\n    async open(param?:any) {\n        this.rowContent = this.ui.rowContent || RowContent;\n        //if (this.entity.owner !== undefined) \n        this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => <this.rowContent {...item} />;\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n    private rowKey = (item:any) => {\n        let {id} = item;\n        return id;\n    }\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        /*\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        */\n        return <Page header={header}>\n            {/*ownerTop*/}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow, key:this.rowKey}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidList extends VTuidListBase {\n    protected async onSelected(item:any) {\n        if (this.controller.isImport === false)\n            this.event('edit', item.id);\n        else\n            this.event('info', item.id);\n    }\n}\n/*\nexport abstract class VTuidDivListBase  extends VPage<CTuidDiv> {\n    protected ownerId: number;\n\n    async open(param?:any) {\n        //this.PageItems = new TuidPageItems(this.entity);\n        if (this.entity.owner !== undefined) this.ownerId = Number(param);\n        // 初始查询, key是空的\n        //await this.onSearch('');\n        await this.controller.searchMain('');\n        this.openPage(this.view);\n    }\n\n    onSearch = async (key:string) => {\n        await this.controller.searchMain(key);\n        //await this.PageItems.first(key);\n    }\n    renderRow = (item:any, index:number):JSX.Element => {\n        return <div className=\"px-3 py-2\">{jsonStringify(item)}</div>;\n    }\n\n    protected abstract onSelected(item:any): Promise<void>;\n    private callOnSelected(item:any) {\n        if (this.onSelected === undefined) {\n            alert('onSelect is undefined');\n            return;\n        }\n        this.onSelected(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    protected view = observer(() => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        let {owner} = this.entity;\n        let ownerTop;\n        if (owner !== undefined) {\n            let ownerObj = owner.valueFromId(this.ownerId);\n            ownerTop = <div>owner: {jsonStringify(ownerObj)}</div>;\n        }\n        return <Page header={header}>\n            {ownerTop}\n            <List\n                items={this.controller.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    });\n}\n\nexport class VTuidDivList extends VTuidDivListBase {\n    protected async onSelected(item:any) {\n        this.event('edit', item.id);\n    }\n}\n*/","import _ from 'lodash';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { Tuid } from '../../uq';\nimport { VTuidMain } from './vTuidMain';\nimport { VTuidEdit } from './vTuidEdit';\nimport { VTuidSelect } from './vTuidSelect';\nimport { CUq } from '../cUq/cUq';\n//import { CLink } from '../link';\nimport { VTuidInfo } from './vTuidInfo';\nimport { TuidPageItems } from './pageItems';\nimport { VTuidList } from './vTuidList';\nimport { PageItems } from '../../tool';\n//import { Controller } from 'ui';\n\nexport interface TuidUI extends EntityUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    content?: React.StatelessComponent<any>;\n    rowContent?: React.StatelessComponent<any>;\n    divs?: {\n        [div:string]: {\n            CTuidSelect?: typeof CTuidSelect;\n            content?: React.StatelessComponent<any>;\n            rowContent?: React.StatelessComponent<any>;\n        }\n    }\n}\n\nexport abstract class CTuid<T extends Tuid> extends CEntity<T, TuidUI> {\n    PageItems:PageItems<any>;\n\n    protected buildPageItems():PageItems<any> {\n        return new TuidPageItems(this.entity);\n    }\n\n    async searchMain(key:string) {\n        if (this.PageItems === undefined) {\n            this.PageItems = this.buildPageItems();\n        }\n        if (key !== undefined) await this.PageItems.first(key);\n    }\n\n    async getDivItems(ownerId:number):Promise<any[]> {\n        let ret = await this.entity.searchArr(ownerId, undefined, 0, 1000);\n        return ret;\n    }\n}\n\nexport abstract class CTuidBase extends CTuid<Tuid> {\n    /*\n    constructor(cUq: CUq, entity:Tuid, ui: TuidUI, res:any) {\n        super(cUq, entity, ui, res);\n    }*/\n    \n    from():CTuidBase {\n        let ret = this; // this.entity.cFrom();\n        if (ret === undefined) return this;\n        return ret;\n    }\n\n    cUqFrom():CUq {\n        return this.cUq; // this.entity.cUqFrom();\n    }\n    cEditFrom(): CTuidEdit {\n        let cUq = this.cUq; // this.entity.cUqFrom();\n        return cUq.cTuidEditFromName(this.entity.name);\n    }\n    cInfoFrom(): CTuidInfo {\n        let cUq = this.cUq; // this.entity.cUqFrom();\n        return cUq.cTuidInfoFromName(this.entity.name);\n    }\n    cSelectFrom(): CTuidSelect {\n        let cUq = this.cUq;// this.entity.cUqFrom();\n        return cUq.cTuidSelectFromName(this.entity.name);\n    }\n\n    getLable(tuid:Tuid):string {\n        if (tuid === this.entity) return this.label;\n        let {name} = tuid;\n        let {arrs} = this.res;\n        if (arrs !== undefined) {\n            let arr = arrs[name];\n            if (arr !== undefined) {\n                let label = arr.label;\n                if (label !== undefined) return label;\n            }\n        }\n        return name;\n    }\n\n    isImport: boolean;\n\n    protected get VTuidMain():typeof VTuidMain {return VTuidMain}\n    protected get VTuidEdit():typeof VTuidEdit {return VTuidEdit}\n    protected get VTuidList():typeof VTuidList {return VTuidList}\n\n    protected async internalStart(param?:any):Promise<void> {\n        this.isImport = this.entity.isImport;\n        await this.openVPage(this.VTuidMain);\n    }\n\n    protected async onEvent(type:string, value:any) {\n        //let v: TypeVPage<CTuidMain>;\n        switch (type) {\n            default: return;\n            case 'new': await this.onNew(); break;\n            case 'list': await this.onList(); break;\n            case 'edit': await this.onEdit(value); return;\n            case 'item-changed': this.itemChanged(value); return;\n            case 'info': \n                let cTuidInfo = new CTuidInfo(this.cUq, this.entity, this.ui, this.res);\n                await cTuidInfo.start(value);\n                return;\n        }\n        //await this.openVPage(v, value);\n    }\n\n    protected async edit(values:any) {\n        let cTuidEdit = this.ui && this.ui.CTuidEdit;\n        if (cTuidEdit === undefined) {\n            await this.openVPage(this.VTuidEdit, values);\n        }\n        else {\n            await (new cTuidEdit(this.cUq, this.entity, this.ui, this.res)).start(values);\n        }\n    }\n\n    private async onNew() {\n        await this.edit(undefined);\n    }\n\n    private async onList() {\n        let cTuidList = this.ui && this.ui.CTuidList;\n        if (cTuidList === undefined) {\n            await this.openVPage(this.VTuidList, undefined);\n        }\n        else {\n            await (new cTuidList(this.cUq, this.entity, this.ui, this.res)).start(undefined);\n        }\n    }\n\n    protected async onEdit(id:number) {\n        let values:any = undefined;\n        if (id !== undefined) {\n            values = await this.entity.load(id);\n        }\n        this.edit(values);\n        //await this.openVPage(this.VTuidEdit, values);\n    }\n\n    private itemChanged({id, values}:{id:number, values: any}) {\n        if (this.PageItems === undefined) return;\n        let items = this.PageItems.items;\n        let item = items.find(v => v.id === id);\n        if (item !== undefined) {\n            _.merge(item, values);\n        }\n    }\n}\n\nexport class CTuidMain extends CTuidBase {\n    protected async internalStart(param?:any):Promise<void> {\n        this.isImport = this.entity.isImport;\n        await this.openVPage(this.VTuidMain);\n    }\n\n}\n\nexport class CTuidEdit extends CTuidBase {\n    protected async internalStart(id:number):Promise<void> {\n        this.isImport = this.entity.isImport;\n        if (typeof(id) === 'number') {\n            await this.onEdit(id);\n        }\n        else {\n            await this.edit(id);\n        }\n    }\n\n    protected async edit(values:any) {\n        await this.openVPage(this.VTuidEdit, values);\n    }\n}\n\nexport class CTuidList extends CTuidBase {\n    protected async internalStart(id:number):Promise<void> {\n        this.isImport = this.entity.isImport;\n        await this.openVPage(this.VTuidList);\n    }\n}\n\nexport class CTuidDiv extends CTuid<Tuid> {\n    protected async internalStart():Promise<void> {\n        alert('tuid div: ??');\n    }\n}\n\nexport class CTuidSelect extends CTuid<Tuid> {\n    protected async internalStart(param?: any):Promise<void> {\n        await this.openVPage(this.VTuidSelect, param);\n    }\n    protected async beforeStart():Promise<boolean> {\n        //if (await super.beforeStart() === false) return false;\n        await this.entity.loadSchema();\n        if (this.PageItems !== undefined) this.PageItems.reset();\n        return true;\n    }\n    protected get VTuidSelect():typeof VTuidSelect {return VTuidSelect}\n    idFromItem(item:any) {\n        return item.id;\n    }\n}\n\nexport class CTuidInfo extends CTuid<Tuid> {\n    protected async internalStart(id: any):Promise<void> {\n        let data = await this.entity.load(id)\n        await this.openVPage(this.VTuidInfo, data);\n    }\n    protected get VTuidInfo():typeof VTuidInfo {return VTuidInfo}\n}\n","export * from './cTuid';\nexport * from './vTuidMain';\nexport * from './vTuidEdit';\nexport * from './vTuidInfo';\nexport * from './vTuidView';\nexport * from './vTuidSelect';\n","import _ from 'lodash';\n\nexport interface KeyValueRes {\n    [key:string]: any;\n}\n\nexport interface Res<T extends KeyValueRes> {\n    [lang:string]: T | {[district:string]: T};\n}\n\nexport const resOptions:{lang:string, district:string} = {\n    lang: undefined,\n    district: undefined,\n}\n\nexport function setResOptions(lang:string, district:string) {\n    resOptions.lang = lang;\n    resOptions.district = district;\n}\n\n(function() {\n    let lang: string, district: string;\n    let language = (navigator.languages && navigator.languages[0])  // Chrome / Firefox\n        || navigator.language; // ||   // All browsers\n    //navigator.userLanguage; // IE <= 10\n    if (!language) {\n        lang = 'zh';\n        district = 'CN';\n    }\n    else {\n        let parts = language.split('-');\n        lang = parts[0];\n        if (parts.length > 1) district = parts[1];\n    }\n    setResOptions(lang, district);\n}());\n\nexport function resLang<T extends KeyValueRes>(res:Res<T>):T {\n    let {lang, district} = resOptions;\n    let ret:T = {} as T;\n    if (res === undefined) return ret;\n    _.merge(ret, res._);\n    let l = res[lang];\n    if (l === undefined) return ret;\n    _.merge(ret, l._);\n    let d = l[district];\n    if (d === undefined) return ret;\n    _.merge(ret, d);\n    let {entity} = ret;\n    if (entity !== undefined) {\n        for (let i in entity) {\n            entity[i.toLowerCase()] = entity[i];\n        }\n    }\n    return ret;\n}\n","import { Entity } from './entity';\nimport { ActionCaller } from './caller';\n\nexport class Action extends Entity {\n    get typeName(): string { return 'action';}\n    async submit(data:object) {\n        //await this.loadSchema();\n        //let text = this.pack(data);\n        //return await this.uqApi.action(this.name, {data:text});\n        return await new ActionSubmitCaller(this, data).request();\n    }\n    async submitReturns(data:object):Promise<{[ret:string]:any[]}> {\n        /*\n        await this.loadSchema();\n        let text = this.pack(data);\n        let result = await this.uqApi.actionReturns(this.name, {data:text});\n        */\n       return await new SubmitReturnsCaller(this, data).request();\n    }\n}\n\nexport class ActionSubmitCaller extends ActionCaller {\n    get path():string {return 'action/' + this.entity.name;}\n    buildParams():any {return {data: this.entity.pack(this.params)}}\n}\n\nclass SubmitReturnsCaller extends ActionSubmitCaller {\n    get path():string {return 'action/' + this.entity.name + '/returns';}\n    xresult(res:any):any {\n        let {returns} = this.entity;\n        let len = returns.length;\n        let ret:{[r:string]:any[]} = {};\n        for (let i=0; i<len; i++) {\n            let retSchema = returns[i];\n            ret[retSchema.name] = res[i];\n        }\n        return ret;\n    }\n}\n","import * as React from 'react';\nimport { VField } from './vField';\nimport { VArr } from './vArr';\nimport { VSubmit } from './vSubmit';\n\nexport abstract class VBand {\n    protected label: string;\n    protected view = () => <div />;\n\n    constructor(label:string) {\n        this.label = label;\n    }\n\n    render():JSX.Element {\n        //text-sm-right\n        return <div key={this.key} className=\"px-3\">\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    {this.label}\n                </label>\n                <div className=\"col-sm-10\">\n                    {this.renderContent()}\n                </div>\n            </div>\n        </div>;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {}\n    get key() {return this.label}\n    public getVFields():VField[] {return;}\n    public getVArr():VArr {return;}\n    public getVSubmit():VSubmit {return;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">content</div>;\n    }\n}\n\nexport interface FieldRes {\n    label: string;\n    placeHolder: string;\n    suffix: string;\n}\nexport class VFieldBand extends VBand {\n    protected vField:VField;\n    constructor(label:string, vField:VField) {\n        super(label);\n        this.vField = vField;\n    }\n\n    get key() {return this.vField.name}\n    public getVFields():VField[] {return [this.vField];}\n\n    protected renderContent():JSX.Element {\n        return this.vField.render();\n        /*\n        <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            {this.vField.render()}\n        </div>;*/\n    }\n}\n\nexport class VArrBand extends VBand {\n    protected vArr:VArr;\n    constructor(label:string, vArr:VArr) {\n        super(label);\n        this.vArr = vArr;\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {this.vArr.setAddRow(addRow)}\n    get key() {return this.vArr.name}\n    public getVArr():VArr {return this.vArr;}\n\n    render():JSX.Element {\n        return <React.Fragment key={this.key}>\n            {this.vArr && this.vArr.render()}\n        </React.Fragment>;\n    }\n}\n\nexport class VFieldsBand extends VBand {\n    protected vFields: VField[];\n    constructor(label:string, vFields:VField[]) {\n        super(label);\n        this.vFields = vFields;\n    }\n\n    get key() {return this.vFields[0].name}\n    public getVFields():VField[] {return this.vFields;}\n\n    protected renderContent():JSX.Element {\n        return <div className=\"form-control form-control-plaintext bg-white border border-info rounded \">\n            fields\n        </div>;\n    }\n}\n\nexport class VSubmitBand extends VBand {\n    protected vSubmit: VSubmit;\n    constructor(vSubmit:VSubmit) {\n        super(undefined);\n        this.vSubmit = vSubmit;\n    }\n\n    get key() {return '$submit'}\n\n    public getVSubmit():VSubmit {return this.vSubmit;}\n\n    render():JSX.Element {\n        return <div key=\"$submit\" className=\"px-3\">\n            <div className=\"form-group row\">\n                <div className=\"offset-sm-2 col-sm-10\">\n                    {this.vSubmit.render()}\n                </div>\n            </div>\n        </div>;\n    }\n}\n","import * as React from 'react';\n//import classNames from 'classnames'\nimport { ViewModel } from './viewModel';\nimport { VForm } from './vForm';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class VSubmit extends ViewModel {\n    private vForm: VForm;\n    constructor(vForm: VForm) {\n        super();\n        this.vForm = vForm;\n        this.caption = this.vForm.submitCaption;\n        this.className = 'btn btn-primary w-25';\n    }\n    @observable caption: string;\n    @observable className: string;\n\n    private onClickSubmit = async () => {\n        this.vForm.submit();\n    }\n\n    protected view = observer(() => {\n        let {isOk} = this.vForm;\n        return <button type=\"button\" \n            onClick={this.onClickSubmit}\n            className={this.className}\n            disabled={isOk === false}>\n            {this.caption}\n        </button>;\n    });\n}","\nexport abstract class Rule {\n    abstract check(defy:string[], value:any);\n}\n\nexport class RuleRequired extends Rule {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if (isNaN(value as number) === true) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push('不能为空');\n    }\n}\n\nexport class RuleNum extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (isNaN(n) === true) defy.push('必须是数字');\n    }\n}\n\nexport class RuleInt extends Rule {\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (Number.isNaN(n) === true || Number.isInteger(n) === false) {\n            defy.push('必须是整数');\n        }\n    }\n}\n\nexport class RuleMin extends RuleNum {\n    constructor(min: number) {\n        super();\n        this.min = min;\n    }\n    min: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) < this.min) defy.push('不能小于' + this.min);\n    }\n}\n\nexport class RuleMax extends RuleNum {\n    constructor(max: number) {\n        super();\n        this.max = max;\n    }\n    max: number;\n    check(defy:string[], value:any) {\n        super.check(defy, value);\n        if (Number(value) > this.max) defy.push('不能小于' + this.max);\n    }\n}\n","import * as React from 'react';\nimport { computed } from 'mobx';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { FA } from '../../../components';\nimport { ViewModel } from '../viewModel';\nimport { VForm, FormMode } from '../vForm';\nimport { Rule, RuleRequired, RuleInt, RuleNum, RuleMin, RuleMax } from '../rule';\nimport { Field } from '../../../uq';\nimport { FieldRes } from '../vBand';\nimport { FieldUI, FieldInputUI, FieldStringUI, FieldNumberUI } from '../../formUI';\n\nexport abstract class VField extends ViewModel {\n    protected form: VForm;\n    protected fieldUI: FieldUI;\n    protected fieldRes:FieldRes;\n    protected field: Field;\n    protected rules: Rule[];\n    constructor(form:VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super();\n        this.form = form;\n        this.field = field;\n        this.name = field.name;\n        this.fieldUI = fieldUI || {} as any;\n        this.fieldRes = fieldRes || {} as any;\n        this.init();\n    }\n\n    name: string;\n\n    protected init() {\n        this.buildRules();\n    }\n\n    protected buildRules() {\n        this.rules = [];\n        let {required} = this.fieldUI;\n        if (required === true || (this.field !== undefined && this.field.null === false)) {\n            this.rules.push(new RuleRequired());\n        }\n    }\n\n    @computed get checkRules(): string[] {\n        let defy = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        return defy;\n    }\n\n    @computed get isOk() {\n        if (this.rules.length === 0) return true;\n        let defy = this.checkRules;\n        return defy.length === 0;\n    }\n\n    @computed get value() { return this.form.values[this.name]; }\n    setValue(v:any) {\n        this.form.values[this.name]=v; \n    }\n    get error() { return this.form.errors[this.name]; }\n    set error(err:any) { this.form.errors[this.name]=err; }\n    protected parse(str:string):any {return str;}\n    get readonly():boolean {\n        let {mode} = this.form;\n        return mode === FormMode.readonly || \n            (mode === FormMode.edit && this.fieldUI.editable === false);\n    }\n}\n\nexport class VUnknownField extends VField {\n    protected view = () => {\n        //let {name, type} = this.fieldUI;\n        let type='', name = '';\n        return <input type=\"text\" className=\"form-control form-control-plaintext border border-info rounded bg-light\"\n            placeholder={'unkown control: ' + type + '-' + name} />;\n    }\n}\n\nexport abstract class VInputControl extends VField {\n    protected fieldUI: FieldInputUI;\n    protected input: HTMLInputElement;\n\n    protected inputType:string;\n    protected get maxLength():number {return undefined}\n\n    protected renderError = (className:string) => {\n        let {errors} = this.form;\n        let error = errors[this.name];\n        if (error === undefined) return;\n        return <div className={className}><FA name=\"exclamation-circle\" /> {error}</div>\n    }\n\n    /*\n    get value() {\n        return super.value;\n    }*/\n    setValue(v:any) {\n        super.setValue(v); this.setInputValue(); \n    }\n\n    protected ref = (input:HTMLInputElement) => {\n        this.input = input;\n        this.setInputValue();\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onFocus = () => {\n        this.error = undefined;\n    }\n\n    protected onBlur = () => {\n        let defy = this.checkRules;\n        if (defy.length > 0) {\n            this.error = defy[0];\n        }\n        this.form.computeFields();\n    }\n\n    protected onChange = (evt: React.ChangeEvent<any>) => {\n        let v = this.parse(evt.currentTarget.value);\n        if (v === null) {\n            return;\n        }\n        this.setValue(v);\n    }\n\n    protected onKeyPress: (event:React.KeyboardEvent<HTMLInputElement>) => void;\n    \n    protected view = observer(() => {\n        let {required} = this.fieldUI;\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = ['form-control', 'form-control-input'];\n        let errCN = 'text-danger small mt-1 mx-2';\n    \n        let redDot;\n        let input;\n        if (this.readonly === true) {\n            input = <input className={classNames(ctrlCN, 'bg-light')}\n                ref={this.ref}\n                type={this.inputType}\n                readOnly={true}\n            />;\n        }\n        else {\n            input = <input className={classNames(ctrlCN)}\n                ref={this.ref}\n                type={this.inputType}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onChange={this.onChange}\n                placeholder={placeHolder}\n                readOnly={false}\n                maxLength={this.maxLength}\n                onKeyPress={this.onKeyPress}\n            />;\n            if (required === true || this.field.null === false) {\n                redDot = <RedMark />;\n            }\n        }\n\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n\n        return <>\n            {redDot}\n            {inputGroup}\n            {this.renderError(errCN)}\n        </>\n    });\n}\n\nexport const RedMark = () => <b style={{color:'red', position:'absolute', left:'0.1em', top:'0.5em'}}>*</b>;\n\nexport class VStringField extends VInputControl {\n    protected fieldUI: FieldStringUI;\n    protected inputType:string = 'text';\n    protected get maxLength():number {return this.field.size}\n}\n\nconst KeyCode_Neg = 45;\nconst KeyCode_Dot = 46;\n\nexport abstract class VNumberControl extends VInputControl {\n    protected fieldUI: FieldNumberUI;\n    protected extraChars: number[];\n\n    protected init() {\n        super.init();\n        this.extraChars = [];\n        if (this.fieldUI !== undefined) {\n            let {min, max} = this.fieldUI;\n            if (min !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v<min) return ErrMin + min; return true;});\n                if (min < 0) this.extraChars.push(KeyCode_Neg);\n            }\n            else {\n                this.extraChars.push(KeyCode_Neg);\n            }\n    \n            if (max !== undefined) {\n                //this.rules.push((v:number) => {if (v === undefined) return; if (v>max) return ErrMax + max; return true});\n            }\n        }\n        switch (this.field.type) {\n            case 'dec':\n            case 'bigint':\n            case 'int':\n            case 'smallint':\n            case 'tinyint':\n                this.extraChars.push(KeyCode_Dot); break;\n        }\n    }\n\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleNum());\n        let {min, max} = this.fieldUI;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n    }\n\n    inputType:string = 'number';\n\n    protected parse(text:string):any {\n        try {\n            if (text.trim().length === 0) return undefined;\n            let ret = Number(text);\n            return (isNaN(ret) === true)? null : ret;\n        }\n        catch {\n            return null;\n        }\n    }\n\n    protected setInputValue() {\n        if (!this.input) return;\n        let v = this.value;\n        if (this.parse(this.input.value) === v) return;\n        this.input.value = v === null || v === undefined? '' : v;\n    }\n\n    protected onKeyPress = (event:React.KeyboardEvent<HTMLInputElement>) => {\n        let ch = event.charCode;\n        if (ch === 8 || ch === 0 || ch === 13 || (ch >= 48 && ch <= 57)) return;\n        if (this.extraChars !== undefined) {\n            if (this.extraChars.indexOf(ch) >= 0) {\n                switch (ch) {\n                    case KeyCode_Dot: this.onKeyDot(); break;\n                    case KeyCode_Neg: this.onKeyNeg(); event.preventDefault(); break;\n                }\n                return;\n            }\n        }\n        event.preventDefault();\n    }\n\n    private onKeyDot() {\n        let v = this.input.value;\n        let p = v.indexOf('.');\n        if (p >= 0) this.input.value = v.replace('.', '');\n    }\n    private onKeyNeg() {\n        let v = this.input.value;\n        let p = v.indexOf('-');\n        if (p >= 0) v = v.replace('-', '');\n        else v = '-'+v;\n        this.input.value = v;\n    }\n}\n\nexport class VIntField extends VNumberControl {\n    protected buildRules() {\n        super.buildRules();\n        this.rules.push(new RuleInt());\n    }\n}\n\nexport class VDecField extends VNumberControl {\n}\n\nexport class VTextField extends VStringField {\n\n}\n\nexport class VDateTimeField extends VStringField {\n\n}\n\nexport class VDateField extends VStringField {\n\n}\n","import React from 'react';\nimport { VField } from './vField';\nimport { Field } from '../../../uq';\nimport { VForm } from '../vForm';\nimport { observer } from 'mobx-react';\nimport { FieldRes } from '../vBand';\n\nexport class VComputeField extends VField {\n    constructor(form:VForm, field: Field, fieldRes: FieldRes) {\n        super(form, field, undefined, fieldRes);\n    }\n    protected view = observer(() => {\n        let value = this.form.values[this.field.name];\n        let {placeHolder, suffix} = this.fieldRes;\n        let ctrlCN = 'form-control form-control-input bg-light';\n        if (value === null) value = '';\n        let input = <input className={ctrlCN}\n            type=\"text\"\n            placeholder={placeHolder}\n            readOnly={true}\n            value={value}/>\n        let inputGroup;\n        if (suffix === undefined)\n            inputGroup = input;\n        else\n            inputGroup = <div className=\"input-group\">\n                {input}\n                <div className=\"input-group-append\">\n                    <span className=\"input-group-text\">{suffix}</span>\n                </div>\n            </div>;\n        return inputGroup;\n        /*\n            return <div \n            className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\">\n            {value} &nbsp;\n        </div>;\n        */\n    });\n}\n","import * as React from 'react';\n//import * as _ from 'lodash';\nimport { observer } from 'mobx-react';\nimport { VBand } from './vBand';\nimport { BandsBuilder } from './bandsBuilder';\nimport { Field, ArrFields } from '../../uq';\nimport { computed, observable, IObservableObject } from 'mobx';\nimport { VArr } from './vArr';\nimport { FormUI, FormUIBase, FormItems } from '../formUI';\nimport { VField } from './vField';\nimport { VSubmit } from './vSubmit';\nimport { IObservableArray } from 'mobx';\nimport { FA } from '../../components';\n\nexport type FieldCall = (form:VForm, field:Field, values:any) => Promise<any>;\nexport interface FieldInput {\n    select: FieldCall;\n    content: React.StatelessComponent<any>;\n    placeHolder: string;\n}\nexport interface FieldInputs {\n    [fieldOrArr:string]: FieldInput | {[field:string]: FieldInput};\n}\nexport enum FormMode {new, edit, readonly}\n\nexport interface FormOptions {\n    fields: Field[];\n    arrs?: ArrFields[];\n    ui: FormUIBase;\n    res: any;\n    inputs: FieldInputs;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n    none: string;\n    mode: FormMode;\n}\n\nexport class VForm {\n    protected fields: Field[];\n    protected arrs: ArrFields[];\n    protected bands: VBand[];\n    protected bandColl: {[key:string]: VBand};\n    protected onSubmit: ()=>Promise<void>;\n\n    constructor(options: FormOptions, onSubmit: ()=>Promise<void>) {\n        let {fields, arrs, ui, res, inputs, none, submitCaption, arrNewCaption, arrEditCaption, arrTitleNewButton, mode} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        this.ui = ui;\n        if (this.ui !== undefined) this.formItems = this.ui.items; //.compute = this.ui.compute;\n        this.res = res;\n        this.inputs = inputs;\n        this.none = none;\n        this.submitCaption = submitCaption;\n        this.arrNewCaption = arrNewCaption;\n        this.arrEditCaption = arrEditCaption;\n        this.arrTitleNewButton = arrTitleNewButton || <small><FA name=\"plus\" /> 新增</small>;\n        if (onSubmit === undefined) this.mode = FormMode.readonly;\n        else this.mode = mode;\n        this.buildFormValues();\n        this.buildBands(options, onSubmit);\n        this.onSubmit = onSubmit;\n    }\n\n    ui: FormUI;\n    res: any;\n    values: any;\n    errors: any;\n    formItems: FormItems;\n    mode: FormMode;\n    vFields: {[name:string]:VField} = {};\n    vArrs: {[name:string]: VArr} = {};\n    vSubmit: VSubmit;\n    inputs: FieldInputs;\n    none: string;\n    submitCaption: string;\n    arrNewCaption: string;\n    arrEditCaption: string;\n    arrTitleNewButton: JSX.Element;\n\n    private buildBands(options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.bandColl = {};\n        let bandsBuilder = new BandsBuilder(this, options, onSubmit);\n        this.bands = bandsBuilder.build();\n        for (let band of this.bands) {\n            this.bandColl[band.key] = band;\n            let vFields = band.getVFields();\n            if (vFields !== undefined) for (let f of vFields) this.vFields[f.name] = f;\n            let vArr = band.getVArr();\n            if (vArr !== undefined) this.vArrs[vArr.name] = vArr;\n            let vSubmit = band.getVSubmit();\n            if (vSubmit !== undefined) this.vSubmit = vSubmit;\n        }\n    }\n\n    private onFormSubmit = (event:React.FormEvent<any>) => {\n        event.preventDefault();\n        return false;\n    }\n\n    protected view = observer(({className}:{className:string}) => {\n        return <form className={className} onSubmit={this.onFormSubmit}>\n            {this.bands.map(v => v.render())}\n        </form>;\n    });\n\n    getBand(name:string) {\n        return this.bandColl[name];\n    }\n\n    computeFields() {\n        if (this.formItems === undefined) return;\n        let values = this.values;\n        for (let i in this.formItems) {\n            let item = this.formItems[i];\n            if (typeof item !== 'function') continue;\n            values[i] = item.call(this, values);\n        }\n    }\n\n    async submit() {\n        if (this.onSubmit === undefined) return;\n        await this.onSubmit();\n    }\n    \n    getValues() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name} = f;\n            let v = values[name]\n            ret[name] =  v !== null && typeof v === 'object' ? v.id : v;\n        }\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                let {name, fields, id, order} = arr;\n                let list = ret[name] = [];\n                let rows = this.vArrs[name].list;\n                for (let row of rows) {\n                    let item = {} as any;\n                    if (id !== undefined) item[id] = row[id];\n                    if (order !== undefined) item[order] = row[order];\n                    for (let f of fields) {\n                        let {name:fn} = f;\n                        let v = row[fn]\n                        item[fn] =  v !== null && typeof v === 'object' ? v.id : v;\n                    }\n                    list.push(item);\n                }\n            }\n        }\n        return ret;\n    }\n\n    get valueBoxs() {\n        let ret:any = {};\n        let values = this.values;\n        for (let f of this.fields) {\n            let {name, _tuid} = f;\n            let v = values[name]\n            ret[name] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n        }\n        if (this.arrs === undefined) return ret;\n        for (let arr of this.arrs) {\n            let {name, fields} = arr;\n            let list = ret[name] = this.vArrs[name].list.slice();\n            for (let row of list) {\n                for (let f of fields) {\n                    let {name:fn, _tuid} = f;\n                    let v = row[fn]\n                    row[fn] =  _tuid === undefined || typeof v === 'object' ? v : _tuid.boxId(v);\n                }\n            }\n        }\n        return ret;\n    }\n\n    setValues(initValues:any) {\n        if (initValues === undefined) {\n            this.reset();\n            return;\n        }\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            errors[fn] = undefined;\n            let v =  initValues[fn];\n            values[fn] = v;\n        }\n        // 还要设置arrs的values\n        for (let i in this.vArrs) {\n            let list = initValues[i];\n            if (list === undefined) continue;\n            let arrList = values[i] as IObservableArray<any>;\n            arrList.clear();\n            arrList.push(...list);\n        }\n    }\n\n    @computed get isOk():boolean {\n        for (let i in this.vFields) {\n            if (this.vFields[i].isOk === false) return false;\n        }\n        return true;\n    }\n    reset() {\n        let values = this.values;\n        let errors = this.errors;\n        for (let f of this.fields) {\n            let fn = f.name;\n            //if (this.compute !== undefined && this.compute[fn] !== undefined) continue;\n            values[fn] = null;\n            errors[fn] = undefined;\n        }\n        for (let i in this.vFields) {\n            let ctrl = this.vFields[i];\n            let cn = ctrl.name;\n            if (cn === undefined) continue;\n            //if (this.compute !== undefined && this.compute[cn] !== undefined) continue;\n            ctrl.setValue(null);\n        }\n        for (let i in this.vArrs) {\n            let vArr = this.vArrs[i];\n            vArr.reset();\n        }\n    }\n\n    getValue(fieldName: string) {\n        return this.values[fieldName];\n    }\n    setValue(fieldName: string, value: any) { this.values[fieldName] = value }\n\n    setError(fieldName:string, error:string) {this.errors[fieldName] = error}\n\n    private buildFieldValues(fields: Field[]):any {\n        let v: {[p:string]: any} = {\n            valueFromFieldName: function(propName:string) {\n                return this[propName];\n            }\n        };\n        for (let f of fields) {\n            let fn = f.name;\n            v[fn] = null;\n        }\n        return v;\n    }\n    private buildObservableValues():IObservableObject {\n        let v: {[p:string]: any} = this.buildFieldValues(this.fields);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) {\n                v[arr.name] = observable.array([], {deep:true});\n            }\n        }\n        let ret = observable(v);\n        return ret;\n    }\n    private buildFormValues() {\n        this.values = this.buildObservableValues();\n        this.errors = observable(this.buildFieldValues(this.fields));\n    }\n\n    render(className:string = \"py-3\"):JSX.Element {\n        return <this.view className={className} />\n    }\n}\n","import * as React from 'react';\nimport { IObservableArray } from 'mobx';\nimport _ from 'lodash';\nimport { Page, nav, List, Muted } from '../../components';\nimport { ViewModel, TypeContent, JSONContent } from './viewModel';\nimport { ArrFields } from '../../uq';\nimport { VForm, FieldInputs, FormMode } from './vForm';\nimport { FormArr } from '../formUI';\n\nexport type ArrEditRow = (initValues:any, onRowChanged:(rowValues:any)=>void) => Promise<void>;\n\nexport class VArr extends ViewModel {\n    protected mode: FormMode;\n    protected label: any;\n    protected header: any;\n    protected footer: any;\n    protected rowValues: any;                 // 仅仅用来判断是不是新增，undefined则是新增\n    protected onEditRow: ArrEditRow;\n    protected ownerForm:VForm;\n    protected vForm:VForm;\n    protected rowContent:TypeContent;\n    protected none: string;\n    protected newSubmitCaption: string;\n    protected editSubmitCaption: string;\n    protected addRow: ()=>Promise<void>;\n\n    name:string;\n    list: IObservableArray<any>;\n\n    constructor(ownerForm:VForm, arr:ArrFields, onEditRow?:ArrEditRow) {\n        super();\n        this.ownerForm = ownerForm;\n        let {name, fields} = arr;\n        this.name = name;\n        let {ui, res, mode, inputs, values} = ownerForm;\n        let arrsRes = res.arrs;\n        let arrRes = arrsRes !== undefined? arrsRes[name] : {};\n        let {label, none, newSubmit, editSubmit} = arrRes;\n        this.none = none || ownerForm.none;\n        this.newSubmitCaption = newSubmit || ownerForm.arrNewCaption;\n        this.editSubmitCaption = editSubmit || ownerForm.arrEditCaption;\n        this.label = label || name;\n        let arrUI = ((ui && ui.items[name]) || {}) as FormArr;\n        this.rowContent = arrUI.rowContent;// || JSONContent;\n        this.mode = mode;\n        if (this.onEditRow === undefined) {\n            this.vForm = new VForm({\n                fields: fields,\n                arrs: undefined,\n                ui: arrUI,\n                res: arrRes,\n                inputs: inputs[name] as FieldInputs,\n                none: ownerForm.none,\n                submitCaption: 'submit',\n                arrNewCaption: undefined,\n                arrEditCaption: undefined,\n                arrTitleNewButton: undefined,\n                mode: mode,\n            }, \n            mode===FormMode.readonly? undefined: this.onSubmit);\n        }\n        else {\n            this.onEditRow = onEditRow;\n        }\n        this.list = values[name];\n    }\n\n    reset() {\n        this.vForm.reset();\n        this.list.clear();\n    }\n\n    setAddRow(addRow:()=>Promise<void>) {\n        this.addRow = addRow;\n    }\n\n    protected rowPage = () => {\n        return <Page header={this.label} back=\"close\">\n            {this.vForm.render('py-3')}\n        </Page>\n    }\n    private onSubmit = async () => {\n        let {valueBoxs} = this.vForm;\n        await this.onRowChanged(valueBoxs);\n    }\n\n    private onRowChanged = async (rowValues:any) => {\n        if (this.rowValues === undefined) {\n            rowValues.$owner = this.ownerForm.values;\n            this.list.push(rowValues);\n            if (this.onEditRow === undefined)\n                this.vForm.reset();\n            else\n                await this.onEditRow(undefined, this.onRowChanged);\n        }\n        else {\n            _.merge(this.rowValues, rowValues);\n            if (this.onEditRow === undefined) nav.pop();\n        }\n    }\n\n    private renderItem = (item:any, index:number) => {\n        if (this.rowContent === undefined)\n            return <div className=\"px-3 py-2\"><JSONContent {...item} /></div>\n        return <this.rowContent {...item} />;\n    }\n    private showRow = async (rowValues:any):Promise<any> => {\n        if (this.onEditRow !== undefined) {\n            await this.onEditRow(rowValues, this.onRowChanged);\n            return;\n        }\n        this.vForm.reset();\n        if (rowValues !== undefined) this.vForm.setValues(rowValues);\n        nav.push(<this.rowPage />);\n    }\n    private editRow = async (rowValues:any): Promise<void> => {\n        this.rowValues = rowValues;\n        let {vSubmit} = this.vForm;\n        if (vSubmit !== undefined) {\n            vSubmit.caption = this.editSubmitCaption;\n            vSubmit.className = 'btn btn-outline-success';\n        }\n        this.vForm.mode = this.ownerForm.mode;\n        await this.showRow(rowValues);\n    }\n    private internalAddRow = async () => {\n        this.rowValues = undefined;\n        let {vSubmit} = this.vForm;\n        vSubmit.caption = this.newSubmitCaption;\n        vSubmit.className = 'btn btn-outline-success';\n        this.vForm.reset();\n        this.vForm.mode = FormMode.new;\n        await this.showRow(undefined);\n    }\n\n    protected view = () => {\n        let button;\n        if (this.addRow !== undefined || this.mode !== FormMode.readonly) {\n            button = <button onClick={this.addRow || this.internalAddRow}\n                type=\"button\" \n                className=\"btn btn-link p-0\">\n                {this.ownerForm.arrTitleNewButton}\n            </button>;\n        }\n        let header = this.header || <div className=\"px-3 bg-light small\" style={{paddingTop:'1px', paddingBottom:'1px'}}>\n            <div className=\"flex-fill align-self-center\">{this.label}</div>\n            {button}\n        </div>;\n        return <List className=\"pb-3\"\n            header={header}\n            none={<Muted className=\"px-3 py-2\">{this.none}</Muted>}\n            items={this.list}\n            item={{render: this.renderItem, onClick: this.editRow}} />;\n    };\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { tv } from '../../cUq/reactBoxId';\nimport { Field, TuidBox } from '../../../uq';\nimport { VField, RedMark } from './vField';\nimport { FieldUI } from '../../formUI';\nimport { VForm, FieldInput } from '../vForm';\nimport { FieldRes } from '../vBand';\n\nconst buttonStyle:React.CSSProperties = {\n    textAlign:'left', \n    paddingLeft:'0.75rem', \n    paddingRight:'0.75rem', \n    overflow: 'hidden'\n};\n\nexport class VTuidField extends VField {\n    protected vForm: VForm;\n    protected input: FieldInput;\n    protected tuid: TuidBox;\n\n    constructor(vForm: VForm, field:Field, fieldUI: FieldUI, fieldRes:FieldRes) {\n        super(vForm, field, fieldUI, fieldRes);\n        this.tuid = field._tuid;\n        this.vForm = vForm;\n        this.input = vForm.inputs[field.name] as FieldInput;\n    }\n\n    onClick = async () => {\n        if (this.readonly === true) {\n            if (!this.value) return;\n            await this.tuid.showInfo(); //this.value.id);\n            return;\n        }\n        let id:number;\n        if (this.input !== undefined) {\n            id = await this.input.select(this.vForm, this.field, this.vForm.getValues());\n        }\n        else {\n            alert('call undefined');\n            id = 0;\n        }\n        this.setValue(this.tuid.boxId(id));\n    }\n    protected view = observer(() => {\n        let {placeHolder} = this.fieldRes;\n        let disabled:boolean = false;\n        //let {_ownerField} = this.field;\n        let {_tuid} = this.field;\n        let {ownerField} = _tuid;\n        if (ownerField !== undefined) {\n            let {name} = ownerField;\n            disabled = this.vForm.getValue(name) === null;\n        }\n        let content;\n        if (this.value === null)\n            content = <>{placeHolder || this.input.placeHolder}</>;\n        else if (typeof this.value === 'object') {\n            content = tv(this.value);\n        }\n        else {\n            let idBox = this.tuid.boxId(this.value);\n            content = tv(idBox); // idBox.content();\n        }\n        if (this.readonly === true)\n        {\n            return <div \n                className=\"form-control form-control-plaintext border border-info rounded bg-light cursor-pointer\"\n                onClick={this.onClick}>\n                {content}\n            </div>;\n        }\n        let {required} = this.fieldUI;\n        let redDot = (required === true || this.field.null === false) && <RedMark />;\n        return <>\n            {redDot}\n            <button className=\"form-control btn btn-outline-info\"\n                type=\"button\"\n                disabled={disabled}\n                style={buttonStyle}\n                onClick={this.onClick}>\n                {content}\n            </button>\n        </>;\n    })\n}\n","import { VBand, VFieldBand, VArrBand, VSubmitBand, FieldRes } from './vBand';\nimport { Field, ArrFields } from '../../uq';\nimport { VForm, FormOptions } from './vForm';\nimport { FormItems, FieldUI, FormItem } from '../formUI';\nimport { VSubmit } from './vSubmit';\nimport { VField, buildVField, VComputeField } from './vField';\nimport { VArr } from './vArr';\nimport { VTuidField } from './vField/vTuidField';\n\nexport class BandsBuilder {\n    private vForm: VForm;\n    private onSubmit: (values:any)=>Promise<void>;\n    private fields: Field[];\n    private arrs: ArrFields[];\n    private formItems: FormItems;\n    private layout: string[];\n    private res: any;\n    constructor(vForm:VForm, options: FormOptions, onSubmit: (values:any)=>Promise<void>) {\n        this.vForm = vForm;\n        this.onSubmit = onSubmit;\n        let {fields, arrs, ui, res} = options;\n        this.fields = fields;\n        this.arrs = arrs;\n        if (ui !== undefined) {\n            let {items, layout} = ui;\n            this.formItems = items;\n            this.layout = layout;\n        }\n        this.res = res;\n    }\n\n    build():VBand[] {\n        //return this.bandUIs === undefined? this.bandsOnFly() : this.bandsFromUI();\n        return this.layout === undefined? this.bandsOnFly() : this.bandsFromLayout();\n    }\n\n    private resFromName(name:string, res:any):string|FieldRes {\n        if (res === undefined) return;\n        let {fields} = res;\n        if (fields === undefined) return;\n        return fields[name] || name;\n    }\n\n    private bandsOnFly():VBand[] {\n        let bands:VBand[] = [];\n        this.bandsFromFields(bands, this.fields, this.res);\n        if (this.arrs !== undefined) {\n            for (let arr of this.arrs) bands.push(this.bandFromArr(arr));\n        }\n        if (this.onSubmit !== undefined) {\n            bands.push(new VSubmitBand(new VSubmit(this.vForm)));\n        }\n        return bands;\n    }\n\n    private bandsFromFields(bands:VBand[], fields:Field[], res:any) {\n        if (fields === undefined) return;\n        for (let field of fields) bands.push(this.bandFromField(field, res));\n    }\n\n    private bandsFromLayout():VBand[] {\n        let bands:VBand[] = [];\n        /*\n        for (let bandUI of this.bandUIs)  {\n            let band = this.bandFromUI(bandUI);\n            bands.push(band);\n        }\n        */\n        return bands;\n    }\n\n    /*\n    private bandFromUI(bandUI:BandUI):VBand {\n        let {band} = bandUI;\n        switch (band) {\n            default: return this.bandFromFieldUI(bandUI as FieldBandUI);\n            case 'arr': return this.bandFromArrUI(bandUI as ArrBandUI);\n            case 'fields': return this.bandFromFieldsUI(bandUI as FieldsBandUI);\n            case 'submit': return this.bandFromSubmitUI(bandUI as SubmitBandUI);\n        }\n    }\n    \n    private bandFromFieldUI(bandUI: FieldBandUI): VFieldBand {\n        let {label} = bandUI;\n        let vField = this.vFieldFromUI(bandUI);\n        return new VFieldBand(label, vField);\n    }\n    private bandFromArrUI(bandUI: ArrBandUI): VArrBand {\n        let {label, name} = bandUI;\n        let vArr = this.vArrFromUI(bandUI);\n        return new VArrBand(label, vArr);\n    }\n    private bandFromFieldsUI(bandUI: FieldsBandUI): VFieldsBand {\n        let {label, fieldUIs} = bandUI;\n        let vFields = fieldUIs.map(v => this.vFieldFromUI(v));\n        return new VFieldsBand(label, vFields);\n    }\n    private bandFromSubmitUI(bandUI: SubmitBandUI): VSubmitBand {\n        if (this.onSubmit === undefined) return;\n        let vSubmit = new VSubmit(this.vForm);\n        return new VSubmitBand(vSubmit);\n    }\n    */\n/*\n    private vFieldFromField(field:Field, fieldRes:FieldRes, formItem: FormItem): VField {\n        let fieldUI:FieldUI = undefined;\n        if (formItem !== undefined) {\n            if (typeof formItem === 'function') {\n                return new VComputeField(this.vForm, field, fieldRes);\n            }\n        }\n        let ret = buildVField(this.vForm, field, formItem, fieldRes);\n        if (ret !== undefined) return ret;\n        return new VTuidField(field, fieldUI, fieldRes, this.vForm);\n    }\n*/\n    private bandFromField(field:Field, res:any):VBand {\n        let {name} = field;\n        let fieldRes:FieldRes;\n        let rfn = this.resFromName(name, res);\n        let label:string;\n        if (typeof rfn === 'object') {\n            label = rfn.label;\n            fieldRes = rfn;\n        }\n        else {\n            label = rfn as string;\n            fieldRes = undefined;\n        }\n        let vField:VField;\n        let formItem:FormItem;\n        if (this.formItems !== undefined) formItem = this.formItems[name];\n        //let vField = this.vFieldFromField(field, fieldRes as FieldRes, formItem);\n        //let fieldUI:FieldUI = undefined;\n        if (typeof formItem === 'function') {\n            vField = new VComputeField(this.vForm, field, fieldRes);\n        }\n        else {\n            vField = buildVField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        if (vField === undefined) {\n            vField = new VTuidField(this.vForm, field, formItem as FieldUI, fieldRes);\n        }\n        return new VFieldBand(label || name, vField);\n    }\n\n    private bandFromArr(arr: ArrFields):VBand {\n        let {name} = arr;\n        //let row = JSONContent;\n        //let bands:VBand[] = [];\n        //this.bandsFromFields(bands, fields, res);\n        let vArr = new VArr(this.vForm, arr); // name, res && res.label || name, row, bands);\n        return new VArrBand(name, vArr);\n    }\n\n    /*\n    private vFieldFromUI(fieldUI:FieldUI):VField {\n        return;\n    }\n\n    private vArrFromUI(arrBandUI:ArrBandUI):VArr {\n        return;\n    }\n    */\n}\n","import { VField, VIntField, VDecField, VStringField, VTextField, VDateTimeField, VDateField } from './vField';\nimport { Field } from '../../../uq';\nimport { FieldRes } from '../vBand';\nimport { VForm } from '../vForm';\nimport { FieldUI } from '../../formUI';\n\nexport function buildVField(form:VForm, field: Field, fieldUI: FieldUI, fieldRes:FieldRes): VField {\n    let vField:new (form:VForm, field:Field, ui:FieldUI, fieldRes:FieldRes) => VField;\n    switch (field.type) {\n        default: return;\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n            vField = VIntField;\n            break;\n        case 'id':\n            let {_tuid} = field;\n            if (_tuid !== undefined) return;\n            vField = VIntField;\n            break;\n        case 'dec':\n            vField = VDecField;\n            break;\n        case 'char':\n            vField = VStringField;\n            break;\n        case 'text':\n            vField = VTextField;\n            break;\n        case 'datetime':\n            vField = VDateTimeField;\n            break;\n        case 'date':\n            vField = VDateField;\n            break;\n    }\n    return new vField(form, field, fieldUI, fieldRes);\n}\n\n","export * from './vForm';\n","import { observable } from 'mobx';\nimport { isNumber } from 'util';\nimport _ from 'lodash';\nimport { LocalArr } from '../../tool';\nimport { BoxId } from './boxId';\nimport { TuidInner, TuidDiv } from './tuid';\n\nconst maxCacheSize = 1000;\n\nexport class IdCache {\n    private queue: number[] = [];               // 每次使用，都排到队头\n    private cache = observable.map({}, {deep: false});    // 已经缓冲的\n\n    protected localArr:LocalArr;\n    protected waitingIds: number[] = [];          // 等待loading的\n    protected tuidInner: TuidInner;\n\n    constructor(tuidLocal: TuidInner) {\n        this.tuidInner = tuidLocal;\n        this.initLocalArr();\n    }\n\n    protected initLocalArr() {\n        this.localArr = this.tuidInner.cache.arr(this.tuidInner.name + '.ids');\n    }\n\n    useId(id:number, defer?:boolean) {\n        if (id === undefined || id === 0) return;\n        if (isNumber(id) === false) return;\n        if (this.cache.has(id) === true) {\n            this.moveToHead(id);\n            return;\n        }\n        this.tuidInner.cacheTuids(defer===true?70:20);\n        this.cache.set(id, id);\n        if (this.waitingIds.findIndex(v => v === id) >= 0) {\n            this.moveToHead(id);\n            return;\n        }\n\n        if (this.queue.length >= maxCacheSize) {\n            // 缓冲已满，先去掉最不常用的\n            let r = this.queue.shift();\n            if (r === id) {\n                // 如果移除的，正好是现在用的，则插入\n                this.queue.push(r);\n                return;\n            }\n\n            //let rKey = String(r);\n            if (this.cache.has(r) === true) {\n                // 如果移除r已经缓存\n                this.cache.delete(r);\n            }\n            else {\n                // 如果移除r还没有缓存\n                let index = this.waitingIds.findIndex(v => v === r);\n                this.waitingIds.splice(index, 1);\n            }\n        }\n        this.waitingIds.push(id);\n        this.queue.push(id);\n        return;\n    }\n\n    private moveToHead(id:number) {\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n        this.queue.push(id);\n    }\n\n    getValue(id:number) {\n        return this.cache.get(id);\n    }\n\n    remove(id:number) {\n        this.cache.delete(id);\n        let index = this.queue.findIndex(v => v === id);\n        this.queue.splice(index, 1);\n    }\n\n    valueFromId(id:number|BoxId):any {\n        let _id:number;\n        switch (typeof id) {\n            case 'object': _id = (id as BoxId).id; break;\n            case 'number': _id = id as number; break;\n            default: return;\n        }\n        return this.getValue(_id);\n    }\n\n    resetCache(id:number) {\n        this.remove(id);\n        this.useId(id);\n    }\n\n    cacheValue(val:any):boolean {\n        if (val === undefined) return false;\n        let id = this.getIdFromObj(val);\n        if (id === undefined) return false;\n        let index = this.waitingIds.findIndex(v => v === id);\n        if (index>=0) this.waitingIds.splice(index, 1);\n        this.cache.set(id, val);\n        return true;\n    }\n    protected getIdFromObj(val:any) {return this.tuidInner.getIdFromObj(val)}\n\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let tuidValues = await this.loadIds();\n        await this.cacheIdValues(tuidValues);\n    }\n\n    private async cacheIdValues(tuidValues: any[]) {\n        if (tuidValues === undefined) return;\n        let tuids = this.unpackTuidIds(tuidValues);\n        for (let tuidValue of tuids) {\n            if (this.cacheValue(tuidValue) === false) continue;\n            this.cacheTuidFieldValues(tuidValue);\n        }\n    }\n    async modifyIds(ids:any[]):Promise<void> {\n        //let tuidValues:string[] = await this.tuidInner.loadTuidIds(this.divName, ids);\n        let tuidValues:string[] = await this.loadTuidIdsOrLocal(ids);\n        let localedValues = tuidValues.filter(v => {\n            let p = v.indexOf('\\t');\n            if (p<0) p = v.length;\n            let id = Number(v.substr(0, p));\n            let val = this.localArr.getItem(id);\n            return (val !== undefined);\n        });\n        if (localedValues.length === 0) return;\n        await this.cacheIdValues(localedValues);\n    }\n    protected divName:string = undefined;\n    protected async loadIds(): Promise<any[]> {\n        //let ret = await this.tuidInner.loadTuidIds(this.divName, this.waitingIds);\n        let ret = await this.loadTuidIdsOrLocal(this.waitingIds);\n        return ret;\n    }\n    protected unpackTuidIds(values:string[]):any[] {\n        return this.tuidInner.unpackTuidIds(values);\n    }\n    protected cacheTuidFieldValues(tuidValue: any) {\n        this.tuidInner.cacheTuidFieldValues(tuidValue);\n    }\n\n    async assureObj(id:number):Promise<any> {\n        let val = this.cache.get(id);\n        switch (typeof val) {\n            case 'object': return;\n            case 'number': this.cache.set(id, id); break;\n        }\n        //let ret = await this.tuidInner.loadTuidIds(this.divName, [id]);\n        let ret = await this.loadTuidIdsOrLocal([id]);\n        await this.cacheIdValues(ret);\n    }\n\n    private async loadTuidIdsOrLocal(ids:number[]):Promise<string[]> {\n        let ret:string[] = [];        \n        let netIds:number[] = [];\n        for (let id of ids) {\n            let value = this.localArr.getItem(id);\n            if (value === undefined)\n                netIds.push(id);\n            else\n                ret.push(value);\n        }\n        let len = netIds.length;\n        if (len > 0) {\n            let netRet = await this.tuidInner.loadTuidIds(this.divName, netIds);\n            for (let i=0; i<len; i++) {\n                //有些id可能没有内容，不会返回\n                //let id = netIds[i]; \n                let row:string = netRet[i];\n                if (!row) continue;\n                let p = row.indexOf('\\t');\n                if (p < 0) p = row.length;\n                let id = Number(row.substr(0, p));\n                _.remove(netIds, v => v === id);\n                ret.push(row);\n                this.localArr.setItem(id, row);\n            }\n            len = netIds.length;\n            for (let i=0; i<len; i++) {\n                this.localArr.setItem(netIds[i], '');\n            }\n        }\n        return ret;\n    }\n}\n\nexport class IdDivCache extends IdCache {\n    private div: TuidDiv;\n    protected divName:string;\n\n    constructor(tuidLocal:TuidInner, div: TuidDiv) {\n        super(tuidLocal);\n        this.div = div;\n        this.divName = div.name;\n        this.localArr = tuidLocal.cache.arr(tuidLocal.name + '.ids.' + this.divName);\n    }\n\n    protected initLocalArr() {\n        // 这个不需要，必须去掉\n        // this.localArr = this.tuidInner.cache.arr(this.tuidInner.name + '.ids');\n    }\n\n    protected getIdFromObj(val:any) {return this.div.getIdFromObj(val)}\n    protected unpackTuidIds(values:string[]):any[] {\n        return this.div.unpackTuidIds(values);\n    }\n    protected cacheTuidFieldValues(tuidValue: any) {\n        this.div.cacheTuidFieldValues(tuidValue);\n    }\n\n    /*\n    async cacheIds():Promise<void> {\n        if (this.waitingIds.length === 0) return;\n        let tuidValues = await this.loadIds();\n        if (tuidValues !== undefined) {\n            let tuids = this.tuidLocal.unpackTuidIds(tuidValues);\n            for (let tuidValue of tuids) {\n                if (this.cacheValue(tuidValue) === false) continue;\n                this.tuidLocal.cacheTuidFieldValues(tuidValue);\n                this.afterCacheValue(tuidValue);\n            }\n        }\n    }\n    */\n}\n","import _ from 'lodash';\nimport { LocalArr } from '../../tool';\nimport { Entity } from '../entity';\nimport { UqMan, ArrFields, Field, SchemaFrom } from '../uqMan';\nimport { EntityCaller } from '../caller';\nimport { BoxId } from './boxId';\nimport { IdCache, IdDivCache } from './idCache';\n\nexport interface TuidSaveResult {\n    id: number;\n    inId: number;\n}\n\nexport abstract class Tuid extends Entity {\n    readonly typeName:string = 'tuid';\n    protected idName: string;\n    cached: boolean;\n    unique: string[];\n\n    /*\n    constructor(uq:UqMan, name:string, typeId:number) {\n        super(uq, name, typeId)\n    }*/\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {id} = schema;\n        this.idName = id;\n    }\n\n    buildTuidBox(): TuidBox {\n        return new TuidBox(this);\n    }\n\n    getIdFromObj(obj:any):number {return obj[this.idName]}\n    abstract useId(id:number):void;\n    abstract boxId(id:number):BoxId;\n    abstract valueFromId(id:number):any;\n    abstract async assureBox (id:number): Promise<void>;\n    cacheIds() {}\n    async modifyIds(ids:any[]) {}\n    isImport = false;\n    abstract get hasDiv():boolean;// {return this.divs!==undefined}\n    abstract div(name:string):TuidDiv;\n    abstract async loadMain(id:number|BoxId):Promise<any>;\n    abstract async load(id:number|BoxId):Promise<any>;\n    abstract async all():Promise<any[]>;\n    abstract async save(id:number, props:any):Promise<TuidSaveResult>;\n    abstract async search(key:string, pageStart:string|number, pageSize:number):Promise<any>;\n    abstract async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any>;\n    abstract async loadArr(arr:string, owner:number, id:number):Promise<any>;\n    abstract async saveArr(arr:string, owner:number, id:number, props:any):Promise<void>;\n    abstract async posArr(arr:string, owner:number, id:number, order:number):Promise<void>;\n}\n\nexport class TuidInner extends Tuid {\n    private divs: {[div:string]: TuidDiv};\n    protected cacheFields: Field[];\n    protected idCache: IdCache;\n    protected localArr:LocalArr;\n    constructor(uq:UqMan, name:string, typeId:number) {\n        super(uq, name, typeId);\n        this.idCache = new IdCache(this);\n        this.localArr = this.cache.arr(this.name + '.whole');\n        if (uq.newVersion === true) this.localArr.removeAll();\n    }\n\n    public setSchema(schema:any) {\n        super.setSchema(schema);\n        let {arrs} = schema;\n        if (arrs !== undefined) {\n            this.divs = {};\n            for (let arr of arrs) {\n                let {name} = arr;\n                let tuidDiv = new TuidDiv(this.uq, this, name);\n                this.divs[name] = tuidDiv;\n                tuidDiv.setSchema(arr);\n                tuidDiv.buildFieldsTuid();\n            }\n        }\n    }\n    \n    useId(id:number, defer?:boolean) {\n        this.idCache.useId(id, defer);\n    }\n    boxId(id:number):BoxId {\n        if (typeof id === 'object') return id;\n        this.useId(id);\n        let {createBoxId} = this.uq;\n        if (!createBoxId) return {id: id} as BoxId;\n        return createBoxId(this, id);\n    }\n    valueFromId(id:number) {return this.idCache.getValue(id)}\n    async assureBox (id:number):Promise<void> {\n        await this.idCache.assureObj(id);\n    }\n\n    cacheIds() {\n        this.idCache.cacheIds();\n        if (this.divs === undefined) return;\n        for (let i in this.divs) this.divs[i].cacheIds();\n    }\n    async modifyIds(ids:any[]) {\n        await this.idCache.modifyIds(ids);\n    }\n    cacheTuids(defer:number) {this.uq.cacheTuids(defer)}\n    get hasDiv():boolean {return this.divs!==undefined}\n    div(name:string):TuidDiv {\n        return this.divs && this.divs[name];\n    }\n    async loadTuidIds(divName:string, ids:number[]):Promise<any[]> {\n        //return await this.uqApi.tuidIds(this.name, divName, ids);\n        let ret:any[] = await new IdsCaller(this, {divName:divName, ids:ids}).request();\n        if (ret.length > 0) this.cached = true;\n        return ret;\n    }\n    async loadMain(id:number|BoxId):Promise<any> {\n        if (typeof id === 'object') id = id.id;\n        await this.idCache.assureObj(id);\n        return this.idCache.valueFromId(id);\n    }\n    async load(id:number|BoxId):Promise<any> {\n        if (id === undefined || id === 0) return;\n        //let cacheValue = this.idCache.valueFromId(id); \n        //if (typeof cacheValue === 'object') return cacheValue;\n        if (typeof id === 'object') id = id.id;\n        let valuesText = this.localArr.getItem(id);\n        let values: any;\n        if (valuesText) {\n            values = JSON.parse(valuesText);\n        }\n        else {\n            values = await new GetCaller(this, id).request();\n            if (values !== undefined) {\n                this.localArr.setItem(id, JSON.stringify(values));\n            }\n        }\n        if (values === undefined) return;\n        for (let f of this.schema.fields) {\n            let {tuid} = f;\n            if (tuid === undefined) continue;\n            let t = this.uq.getTuid(tuid);\n            if (t === undefined) continue;\n            let n = f.name;\n            values[n] = t.boxId(values[n]);\n        }\n        this.idCache.cacheValue(values);\n        this.cacheTuidFieldValues(values);\n        return values;\n    }\n\n    cacheTuidFieldValues(values:any) {\n        let {fields, arrs} = this.schema;\n        this.cacheFieldsInValue(values, fields);\n        if (arrs !== undefined) {\n            for (let arr of arrs as ArrFields[]) {\n                let {name, fields} = arr;\n                let arrValues = values[name];\n                if (arrValues === undefined) continue;\n                let tuidDiv = this.div(name);\n                for (let row of arrValues) {\n                    //row._$tuid = tuidDiv;\n                    //row.$owner = this.boxId(row.owner);\n                    tuidDiv.cacheValue(row);\n                    this.cacheFieldsInValue(row, fields);\n                }\n            }\n        }\n    }\n\n    public buildFieldsTuid() {\n        super.buildFieldsTuid();\n        let {mainFields} = this.schema;\n        if (mainFields === undefined) debugger;\n        this.uq.buildFieldTuid(this.cacheFields = mainFields || this.fields);\n    }\n\n    unpackTuidIds(values:string[]):any[] {\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\n    }\n\n    async save(id:number, props:any):Promise<TuidSaveResult> {\n        /*\n        let {fields} = this.schema;\n        let params:any = {$id: id};\n        for (let field of fields as Field[]) {\n            let {name, tuid, type} = field;\n            let val = props[name];\n            if (tuid !== undefined) {\n                if (typeof val === 'object') {\n                    if (val !== null) val = val.id;\n                }\n            }\n            else {\n                switch (type) {\n                    case 'date':\n                    case 'datetime':\n                        val = new Date(val).toISOString();\n                        val = (val as string).replace('T', ' ');\n                        val = (val as string).replace('Z', '');\n                        break;\n                }\n            }\n            params[name] = val;\n        }\n        let ret = await this.uqApi.tuidSave(this.name, params);\n        return ret;\n        */\n        let ret = new SaveCaller(this, {id:id, props:props}).request();\n        if (id !== undefined) {\n            this.idCache.remove(id);\n            this.localArr.removeItem(id);\n        }\n        return ret;\n    }\n    async all():Promise<any[]> {\n        let ret: any[] = await new AllCaller(this, {}).request();\n        return ret;\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any[]> {\n        let ret:any[] = await this.searchArr(undefined, key, pageStart, pageSize);\n        return ret;\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        //let api = this.uqApi;\n        //let ret = await api.tuidSearch(this.name, undefined, owner, key, pageStart, pageSize);\n        let params = {arr:undefined, owner:owner, key:key, pageStart:pageStart, pageSize:pageSize};\n        let ret = await new SearchCaller(this, params).request();\n        let {fields} = this.schema;\n        for (let row of ret) {\n            this.cacheFieldsInValue(row, fields);\n        }\n        return ret;\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        if (id === undefined || id === 0) return;\n        //let api = this.uqApi;\n        //return await api.tuidArrGet(this.name, arr, owner, id);\n        return await new LoadArrCaller(this, {arr:arr, owner:owner, id:id}).request();\n    }\n    async saveArr(arr:string, owner:number, id:number, props:any) {\n        //let params = _.clone(props);\n        //params[\"$id\"] = id;\n        //return await this.uqApi.tuidArrSave(this.name, arr, owner, params);\n        return await new SaveArrCaller(this, {arr:arr, owner:owner, id:id, props:props}).request();\n    }\n\n    async posArr(arr:string, owner:number, id:number, order:number) {\n        //return await this.uqApi.tuidArrPos(this.name, arr, owner, id, order);\n        return await new ArrPosCaller(this, {arr:arr, owner:owner, id:id, order:order}).request();\n    }\n}\n\nabstract class TuidCaller<T> extends EntityCaller<T> {\n    protected get entity(): Tuid {return this._entity as Tuid};\n}\n\n// 包含main字段的load id\n// 当前为了兼容，先调用的包含所有字段的内容\nclass GetCaller extends TuidCaller<number> {\n    method = 'GET';\n    get path():string {return `tuid/${this.entity.name}/${this.params}`}\n}\n\nclass IdsCaller extends TuidCaller<{divName:string, ids:number[]}> {\n    get path():string {\n        let {divName} = this.params;\n        return `tuidids/${this.entity.name}/${divName !== undefined?divName:'$'}`;\n    }\n    buildParams():any {return this.params.ids}\n    xresult(res:any):any {\n        return (res as string).split('\\n');\n    }\n}\n\n\nclass SaveCaller extends TuidCaller<{id:number, props:any}> {\n    get path():string {return `tuid/${this.entity.name}`}\n    buildParams():any {\n        let {fields, arrs} = this.entity.schema;\n        let {id, props} = this.params;\n        let params:any = {$id: id};\n        this.transParams(params, props, fields);\n        if (arrs !== undefined) {\n            for (let arr of arrs) {\n                let arrName = arr.name;\n                let arrParams = [];\n                let arrFields = arr.fields;\n                let arrValues = props[arrName];\n                if (arrValues !== undefined) {\n                    for (let arrValue of arrValues) {\n                        let row = {};\n                        this.transParams(row, arrValue, arrFields);\n                        arrParams.push(row);\n                    }\n                }\n                params[arrName] = arrParams;\n            }\n        }\n        return params;\n    }\n    private transParams(values:any, params:any, fields:Field[]) {\n        if (params === undefined) return;\n        for (let field of fields) {\n            let {name, tuid, type} = field;\n            let val = params[name];\n            if (tuid !== undefined) {\n                if (typeof val === 'object') {\n                    if (val !== null) val = val.id;\n                }\n            }\n            else {\n                switch (type) {\n                    case 'date':\n                        val = this.entity.buildDateParam(val); \n                        //val = (val as string).replace('T', ' ');\n                        //val = (val as string).replace('Z', '');\n                        break;\n                    case 'datetime':\n                        val = this.entity.buildDateTimeParam(val);\n                        //val = new Date(val).toISOString();\n                        //val = (val as string).replace('T', ' ');\n                        //val = (val as string).replace('Z', '');\n                        break;\n                }\n            }\n            values[name] = val;\n        }\n    }\n}\n\nclass SearchCaller extends TuidCaller<{arr:string, owner:number, key:string, pageStart:string|number, pageSize:number}> {\n    get path():string {return `tuids/${this.entity.name}`}\n}\n\nclass AllCaller extends TuidCaller<{}> {\n    method = 'GET';\n    get path():string {return `tuid-all/${this.entity.name}`}\n}\n\nclass LoadArrCaller extends TuidCaller<{arr:string, owner:number, id:number}> {\n    method = 'GET';\n    get path():string {\n        let {arr, owner, id} = this.params;\n        return `tuid-arr/${this.entity.name}/${owner}/${arr}/${id}`;\n    }\n}\n\nclass SaveArrCaller extends TuidCaller<{arr:string, owner:number, id:number, props:any}> {\n    get path():string {\n        let {arr, owner} = this.params;\n        return `tuid-arr/${this.entity.name}/${owner}/${arr}/`;\n    }\n    buildParams():any {\n        let {id, props} = this.params;\n        let params = _.clone(props);\n        params['$id'] = id;\n        return params;\n    }\n}\n\nclass ArrPosCaller extends TuidCaller<{arr:string, owner:number, id:number, order:number}> {\n    get path():string {\n        let {arr, owner} = this.params;\n        return `tuid-arr-pos/${this.entity.name}/${owner}/${arr}/`;\n    }\n    buildParams():any {\n        let {id, order} = this.params;\n        return { bid: id, $order: order}\n    }\n}\n\nexport class TuidImport extends Tuid {\n    private tuidLocal: TuidInner;\n\n    constructor(uq:UqMan, name:string, typeId:number, from: SchemaFrom) {\n        super(uq, name, typeId);\n        this.from = from;\n    }\n\n    setFrom(tuidLocal: TuidInner) {this.tuidLocal = tuidLocal}\n    \n    readonly from: SchemaFrom;\n    isImport = true;\n\n    useId(id:number) {this.tuidLocal.useId(id);}\n    boxId(id:number):BoxId {return this.tuidLocal.boxId(id);}\n    valueFromId(id:number) {return this.tuidLocal.valueFromId(id)}\n    async assureBox(id:number):Promise<void> {\n        await this.tuidLocal.assureBox(id);\n    }\n    get hasDiv():boolean {return this.tuidLocal.hasDiv}\n    div(name:string):TuidDiv {return this.tuidLocal.div(name)}\n    async loadMain(id:number|BoxId):Promise<any> {\n        let ret = await this.tuidLocal.loadMain(id);\n        return ret;\n    }\n    async load(id:number|BoxId):Promise<any> {\n        return await this.tuidLocal.load(id);\n    }\n    async save(id:number, props:any):Promise<TuidSaveResult> {\n        return await this.tuidLocal.save(id, props);\n    }\n    async all():Promise<any[]> {\n        return await this.tuidLocal.all();\n    }\n    async search(key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        return await this.tuidLocal.search(key, pageStart, pageSize);\n    }\n    async searchArr(owner:number, key:string, pageStart:string|number, pageSize:number):Promise<any> {\n        return await this.tuidLocal.searchArr(owner, key, pageStart, pageSize);\n    }\n    async loadArr(arr:string, owner:number, id:number):Promise<any> {\n        return await this.tuidLocal.loadArr(arr, owner, id);\n    }\n    async saveArr(arr:string, owner:number, id:number, props:any):Promise<void> {\n        await this.tuidLocal.saveArr(arr, owner, id, props);\n    }\n    async posArr(arr:string, owner:number, id:number, order:number):Promise<void> {\n        await this.tuidLocal.posArr(arr, owner, id, order);\n    }\n}\n\n// field._tuid 用这个接口\n// Tuid, TuidDiv 实现这个接口\nexport class TuidBox {\n    tuid: Tuid;\n    ownerField:Field = undefined;\n    constructor(tuid: Tuid) {\n        this.tuid = tuid;\n    }\n\n    boxId(id:number):BoxId {\n        return this.tuid.boxId(id);\n    }\n    getIdFromObj(obj:any):number {\n        return this.tuid.getIdFromObj(obj);\n    }\n    useId(id:number):void {\n        return this.tuid.useId(id);\n    }\n    async showInfo() {\n        alert('showInfo not implemented');\n    }\n}\n\n\nexport class TuidDiv extends TuidInner /* Entity*/ {\n    readonly typeName:string = 'div';\n    protected cacheFields: Field[];\n    protected tuid: TuidInner;\n    protected idName: string;\n    protected idCache: IdDivCache;\n\n    //ui: React.StatelessComponent<any>;\n    //res: any;\n\n    constructor(uq: UqMan, tuid: TuidInner, name: string) {\n        super(uq, name, 0);\n        this.tuid = tuid;\n        this.idName = 'id';\n        this.idCache = new IdDivCache(tuid, this);\n    }\n\n    get owner() {return this.tuid}\n\n    /*\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.buildFieldsTuid();\n    }*/\n\n    /*\n    setUIRes(ui:any, res:any) {\n        this.ui = ui && ui.content;\n        this.res = res;\n    }\n    */\n\n    buildFieldsTuid() {\n        super.buildFieldsTuid();\n        let {mainFields} = this.schema;\n        if (mainFields === undefined) debugger;\n        this.uq.buildFieldTuid(this.cacheFields = mainFields);\n    }\n\n    buildTuidDivBox(ownerField: Field): TuidBoxDiv {\n        return new TuidBoxDiv(this.tuid, this, ownerField);\n    }\n\n    getIdFromObj(obj:any):number {return obj[this.idName]}\n    cacheValue(value:any):void {\n        this.idCache.cacheValue(value);\n    }\n\n    useId(id:number, defer?:boolean):void {\n        this.idCache.useId(id, defer);\n    }\n\n    /*\n    boxId(id:number):BoxId {\n        if (typeof id === 'object') return id;\n        this.useId(id);\n        //return new BoxDivId(this.tuid, this, id);\n        return this.tuid.boxDivId(this, id);\n    }\n    */\n    valueFromId(id:number):any {\n        return this.idCache.getValue(id)\n    }\n\n    async assureBox(id:number):Promise<void> {\n        await this.idCache.assureObj(id);\n    }\n\n    async cacheIds() {\n        await this.idCache.cacheIds();\n    }\n\n    cacheTuidFieldValues(values:any) {\n        let fields = this.schema.fields;\n        this.cacheFieldsInValue(values, fields);\n    }\n\n    unpackTuidIds(values:string[]):any[] {\n        return this.unpackTuidIdsOfFields(values, this.cacheFields);\n    }\n}\n\nexport class TuidBoxDiv extends TuidBox {\n    ownerField: Field;\n    private div: TuidDiv;\n    constructor(tuid: Tuid, div: TuidDiv, ownerField: Field) {\n        super(tuid);\n        this.div = div;\n        this.ownerField = ownerField;\n    }\n\n    boxId(id:number):BoxId {\n        return this.div.boxId(id);\n    }\n    getIdFromObj(obj:any):number {\n        return this.div.getIdFromObj(obj);\n    }\n    useId(id:number):void {\n        return this.div.useId(id);\n    }\n}\n","\nexport * from './boxId';\nexport { Tuid, TuidImport, TuidInner, TuidDiv, TuidBox } from './tuid';\nexport { TuidsCache } from './tuidsCache';\nexport { tv, ReactBoxId } from './reactBoxId';","import { CBase, CSub } from 'tonva';\r\nimport { UQs } from './uqs';\r\n\r\nexport abstract class CUqBase extends CBase {\r\n  protected get uqs() : UQs {return this._uqs as UQs};\r\n}\r\n\r\nexport abstract class CUqSub extends CSub {\r\n  protected get uqs() : UQs {return this._uqs as UQs};\r\n  protected readonly owner: any;\r\n}\r\n","export const consts = {\n    uqBasedata: \"bruce/mi\",\n    appIcon: 'http://101.200.46.56/imgs/Bear-icon.png',\n    miApiHost: 'http://106.14.213.254/',\n    miApiHostDebug: 'http://localhost:6010/',\n    isDevelopment: process.env.NODE_ENV === 'development',\n}","import * as React from 'react';\nimport { BoxId } from './boxId';\nimport { Tuid } from './tuid';\nimport { observer } from 'mobx-react';\n\nconst TuidContent = (tuidName:string, values:any, x?:any) => {\n    return <>{tuidName}: {stringify(values)}</>;\n};\n\nfunction stringify(values: any): string {\n    let s = '{';\n    if (values === undefined) return 'undefined';\n    for (let i in values) {\n        let v = values[i];\n        s += i + ': ';\n        if (v === undefined) {\n            s += 'undefined';\n        }\n        else if (v === null) {\n            s += 'null';\n        }\n        else {\n            switch (typeof v) {\n                default:\n                    s += v;\n                    break;\n                case 'function':\n                    s += 'function';\n                    break;\n                case 'object':\n                    s += '{obj}';\n                    break;\n            }\n        }\n        s += ', ';\n    }\n    return s + '}';\n}\n\nexport class ReactBoxId implements BoxId {\n    readonly id: number;\n    protected tuid: Tuid;\n    protected ui: (values:any) => JSX.Element;\n    readonly isUndefined:boolean;\n    constructor(id: number, tuid: Tuid, ui: (values:any) => JSX.Element) {\n        this.id = id;\n        this.tuid = tuid;\n        this.ui = ui;\n        this.isUndefined = (this.tuid === undefined);\n    }\n\n    get obj():any {\n        return this.tuid.valueFromId(this.id);\n    }\n\n    render(ui:TvTemplet, x:any):JSX.Element {\n        if (this.id === undefined || this.id === null) return;\n        let boxName = this.boxName; // this.tuid.name;\n        let val = this.obj; // this.tuid.valueFromId(this.id);\n        if (this.isUndefined === true) {\n            if (ui !== undefined) return ui(val, x);\n            return TuidContent(boxName, val, x);\n        }\n        switch (typeof val) {\n            case 'undefined':\n                return <del className=\"text-black-50\">{boxName} undefined</del>;\n            case 'number':\n                return <del className=\"text-black-50\">{boxName} {this.id}</del>;\n        }\n        if (ui === undefined) {\n            ui = this.ui;\n        }\n        if (ui !== undefined) {\n            if (typeof ui !== 'function') {\n                ui = (ui as any).content;\n            }\n            if (ui !== undefined) {\n                let ret = ui(val/*, this.tuidUR.res*/);\n                if (ret !== undefined) return ret;\n                return <del className=\"text-danger\">{boxName} {this.id}</del>;\n            }\n        }\n\n        return TuidContent(boxName, val);\n    }\n\n    get boxName():string {return this.tuid.name}\n    // ui(): TvTemplet {return this.tuid.ui}\n    // res(): any {return this.tuid.res}\n\n    async assure(): Promise<void> {\n        await this.tuid.assureBox(this.id);\n    }\n}\n\nfunction boxIdContent(bi: number|BoxId, ui:TvTemplet, x:any) {\n    let logContent:any;\n    let boxId:ReactBoxId = bi as ReactBoxId;\n    switch(typeof bi) {\n        case 'undefined': logContent = <>boxId undefined</>; break;\n        case 'number': logContent = <>id:{bi}</>; break;\n        default:\n            if (typeof boxId.render !== 'function') {\n                if (ui === undefined) {\n                    logContent = TuidContent(bi.boxName, bi, x);\n                }\n                else {\n                    return ui(bi, x);\n                }\n            }\n            break;\n    }\n    if (logContent !== undefined) {\n        return <del className=\"text-danger\">{logContent}</del>;\n    }\n    return boxId.render(ui, x);\n}\n\nexport type TvTemplet = (values?:any, x?:any) => JSX.Element;\n\ninterface Props {\n    tuidValue: number|BoxId, \n    ui?: TvTemplet,\n    x?: any,\n    nullUI?: ()=>JSX.Element\n}\n\nconst Tv = observer(({tuidValue, ui, x, nullUI}:Props) => {\n    if (tuidValue === undefined) {\n        if (nullUI === undefined) return <>[undefined]</>;\n        return nullUI();\n    }\n    if (tuidValue === null) {\n        if (nullUI === undefined) return <>[null]</>;\n        return nullUI();\n    }\n    let ttv = typeof tuidValue;\n    switch (ttv) {\n        default:\n            if (ui === undefined)\n                return <>{ttv}-{tuidValue}</>;\n            else {\n                let ret = ui(tuidValue, x);\n                if (ret !== undefined) return ret;\n                return <>{tuidValue}</>;\n            }\n        case 'object':\n            let divObj = boxIdContent(tuidValue, ui, x);\n            if (divObj !== undefined) return divObj;\n            return nullUI === undefined? <>id null</>: nullUI();\n        case 'number':\n            return <>id...{tuidValue}</>;\n    }\n});\n\nexport const tv = (tuidValue:number|BoxId, ui?:TvTemplet, x?:any, nullUI?:()=>JSX.Element):JSX.Element => {\n    return <Tv tuidValue={tuidValue} ui={ui} x={x} nullUI={nullUI} />;\n};\n","import {HttpChannel} from './httpChannel';\nimport { Caller } from './caller';\n\nexport async function refetchApi(channel:HttpChannel, url:string, options:any, \n    resolve:(values:any)=>any, reject:(reason:any)=>void)\n{\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    async xcall(caller:Caller<any>):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.xcall(this.path, caller);\n    }\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import * as React from 'react';\n//import _ from 'lodash';\nimport {nav} from './nav';\n\nexport interface PageHeaderProps {\n    back?: 'back' | 'close' | 'none';\n    center: string | JSX.Element;\n    right?: JSX.Element;\n    logout?: boolean | (()=>Promise<void>);\n    className?: string;\n}\nexport interface PageHeaderState {\n    hasBack: boolean;\n}\n\nexport class PageHeader extends React.Component<PageHeaderProps, PageHeaderState> {\n    constructor(props: PageHeaderProps) {\n        super(props);\n        this.navChange = this.navChange.bind(this);\n        this.state = {\n            hasBack: false,\n        };\n    }\n    navChange() {\n        this.setState({\n            hasBack: nav.level > 1\n        })\n    }\n    componentWillMount() {\n        this.navChange();\n        //this.navChangeHandler = nav.events.add('change', this.navChange);\n    }\n    componentWillUnmount() {\n        //nav.events.remove('change', this.navChangeHandler);\n    }\n    async back() {\n        await nav.back(); // 这个才会显示confirm box，在dataForm里面，如果输入了数据的话\n    }\n    openWindow() {\n        window.open(document.location.href);\n    }\n    private logoutClick = () => {\n        nav.showLogout(this.logout);\n    }\n    private logout = async () => {\n        let {logout} = this.props;\n        if (typeof logout === 'function') {\n            await logout(); \n        }\n        await nav.logout(undefined);\n    }\n    render() {\n        let b = this.state.hasBack || window.self !== window.top;\n        let {right, center, logout, className} = this.props;\n        let back:any, pop:any, debugLogout:any;\n        if (logout !== undefined && window.self === window.top) {\n            if ((typeof logout === 'boolean' && logout === true)\n                || typeof logout === 'function')\n            {\n                let {user} = nav;\n                if (user !== undefined) {\n                    let {nick, name} = user;\n                    debugLogout = <div className=\"d-flex align-items-center\">\n                        <small className=\"text-light\">{nick || name}</small>\n                        <a className=\"btn ml-2 cursor-pointer\" href=\"#\"\n                            role=\"button\"\n                            onClick={this.logoutClick}>\n                            <i className=\"fa fa-sign-out fa-lg\" />\n                        </a>\n                    </div>;\n                }\n            }\n        }\n        if (b) {\n            switch (this.props.back) {\n                case 'none': back = undefined; break;\n                default:\n                case 'back': back = <nav onClick={this.back}><i className=\"fa fa-angle-left\" /></nav>; break;\n                case 'close': back = <nav onClick={this.back}><i className=\"fa fa-close\" /></nav>; break;\n            }\n        }\n        if (window.self !== window.top) {\n            console.log(document.location.href);\n            pop = <header onClick={this.openWindow} />;\n        }\n        let rightView = (right || debugLogout) && <aside>{right} {debugLogout}</aside>;\n        return <header className={className}>\n            {pop}\n            {back}\n            <div>{center}</div>\n            {rightView}\n        </header>;\n    }\n}\n","import React from 'react';\nimport { jsonStringify } from '../tools';\n\nexport const DefaultRow = (values) => <div className=\"px-3 py-2\">{jsonStringify(values)}</div>;\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page, List, FA } from '../../components';\nimport { Query } from '../../uq';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuery } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQueryMain extends VEntity<Query, QueryUI, CQuery> {\n    protected vForm: VForm;\n    private row: React.StatelessComponent;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        let {row, queryRow} = this.ui;\n        this.row = queryRow || row || DefaultRow;\n        this.openPage(this.view);\n    }\n\n    onSubmit = async () => {\n        let params = this.vForm.getValues();\n        if (this.entity.isPaged === true) {\n            await this.entity.resetPage(30, params);\n            await this.entity.loadPage();\n            this.replacePage(this.pageResult);\n        }\n        else {\n            let data = await this.entity.query(params);\n            this.replacePage(this.queryResult, data);\n        }\n    }\n\n    again = () => {\n        this.vForm.reset();\n        this.replacePage(this.view);\n    }\n\n    renderExtra() {\n        return;\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render('mx-3 my-2')}\n        {this.renderExtra()}\n    </Page>;\n\n    protected pageResult = () => {\n        let {list} = this.entity;\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <List items={list} item={{render: this.renderRow}} />\n        </Page>;\n    }\n\n    protected queryResult = observer((result:any) => {\n        let rightClose = <button\n            className=\"btn btn-outline-success\"\n            onClick={this.again}>\n            <FA name=\"search\" /> 再查询\n        </button>;\n        return <Page header={this.label} right={rightClose}>\n            <pre>{JSON.stringify(result, undefined, '\\t')}</pre>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { Page, SearchBox, List } from '../../components';\nimport { PageItems } from '../../tool';\nimport { Query } from '../../uq';\nimport { VEntity } from '../CVEntity';\nimport { QueryUI, CQuerySelect } from './cQuery';\nimport { DefaultRow } from './defaultRow';\n\nexport class VQuerySelect extends VEntity<Query, QueryUI, CQuerySelect> {\n    private row: React.StatelessComponent;\n\n    PageItems:QueryPageItems;\n    ownerId: number;\n\n    async open(param?:any) {\n        let {row, selectRow} = this.ui;\n        this.row = selectRow || row || DefaultRow;\n        //this.entity = this.controller.entity;\n        this.PageItems = new QueryPageItems(this.entity);\n        await this.onSearch(param);\n        this.openPage(this.view);\n    }\n    onSearch = async (key:string) => {\n        await this.PageItems.first(key);\n    }\n\n    renderRow = (item:any, index:number) => <this.row {...item} />;\n\n    private callOnSelected(item:any) {\n       this.closePage();\n       this.returnCall(item);\n    }\n    clickRow = (item:any) => {\n        this.callOnSelected(item);\n    }\n\n    view = () => {\n        let header = <SearchBox className=\"mx-1 w-100\"\n            initKey={''}\n            onSearch={this.onSearch} placeholder={'搜索'+this.label} />;\n        return <Page header={header}>\n            <List\n                items={this.PageItems.items}\n                item={{render: this.renderRow, onClick: this.clickRow}}\n                before={'搜索'+this.label+'资料'} />\n        </Page>;\n    };\n}\n\nexport class QueryPageItems extends PageItems<any> {\n    private query: Query;\n    constructor(query: Query) {\n        super();\n        this.query = query;\n    }\n    protected async load():Promise<any[]> {\n        await  this.query.loadSchema();\n        let ret:any[];\n        if (this.query.isPaged === true)\n            ret = await this.query.page(this.param, this.pageStart, this.pageSize);\n        else {\n            let data = await this.query.query(this.param);\n            //let data = await this.query.unpackReturns(res);\n            ret = data[this.query.returns[0].name];\n        }\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        if (item === undefined) this.pageStart = 0;\n    }\n}\n","import { StatelessComponent } from 'react';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { Query } from '../../uq';\nimport { VQueryMain } from './vQueryMain';\nimport { VQuerySelect } from './vQuerySelect';\n\nexport interface QueryUI extends EntityUI {\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    main?: typeof VQueryMain;\n    row?: StatelessComponent;\n    queryRow?: StatelessComponent;\n    selectRow?: StatelessComponent;\n}\n\nexport abstract class CQueryBase extends CEntity<Query, QueryUI> {\n}\n\nexport class CQuery extends CQueryBase {\n    protected async internalStart() {\n        await this.openVPage(this.VQueryMain);\n    }\n\n    protected get VQueryMain():typeof VQueryMain {return (this.ui && this.ui.main) || VQueryMain}\n}\n\nexport class CQuerySelect extends CQueryBase {\n    protected async internalStart(param?:any) {\n        await this.openVPage(this.VQuerySelect, param);\n    }\n\n    protected get VQuerySelect():typeof VQuerySelect {return VQuerySelect}\n}\n","export * from './cQuery';\nexport * from './vQueryMain';\nexport * from './vQuerySelect';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport { UiTextItem } from '../schema';\nimport { ResUploader } from '../resUploader';\nimport { Image } from '../image';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { ItemEdit } from './itemEdit';\n\nexport class ImageItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    private resUploader: ResUploader;\n    @observable private resId: string;\n    @observable private overSize: boolean = false;\n\n    protected async internalStart():Promise<any> {\n        this.resId = this.value;        \n        return new Promise<any>((resolve, reject) => {\n            nav.push(React.createElement(this.page, {resolve:resolve, reject:reject}), ()=>reject());\n        });\n    }\n\n    private upload = async () => {\n        if (!this.resUploader) return;\n        let ret = await this.resUploader.upload();\n        if (ret === null) {\n            this.overSize = true;\n            setTimeout(() => this.overSize = false, 3000);\n            return;\n        }\n        this.resId = ret;\n        this.isChanged = (this.resId !== this.value);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>resolve(this.resId)}>保存</button>;\n        let overSize:any;\n        if (this.overSize === true) {\n            overSize = <div className=\"text-danger\">\n                <i className=\"fa fa-times-circle\" /> 图片文件大小超过2M，无法上传\n            </div>;\n        }\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"my-3 px-3 py-3 bg-white\">\n                <div>\n                    <div>上传图片：</div>\n                    <div className=\"my-3\">\n                        <ResUploader ref={v=>this.resUploader=v} multiple={false} maxSize={2048} />\n                    </div>\n                    <div>\n                        <button className=\"btn btn-primary\" onClick={this.upload}>上传</button>\n                    </div>\n                </div>\n                {overSize}\n                <div className=\"small muted my-4\">支持JPG、GIF、PNG格式图片，不超过2M。</div>\n                <div className=\"d-flex\">\n                    <div className=\"w-12c h-12c mr-4\"\n                        style={{border: '1px dotted gray', padding: '8px'}}>\n                        <Image className=\"w-100 h-100\" src={this.resId} />\n                    </div>\n                    <div>\n                        <div className=\"small\">图片预览</div>\n                        <Image className=\"w-4c h-4c mt-3\" src={this.resId} />\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    })\n}\n","import {CenterApiBase} from '../net';\nimport {decodeUserToken} from '../tool/user';\n//import { nav } from '../ui';\n\nexport interface RegisterParameter {\n    nick:string, \n    user:string, \n    pwd:string,\n    country:number, \n    mobile:number, \n    mobileCountry:number,\n    email:string,\n    verify:string,\n};\n\nexport class UserApi extends CenterApiBase {\n    async login(params: {user: string, pwd: string, guest: number}): Promise<any> {\n        //(params as any).device = nav.local.device.get();\n        let ret = await this.get('login', params);\n        switch (typeof ret) {\n            default: return;\n            case 'string': return decodeUserToken(ret);\n            case 'object':\n                let token = ret.token;\n                let user = decodeUserToken(token);\n                let {nick, icon} = ret;\n                if (nick) user.nick = nick;\n                if (icon) user.icon = icon;\n                return user;\n        }\n        // !== undefined) return decodeToken(token);\n    }\n    async register(params: RegisterParameter): Promise<any>\n    {\n        return await this.post('register', params);\n    }\n\n    async setVerify(account:string, type:'mobile'|'email') {\n        return await this.post('set-verify', {account:account, type:type});\n    }\n\n    async checkVerify(account:string, verify:string) {\n        return await this.post('check-verify', {account:account, verify:verify});\n    }\n\n    async isExists(account:string) {\n        return await this.get('is-exists', {account:account});\n    }\n\n    async resetPassword(account:string, password:string, verify:string, type:'mobile'|'email') {\n        return await this.post('reset-password', {account:account, password, verify, type});\n    }\n    \n    async userSetProp(prop:string, value:any) {\n        await this.post('tie/user-set-prop', {prop:prop, value:value});\n    }\n}\n\nexport const userApi = new UserApi('tv/user/', undefined);\n","import {observable, IObservableArray, computed} from 'mobx';\nimport {uid} from './uid';\n\nexport abstract class PageItems<T> {\n    constructor(itemObservable:boolean = false) {\n        this._items = observable.array<T>([], {deep:itemObservable});\n    }\n    private isFirst: boolean = true;\n    @observable loading: boolean = false;\n    @observable private beforeLoad: boolean = true;\n    @observable protected loaded: boolean = false;\n    protected _items:IObservableArray<T>;\n    @observable allLoaded: boolean = false;\n    @computed get items():IObservableArray<T> {\n        if (this.beforeLoad === true) return null;\n        if (this.loaded === false) return undefined;\n        return this._items;\n    }\n\n    @observable topDiv:string;\n    @observable bottomDiv:string;\n    scrollToTop() {\n        this.topDiv = '$$'+uid();\n    }\n    scrollToBottom() {\n        this.bottomDiv = '$$'+uid();\n    }\n\n    protected param: any;\n    protected firstSize = 100;\n    protected pageStart = undefined;\n    protected pageSize = 30;\n    protected appendPosition:'head'|'tail' = 'tail';\n\n    protected abstract async load(param:any, pageStart:any, pageSize:number):Promise<T[]>;\n    protected abstract setPageStart(item:T);\n\n    reset() {\n        this.isFirst = true;\n        this.beforeLoad = true;\n        this.loaded = false;\n        this.param = undefined;\n        this.allLoaded = false;\n        this._items.clear();\n        //this.setPageStart(undefined);\n    }\n\n    append(item:T) {\n        if (this.appendPosition === 'tail')\n            this._items.unshift(item);\n        else\n            this._items.push(item);\n    }\n\n    async first(param:any):Promise<void> {\n        this.reset();\n        this.beforeLoad = false;\n        this.param = param;\n        await this.more();        \n    }\n\n    protected async onLoad(): Promise<void> {}\n\n    async more():Promise<void> {\n        if (this.allLoaded === true) return;\n        if (this.loading === true) return;\n        this.loading = true;\n        await this.onLoad();\n        if (this.pageStart === undefined) this.setPageStart(undefined);\n        let pageSize = this.pageSize + 1;\n        if (this.isFirst === true) {\n            if (this.firstSize > this.pageSize) pageSize = this.firstSize+1;\n        }\n        let ret = await this.load(\n                this.param, \n                this.pageStart,\n                pageSize);\n        this.loading = false;\n        this.loaded = true;\n        let len = ret.length;\n        if ((this.isFirst===true && len>this.firstSize) ||\n            (this.isFirst===false && len>this.pageSize))\n        {\n            this.allLoaded = false;\n            --len;\n            ret.splice(len, 1);\n        }\n        else {\n            this.allLoaded = true;\n        }\n        if (len === 0) {\n            this._items.clear();\n            return;\n        }\n        this.setPageStart(ret[len-1]);\n        if (this.appendPosition === 'tail')\n            this._items.push(...ret);\n        else\n            this._items.unshift(...ret.reverse());\n        this.isFirst = false;\n    }\n}\n","import * as React from 'react';\n\nexport function Loading() {\n    return <div className=\"d-flex h-100 align-items-center justify-content-center\">\n        <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />\n    </div>;\n}\n","import * as React from 'react';\nimport { nav } from './nav';\n\nexport interface ResUploaderProps {\n    className?: string;\n    multiple?: boolean;\n    maxSize?: number;\n    onFilesChange?: (evt: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport class ResUploader extends React.Component<ResUploaderProps> {\n    private fileInput: HTMLInputElement;\n\n    upload = async ():Promise<string> => {\n        let {maxSize} = this.props;\n        if (maxSize === undefined || maxSize <= 0) \n            maxSize = 100000000000;\n        else\n            maxSize = maxSize * 1024;\n        let resUrl = nav.resUrl + 'upload';\n        var files:FileList = this.fileInput.files;\n        var data = new FormData();\n        let len = files.length;\n        for (let i=0; i<len; i++) {\n            let file = files[i];\n            if (file.size > maxSize) return null;\n            data.append('files[]', file, file.name);\n        }\n  \n        try {\n            let abortController = new AbortController();\n            let res = await fetch(resUrl, {\n                method: \"POST\",\n                body: data,\n                signal: abortController.signal,\n            });\n            let json = await res.json();\n            return ':' + json.res.id;\n        }\n        catch (err) {\n            console.error('%s %s', resUrl, err);\n        }\n    }\n    render() {\n        let {className, multiple, onFilesChange} = this.props;\n        return <input \n            className={className}\n            ref={t=>this.fileInput=t} \n            onChange={onFilesChange}\n            type='file' name='file' multiple={multiple} />\n    }\n}\n","import _ from 'lodash';\nimport { UqApi, UqData, UnitxApi, appInFrame } from '../net';\nimport { Tuid, TuidDiv, TuidImport, TuidInner, TuidBox, TuidsCache } from './tuid';\nimport { Action } from './action';\nimport { Sheet } from './sheet';\nimport { Query } from './query';\nimport { Book } from './book';\nimport { History } from './history';\nimport { Map } from './map';\nimport { Pending } from './pending';\nimport { CreateBoxId, BoxId } from './tuid';\n//import { UqCache } from './caches';\nimport { LocalMap, LocalCache } from '../tool';\nimport { UQsMan } from './uqsMan';\nimport { ReactBoxId } from './tuid/reactBoxId';\n\nexport type FieldType = 'id' | 'tinyint' | 'smallint' | 'int' | 'bigint' | 'dec' | 'char' | 'text'\n    | 'datetime' | 'date' | 'time';\n\nexport function fieldDefaultValue(type:FieldType) {\n    switch (type) {\n        case 'tinyint':\n        case 'smallint':\n        case 'int':\n        case 'bigint':\n        case 'dec':\n            return 0;\n        case 'char':\n        case 'text':\n            return '';\n        case 'datetime':\n        case 'date':\n            return '2000-1-1';\n        case 'time':\n            return '0:00';\n    }\n}\n\nexport interface Field {\n    name: string;\n    type: FieldType;\n    tuid?: string;\n    arr?: string;\n    null?: boolean;\n    size?: number;\n    owner?: string;\n    _tuid: TuidBox;\n}\nexport interface ArrFields {\n    name: string;\n    fields: Field[];\n    id?: string;\n    order?: string;\n}\nexport interface FieldMap {\n    [name:string]: Field;\n}\nexport interface SchemaFrom {\n    owner:string;\n    uq:string;\n}\nexport interface TuidModify {\n    max: number;\n    seconds: number;\n}\n\nexport class UqMan {\n    private readonly actions: {[name:string]: Action} = {};\n    private readonly sheets: {[name:string]: Sheet} = {};\n    private readonly queries: {[name:string]: Query} = {};\n    private readonly books: {[name:string]: Book} = {};\n    private readonly maps: {[name:string]: Map} = {};\n    private readonly histories: {[name:string]: History} = {};\n    private readonly pendings: {[name:string]: Pending} = {};\n    private readonly tuidsCache: TuidsCache;\n    private readonly localAccess: LocalCache;\n    private readonly tvs:{[entity:string]:(values:any)=>JSX.Element};\n    readonly localMap: LocalMap;\n    readonly localModifyMax: LocalCache;\n    readonly tuids: {[name:string]: Tuid} = {};\n    readonly createBoxId: CreateBoxId;\n    readonly newVersion: boolean;\n    readonly uqOwner: string;\n    readonly uqName: string;\n    readonly name: string;\n    readonly uqApi: UqApi;\n    readonly id: number;\n\n    uqVersion: number;\n\n    constructor(uqs:UQsMan, uqData: UqData, createBoxId:CreateBoxId, tvs:{[entity:string]:(values:any)=>JSX.Element}) {\n        this.createBoxId = createBoxId;\n        if (createBoxId === undefined) {\n            this.createBoxId = this.createBoxIdFromTVs;\n            this.tvs = tvs || {};\n        }\n        let {id, uqOwner, uqName, access, newVersion: clearTuids} = uqData;\n        this.newVersion = clearTuids;\n        this.uqOwner = uqOwner;\n        this.uqName = uqName;\n        this.id = id;\n        this.name = uqOwner + '/' + uqName;\n        this.uqVersion = 0;\n        this.localMap = uqs.localMap.map(this.name);\n        this.localModifyMax = this.localMap.child('$modifyMax');\n        this.localAccess = this.localMap.child('$access');\n        //let hash = document.location.hash;\n        let baseUrl = 'tv/';\n\n        let acc: string[];\n        if (access === null || access === undefined || access === '*') {\n            acc = [];\n        }\n        else {\n            acc = access.split(';').map(v => v.trim()).filter(v => v.length > 0);\n        }\n        if (this.name === '$$$/$unitx') {\n            // 这里假定，点击home link之后，已经设置unit了\n            // 调用 UnitxApi会自动搜索绑定 unitx service\n            this.uqApi = new UnitxApi(appInFrame.unit);\n        }\n        else {\n            this.uqApi = new UqApi(baseUrl, uqOwner, uqName, acc, true);\n        }\n        this.tuidsCache = new TuidsCache(this);\n    }\n\n    get entities() {\n        return _.merge({}, \n            this.actions, this.sheets, this.queries, this.books,\n            this.maps, this.histories, this.pendings, this.tuids\n        );\n    }\n\n    private createBoxIdFromTVs:CreateBoxId = (tuid:Tuid, id:number):BoxId =>{\n        let {name} = tuid;\n        /*\n        let tuidUR = this.tuidURs[name];\n        if (tuidUR === undefined) {\n            let {ui, res} = this.getUI(tuid);\n            this.tuidURs[name] = tuidUR = new TuidWithUIRes(tuid, ui, res);\n        }\n        */\n        return new ReactBoxId(id, tuid, this.tvs[name]);\n    }\n\n    tuid(name:string):Tuid {return this.tuids[name.toLowerCase()]}\n    tuidDiv(name:string, div:string):TuidDiv {\n        let tuid = this.tuids[name.toLowerCase()]\n        return tuid && tuid.div(div.toLowerCase());\n    }\n    action(name:string):Action {return this.actions[name.toLowerCase()]}\n    sheet(name:string):Sheet {return this.sheets[name.toLowerCase()]}\n    query(name:string):Query {return this.queries[name.toLowerCase()]}\n    book(name:string):Book {return this.books[name.toLowerCase()]}\n    map(name:string):Map {return this.maps[name.toLowerCase()]}\n    history(name:string):History {return this.histories[name.toLowerCase()]}\n    pending(name:string):Pending {return this.pendings[name.toLowerCase()]}\n\n    sheetFromTypeId(typeId:number):Sheet {\n        for (let i in this.sheets) {\n            let sheet = this.sheets[i];\n            if (sheet.typeId === typeId) return sheet;\n        }\n    }\n\n    tuidArr: Tuid[] = [];\n    actionArr: Action[] = [];\n    sheetArr: Sheet[] = [];\n    queryArr: Query[] = [];\n    bookArr: Book[] = [];\n    mapArr: Map[] = [];\n    historyArr: History[] = [];\n    pendingArr: Pending[] = [];\n\n    async init() {\n        await this.uqApi.init();\n    }\n\n    async loadEntities(): Promise<string> {\n        try {\n            let accesses = this.localAccess.get();\n            if (!accesses) {\n                accesses = await this.uqApi.loadAccess();\n            }\n            if (!accesses) return;\n            this.buildEntities(accesses);\n            if (this.uqName === 'common') {\n                this.pullModify(12);\n            }\n        }\n        catch (err) {\n            return err;\n        }\n    }\n    /*\n    async loadEntities() {\n        let accesses = await this.uqApi.loadEntities();\n        this.buildEntities(accesses);\n    }\n    */\n    buildEntities(entities:any) {\n        if (entities === undefined) {\n            debugger;\n        }\n        this.localAccess.set(entities);\n        let {access, tuids, version} = entities;\n        this.uqVersion = version;\n        this.buildTuids(tuids);\n        this.buildAccess(access);\n    }\n\n    /*\n    async checkAccess() {\n        return await this.uqApi.checkAccess();\n    }\n    */\n\n    async loadEntitySchema(entityName: string): Promise<any> {\n        return await this.uqApi.schema(entityName);\n    }\n\n    getTuid(name:string): Tuid {\n        return this.tuids[name];\n    }\n\n    private buildTuids(tuids:any) {\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let {typeId, from} = schema;\n            let tuid = this.newTuid(i, typeId, from);\n            tuid.sys = true;\n        }\n        for (let i in tuids) {\n            let schema = tuids[i];\n            let tuid = this.getTuid(i);\n            tuid.setSchema(schema);\n        }\n        for (let i in this.tuids) {\n            let tuid = this.tuids[i];\n            tuid.buildFieldsTuid();\n        }\n    }\n\n    private buildAccess(access:any) {\n        for (let a in access) {\n            let v = access[a];\n            switch (typeof v) {\n                case 'string': this.fromType(a, v); break;\n                case 'object': this.fromObj(a, v); break;\n            }\n        }\n    }\n\n    cacheTuids(defer:number) {\n        this.tuidsCache.cacheTuids(defer);\n    }\n\n    newAction(name:string, id:number):Action {\n        let action = this.actions[name];\n        if (action !== undefined) return action;\n        action = this.actions[name] = new Action(this, name, id)\n        this.actionArr.push(action);\n        return action;\n    }\n    private newTuid(name:string, id:number, from:SchemaFrom):Tuid {\n        let tuid = this.tuids[name];\n        if (tuid !== undefined) return tuid;\n        if (from !== undefined)\n            tuid = new TuidImport(this, name, id, from);\n        else\n            tuid = new TuidInner(this, name, id);\n        this.tuids[name] = tuid;\n        this.tuidArr.push(tuid);\n        return tuid;\n    }\n    newQuery(name:string, id:number):Query {\n        let query = this.queries[name];\n        if (query !== undefined) return query;\n        query = this.queries[name] = new Query(this, name, id)\n        this.queryArr.push(query);\n        return query;\n    }\n    private newBook(name:string, id:number):Book {\n        let book = this.books[name];\n        if (book !== undefined) return book;\n        book = this.books[name] = new Book(this, name, id);\n        this.bookArr.push(book);\n        return book;\n    }\n    private newMap(name:string, id:number):Map {\n        let map = this.maps[name];\n        if (map !== undefined) return map;\n        map = this.maps[name] = new Map(this, name, id)\n        this.mapArr.push(map);\n        return map;\n    }\n    private newHistory(name:string, id:number):History {\n        let history = this.histories[name];\n        if (history !== undefined) return;\n        history = this.histories[name] = new History(this, name, id)\n        this.historyArr.push(history);\n        return history;\n    }\n    private newPending(name:string, id:number):Pending {\n        let pending = this.pendings[name];\n        if (pending !== undefined) return;\n        pending = this.pendings[name] = new Pending(this, name, id)\n        this.pendingArr.push(pending);\n        return pending;\n    }\n    newSheet(name:string, id:number):Sheet {\n        let sheet = this.sheets[name];\n        if (sheet !== undefined) return sheet;\n        sheet = this.sheets[name] = new Sheet(this, name, id);\n        this.sheetArr.push(sheet);\n        return sheet;\n    }\n    private fromType(name:string, type:string) {\n        let parts = type.split('|');\n        type = parts[0];\n        let id = Number(parts[1]);\n        switch (type) {\n            //case 'uq': this.id = id; break;\n            case 'tuid':\n                // Tuid should not be created here!;\n                //let tuid = this.newTuid(name, id);\n                //tuid.sys = false;\n                break;\n            case 'action': this.newAction(name, id); break;\n            case 'query': this.newQuery(name, id); break;\n            case 'book': this.newBook(name, id); break;\n            case 'map': this.newMap(name, id); break;\n            case 'history': this.newHistory(name, id); break;\n            case 'sheet':this.newSheet(name, id); break;\n            case 'pending': this.newPending(name, id); break;\n        }\n    }\n    private fromObj(name:string, obj:any) {\n        switch (obj['$']) {\n            case 'sheet': this.buildSheet(name, obj); break;\n        }\n    }\n    private buildSheet(name:string, obj:any) {\n        let sheet = this.sheets[name];\n        if (sheet === undefined) sheet = this.newSheet(name, obj.id);\n        sheet.build(obj);\n    }\n    buildFieldTuid(fields:Field[], mainFields?:Field[]) {\n        if (fields === undefined) return;\n        for (let f of fields) {\n            let {tuid} = f;\n            if (tuid === undefined) continue;\n            let t = this.getTuid(tuid);\n            if (t === undefined) continue;\n            f._tuid = t.buildTuidBox();\n        }\n        for (let f of fields) {\n            let {owner} = f;\n            if (owner === undefined) continue;\n            let ownerField = fields.find(v => v.name === owner);\n            if (ownerField === undefined) {\n                if (mainFields !== undefined) {\n                    ownerField = mainFields.find(v => v.name === owner);\n                }\n                if (ownerField === undefined) {\n                    debugger;\n                    throw new Error(`owner field ${owner} is undefined`);\n                }\n            }\n            let {arr, tuid} = f;\n            let t = this.getTuid(ownerField._tuid.tuid.name);\n            if (t === undefined) continue;\n            let div = t.div(arr || tuid);\n            f._tuid = div && div.buildTuidDivBox(ownerField);\n            if (f._tuid === undefined) {\n                debugger;\n                throw new Error(`owner field ${owner} is not tuid`);\n            }\n        }\n    }\n    buildArrFieldsTuid(arrFields:ArrFields[], mainFields:Field[]) {\n        if (arrFields === undefined) return;\n        for (let af of arrFields) {\n            let {fields} = af;\n            if (fields === undefined) continue;\n            this.buildFieldTuid(fields, mainFields);\n        }\n    }\n\n    pullModify(modifyMax:number) {\n        this.tuidsCache.pullModify(modifyMax);\n    }\n}\n","import { Entity } from './entity';\nimport { PageItems } from '../tool/pageItems';\nimport { EntityCaller } from './caller';\n\nexport interface SheetState {\n    name: string;\n    actions: SheetAction[];\n}\n\nexport interface SheetAction {\n    name: string;\n}\n\nexport interface StateCount {\n    state: string;\n    count: number;\n}\n\nexport class Sheet extends Entity {\n    get typeName(): string { return 'sheet';}\n    states: SheetState[];\n\n    /*\n    setStates(states: SheetState[]) {\n        for (let state of states) {\n            this.setStateAccess(this.states.find(s=>s.name==state.name), state);\n        }\n    }*/\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.states = schema.states;\n    }\n    build(obj:any) {\n        this.states = [];\n        for (let op of obj.ops) {\n            this.states.push({name: op, actions:undefined});\n        }\n        /*\n        for (let p in obj) {\n            switch(p) {\n                case '#':\n                case '$': continue;\n                default: this.states.push(this.createSheetState(p, obj[p])); break;\n            }\n        }*/\n    }\n    private createSheetState(name:string, obj:object):SheetState {\n        let ret:SheetState = {name:name, actions:[]};\n        let actions = ret.actions;\n        for (let p in obj) {\n            let action:SheetAction = {name: p};\n            actions.push(action);\n        }\n        return ret;\n    }\n    /*\n    private setStateAccess(s:SheetState, s1:SheetState) {\n        if (s === undefined) return;\n        for (let action of s1.actions) {\n            let acn = action.name;\n            let ac = s.actions.find(a=>a.name === acn);\n            if (ac === undefined) continue;\n            s.actions.push(action);\n        }\n    }*/\n    async save(discription:string, data:any):Promise<any> {\n        /*\n        await this.loadSchema();\n        let {id} = this.uq;\n        let text = this.pack(data);\n\n        let ret = await this.uqApi.sheetSave(this.name, );\n        return ret;\n        */\n        let {id} = this.uq;\n        //let text = this.pack(data);\n        let params = {app: id, discription: discription, data:data};\n        return await new SaveCaller(this, params).request();\n        /*\n        let {id, state} = ret;\n        if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n        */\n    }\n    async action(id:number, flow:number, state:string, action:string) {\n        /*\n        await this.loadSchema();\n        return await this.uqApi.sheetAction(this.name, {id:id, flow:flow, state:state, action:action});\n        */\n        return await new ActionCaller(this, {id:id, flow:flow, state:state, action:action}).request();\n    }\n    private unpack(data:any):any {\n        //if (this.schema === undefined) await this.loadSchema();\n        let ret = data[0];\n        let brief = ret[0];\n        let sheetData = this.unpackSheet(brief.data);\n        let flows = data[1];\n        return {\n            brief: brief,\n            data: sheetData,\n            flows: flows,\n        }\n    }\n    async getSheet(id:number):Promise<any> {\n        /*\n        await this.loadSchema();\n        let ret = await this.uqApi.getSheet(this.name, id);\n        */\n        let ret = await new GetSheetCaller(this, id).request();\n        if (ret[0].length === 0) return await this.getArchive(id);\n        return this.unpack(ret);\n    }\n    async getArchive(id:number):Promise<any> {\n        /*\n        await this.loadSchema();\n        let ret = await this.uqApi.sheetArchive(this.name, id)\n        return this.unpack(ret);\n        */\n        let ret = await new SheetArchiveCaller(this, id).request();\n        return this.unpack(ret);\n    }\n\n    async getArchives(pageStart:number, pageSize:number) {\n        /*\n        await this.loadSchema();\n        let ret = await this.uqApi.sheetArchives(this.name, {pageStart:pageStart, pageSize:pageSize});\n        return ret;\n        */\n        let params = {pageStart:pageStart, pageSize:pageSize};\n        return await new SheetArchivesCaller(this, params).request();\n    }\n\n    async getStateSheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        /*\n        await this.loadSchema();\n        let ret = await this.uqApi.stateSheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n        */\n        let params = {state:state, pageStart:pageStart, pageSize:pageSize};\n        return await new StateSheetsCaller(this, params).request();\n    }\n    createPageStateItems<T>(): PageStateItems<T> {return new PageStateItems<T>(this);}\n\n    async stateSheetCount():Promise<StateCount[]> {\n        /*\n        await this.loadSchema();\n        let ret:StateCount[] = await this.uqApi.stateSheetCount(this.name);\n        return this.states.map(s => {\n            let n = s.name, count = 0;\n            let r = ret.find(v => v.state === n);\n            if (r !== undefined) count = r.count;\n            return {state: n, count: count} \n        });\n        */\n        return await new StateSheetCountCaller(this, undefined).request();\n    }\n\n    async mySheets(state:string, pageStart:number, pageSize:number):Promise<any[]> {\n        /*\n        await this.loadSchema();\n        let ret = await this.uqApi.mySheets(this.name, {state:state, pageStart:pageStart, pageSize:pageSize});\n        return ret;\n        */\n        let params = {state:state, pageStart:pageStart, pageSize:pageSize};\n        return await new MySheetsCaller(this, params).request();\n    }\n}\n\n\nabstract class SheetCaller<T> extends EntityCaller<T> {\n    protected entity: Sheet;\n    protected readonly suffix:string;\n    get path():string {return `sheet/${this.entity.name}/${this.suffix}`;}\n}\n\nclass SaveCaller extends SheetCaller<{app:number; discription:string; data:any}> {\n    get path():string {return `sheet/${this.entity.name}`;}\n    buildParams() {\n        let {app, discription, data} = this.params;\n        return {\n            app: app,\n            discription: discription,\n            data: this.entity.pack(data)\n        };\n    }\n}\n\nclass ActionCaller extends SheetCaller<{id:number, flow:number, state:string, action:string}> {\n    method = 'PUT';\n    get path():string {return `sheet/${this.entity.name}`;}\n    //buildParams() {return this.entity.buildParams(this.params);}\n}\n\nclass GetSheetCaller extends SheetCaller<number> {\n    //protected readonly params: number;  // id\n    method = 'GET';\n    //private id:number;\n    //protected readonly suffix = 'archive';\n    buildParams() {}\n    get path():string {return `sheet/${this.entity.name}/get/${this.params}`;}\n}\n\nclass SheetArchiveCaller extends SheetCaller<number> {\n    protected readonly params: number;  // id\n    method = 'GET';\n    //protected readonly suffix = 'archive';\n    buildParams() {}\n    get path():string {return `sheet/${this.entity.name}/archive/${this.params}`;}\n}\n\nclass SheetArchivesCaller extends SheetCaller<{pageStart:number, pageSize:number}> {\n    protected readonly suffix = 'archives';\n}\n\nclass StateSheetsCaller extends SheetCaller<{state:string, pageStart:number, pageSize:number}> {\n    protected readonly suffix = 'states';\n}\n\nclass StateSheetCountCaller extends SheetCaller<undefined> {\n    method = 'GET';\n    protected readonly suffix = 'statecount';\n    xresult(res:any):any {\n        let {states} = this.entity;\n        return states.map(s => {\n            let n = s.name, count = 0;\n            let r = (res as any[]).find(v => v.state === n);\n            if (r !== undefined) count = r.count;\n            return {state: n, count: count} \n        });\n    }\n}\n\nclass MySheetsCaller extends SheetCaller<{state:string, pageStart:number, pageSize:number}> {\n    protected readonly suffix = 'my-sheets';\n    xresult(res:any):any {\n        return res;\n        /*\n        let {returns} = this.entity;\n        let len = returns.length;\n        let ret:{[r:string]:any[]} = {};\n        for (let i=0; i<len; i++) {\n            let retSchema = returns[i];\n            ret[retSchema.name] = res[i];\n        }\n        return ret;\n        */\n    }\n}\n\nexport class PageStateItems<T> extends PageItems<T> {\n    private sheet: Sheet;\n    constructor(sheet: Sheet) {\n        super(true);\n        this.sheet = sheet;\n        this.pageSize = 10;\n    }\n    protected async load(param:any, pageStart:any, pageSize:number):Promise<any[]> {\n        let ret = await this.sheet.getStateSheets(param, pageStart, pageSize);\n        return ret;\n    }\n    protected setPageStart(item:any) {\n        this.pageStart = item === undefined? 0 : item.id;\n    }\n}\n","import {Query} from './query';\nimport { QueryQueryCaller } from './caller';\n\nexport class Book extends Query {\n    get typeName(): string { return 'book';}\n    protected queryApiName = 'book';\n\n    protected queryCaller(params: any): QueryQueryCaller {\n        return new BookQueryCaller(this, params);\n    }\n}\n\nexport class BookQueryCaller extends QueryQueryCaller {\n    //protected get entity(): Query {return this._entity as Query};\n    get path():string {return `book/${this.entity.name}`;}\n    /*\n    xresult(res:any) {\n        let data = this.entity.unpackReturns(res);\n        return data;\n    }\n    buildParams() {return this.entity.buildParams(this.params);}\n    */\n}\n","import {Query} from './query';\n\nexport class History extends Query {\n    get typeName(): string { return 'history';}\n    protected queryApiName = 'history';\n}\n","import { Entity } from './entity';\nimport { Action, ActionSubmitCaller } from './action';\nimport { Query } from './query';\nimport { Field } from './uqMan';\nimport { EntityCaller, QueryPageCaller, QueryQueryCaller } from './caller';\n\ninterface MapActions {\n    add: Action;\n    del: Action;\n}\ninterface MapQueries {\n    all: Query;\n    page: Query;\n    query: Query;\n}\n\nexport class Map extends Entity {\n    get typeName(): string { return 'map';}\n    keys: Field[];\n    actions: MapActions = {} as any;\n    queries: MapQueries = {} as any;\n    schemaFrom: {owner:string; uq:string};\n\n    setSchema(schema:any) {\n        super.setSchema(schema);\n        this.schemaFrom = this.schema.from;\n        let {actions, queries, keys} = schema;\n        this.uq.buildFieldTuid(this.keys = keys);\n        //let t = this.schemaStringify();\n        for (let i in actions) {\n            let actionSchema = actions[i];\n            let {name} = actionSchema;\n            let action = this.uq.newAction(name, undefined);\n            action.setSchema(actionSchema);\n            action.buildFieldsTuid();\n            this.actions[i] = action;\n        }\n        for (let i in queries) {\n            let querySchema = queries[i];\n            let {name} = querySchema;\n            let query = this.uq.newQuery(name, undefined);\n            query.setSchema(querySchema);\n            query.buildFieldsTuid();\n            this.queries[i] = query;\n        }\n    }\n\n    async add(param:any) {\n        /*\n        await this.loadSchema();\n        return await this.actions.add.submit(param);\n        */\n        let ret = await new AddCaller(this, param).request();\n        return ret;\n    }\n\n    async del(param:any) {\n        /*\n        await this.loadSchema();\n        return await this.actions.del.submit(param);\n        */\n        let ret = await new DelCaller(this, param).request();\n        return ret;\n    }\n\n    async all() {\n        /*\n        await this.loadSchema();\n        return await this.queries.all.query({});\n        */\n        let ret = await new AllCaller(this, undefined).request();\n        return ret;\n    }\n\n    async page(param:any, pageStart:any, pageSize: number) {\n        /*\n        await this.loadSchema();\n        return await this.queries.page.page(param, pageStart, pageSize);\n        */\n        let ret = await new PageCaller(this, {pageStart:pageStart, pageSize:pageSize, param:param}).request();\n        return ret;\n    }\n\n    async query(param:any) {\n        /*\n        await this.loadSchema();\n        return await this.queries.query.query(param);\n        */\n       let qc = new QueryCaller(this, param);\n       let ret = await qc.request();\n       return ret;\n   }\n    async table(params:any): Promise<any[]> {\n        let ret = await this.query(params);\n        for (let i in ret) {\n            return ret[i];\n        }\n    }\n    async obj(params:any):Promise<any> {\n        let ret = await this.table(params);\n        if (ret.length > 0) return ret[0];\n    }\n    async scalar(params:any):Promise<any> {\n        let ret = await this.obj(params);\n        for (let i in ret) return ret[i];\n    }\n}\n\nabstract class MapCaller extends EntityCaller<any> {\n    protected entity: Map;\n    get path():string {return undefined;}\n\n    protected abstract getCaller(param: any):EntityCaller<any>;\n\n    protected async innerCall(): Promise<any> {\n        let caller = this.getCaller(this.params);\n        let res = await this.entity.uqApi.xcall(caller);\n        let ret = caller.xresult(res.res);\n        return {res: ret};\n    }\n\n    buildParams() {\n        let p = super.buildParams();\n        return p;\n    }\n}\n\nclass AddCaller extends MapCaller {\n    protected getCaller(param:any):EntityCaller<any> {\n        return new MapAddCaller(this.entity, this.entity.actions.add, param);\n    }\n}\n\nclass DelCaller extends MapCaller {\n    protected getCaller(param:any):EntityCaller<any> {\n        return new MapDelCaller(this.entity, this.entity.actions.add, param);\n    }\n}\n\nclass AllCaller extends MapCaller {\n    protected getCaller(param:any):EntityCaller<any> {\n        return new MapAllCaller(this.entity, this.entity.queries.all, param);\n    }\n}\n\nclass PageCaller extends MapCaller {\n    protected getCaller(param:any):EntityCaller<any> {\n        return new MapPageCaller(this.entity, this.entity.queries.page, param);\n    }\n}\n\nclass QueryCaller extends MapCaller {\n    protected getCaller(param:any):EntityCaller<any> {\n        return new MapQueryCaller(this.entity, this.entity.queries.query, param);\n    }\n}\n\nclass MapAddCaller extends ActionSubmitCaller {\n    private map: Map;\n    constructor(map:Map, action:Action, params:any) {\n        super(action, params);\n        this.map = map;\n    }\n\n    get path():string {return `map/${this.map.name}/add`}\n    get headers(): {[header:string]: string} {return undefined;}\n    /*\n        let {ver, uq} = this.map;\n        let {uqVersion} = uq;\n        return {\n            uq: `${uqVersion}`,\n            en: `${ver}`,\n        }\n    }*/\n}\n\nclass MapDelCaller extends ActionSubmitCaller {\n    private map: Map;\n    constructor(map:Map, action:Action, params:any) {\n        super(action, params);\n        this.map = map;\n    }\n\n    get path():string {return `map/${this.map.name}/del`}\n    get headers(): {[header:string]: string} {return undefined}\n    /*\n        let {ver, uq} = this.map;\n        let {uqVersion} = uq;\n        return {\n            uq: `${uqVersion}`,\n            en: `${ver}`,\n        }\n    }*/\n}\n\nclass MapAllCaller extends QueryPageCaller {\n    private map: Map;\n    constructor(map:Map, query:Query, params:any) {\n        super(query, params);\n        this.map = map;\n    }\n\n    get path():string {return `map/${this.map.name}/all`}\n    get headers(): {[header:string]: string} {return undefined}\n    /*\n        let {ver, uq} = this.map;\n        let {uqVersion} = uq;\n        return {\n            uq: `${uqVersion}`,\n            en: `${ver}`,\n        }\n    }*/\n}\n\n\nclass MapPageCaller extends QueryPageCaller {\n    private map: Map;\n    constructor(map:Map, query:Query, params:any) {\n        super(query, params);\n        this.map = map;\n    }\n\n    get path():string {return `map/${this.map.name}/page`}\n    get headers(): {[header:string]: string} {return undefined}\n    /*\n        let {ver, uq} = this.map;\n        let {uqVersion} = uq;\n        return {\n            uq: `${uqVersion}`,\n            en: `${ver}`,\n        }\n    }*/\n}\n\nclass MapQueryCaller extends QueryQueryCaller {\n    private map: Map;\n    constructor(map:Map, query:Query, params:any) {\n        super(query, params);\n        this.map = map;\n    }\n\n    get path():string {return `map/${this.map.name}/query`}\n    get headers(): {[header:string]: string} {return undefined}\n    /*\n        let {ver, uq} = this.map;\n        let {uqVersion} = uq;\n        return {\n            uq: `${uqVersion}`,\n            en: `${ver}`,\n        }\n    }*/\n}","import {Query} from './query';\n\nexport class Pending extends Query {\n    get typeName(): string { return 'pending';}\n    protected queryApiName = 'pending';\n}\n","import React from 'react';\nimport { FA } from '../components';\n\nfunction icon(className:string, name:string) {\n    return <FA className={className} name={name} fixWidth={true} />;\n}\n\nexport const entityIcons:{[type:string]:JSX.Element} = {\n    tuid: icon('text-info', 'list-alt'),\n    action: icon('text-info', 'hand-o-right'),\n    map: icon('text-muted', 'list-ul'),\n    book: icon('text-muted', 'book'),\n    query: icon('text-warning', 'search'),\n    history: icon('text-info', 'hand-o-right'),\n    pending: icon('text-info', 'forward'),\n    sheet: icon('text-primary', 'wpforms'),\n};\n","import { Controller } from '../components';\nimport { CUq } from './cUq';\n\nexport abstract class ControllerUq extends Controller {\n    constructor(cUq: CUq, res:any) {\n        super(res);\n        this.cUq = cUq;\n    }\n    cUq: CUq;\n}\n","/*eslint @typescript-eslint/no-unused-vars: [\"off\", { \"vars\": \"all\" }]*/\nimport * as React from 'react';\nimport { VPage, Page, View, List, LMR, left0, FA } from 'tonva';\nimport { observer } from 'mobx-react';\nimport { CStockInfo } from './CStockInfo'\nimport { NStockInfo, StockCapitalearning, StockBonus } from './StockInfoType';\n\nexport class VStockInfo extends VPage<CStockInfo> {\n  async open(param?: any) {\n    this.openPage(this.page);\n  }\n\n  render(param: any): JSX.Element {\n    return <this.page />\n  }\n\n  private page = observer(() => {\n    let { openMetaView, baseItem, onTags, stockTags, isLogined } = this.controller;\n    let { name, code } = baseItem;\n    let viewMetaButton = <></>;\n    if (isLogined) {\n      viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n    }\n    let right = stockTags && <button className=\"btn btn-outline-success bg-light\" onClick={onTags}>\n      {stockTags.length === 0? '加自选' : '设分组'}\n      </button>;\n    return <Page header={name + ' ' + code} right={right}\n      headerClassName='bg-primary'>\n      <this.content />\n    </Page>;\n  })\n\n  private content = observer(() => {\n    return <>\n      <this.baseInfo />\n      <this.capitalEarning />\n      <this.bonus />\n    </>\n  });\n\n  private caption = (value:string) => <span className=\"text-muted small\">{value}: </span>;\n\n  private baseInfo = () => {\n    let {baseItem} = this.controller;\n    let { name, code, pe, roe, price, order } = baseItem;\n    return <div className=\"px-3 py-2 bg-white\" onClick={() => this.onClickName(this.controller.baseItem)}>\n      <div className=\"d-flex flex-wrap\">\n        <div className=\"px-3 c8\">{this.caption('PE')}{pe.toFixed(2)}</div>\n        <div className=\"px-3 c8\">{this.caption('ROE')}{roe===undefined?'':(roe * 100).toFixed(2)}</div>\n        <div className=\"px-3 c8\">{this.caption('Price')}{price.toFixed(2)}</div>\n      </div>    \n    </div>;\n  }\n\n  protected onClickName = (item: NStockInfo) => {\n    let { symbol } = item;\n    //window.event.preventDefault();\n    let url = `http://finance.sina.com.cn/realstock/company/${symbol}/nc.shtml`;\n    window.open(url, '_blank');\n  }\n\n  private capitalEarning = observer(() => {\n    let items = this.controller.capitalearning;\n    let header = <div className=\"px-3\">\n      <div className=\"px-3 c6\">年</div>\n      <div className=\"px-3 c6 text-right\">股本</div>\n      <div className=\"px-3 c6 text-right\">收益</div>\n      <div className=\"px-3 c6 text-right\">ROE</div>\n    </div>;\n    return <>\n      <div className=\"px-3 py-1\">历年股本收益</div>\n      <List header={header} loading=\"...\"\n        items={items}\n        item={{\n          render: (row: StockCapitalearning) => {\n            let {capital, earning} = row;\n            return <div className=\"px-3 py-2 d-flex flex-wrap\">\n              <div className=\"px-3 c6\">{row.year}</div>\n              <div className=\"px-3 c6 text-right\"> {capital.toFixed(2)}</div>\n              <div className=\"px-3 c6 text-right\"> {earning.toFixed(2)}</div>\n              <div className=\"px-3 c6 text-right\"> {(earning/capital*100).toFixed(1)}%</div>\n            </div>\n          }\n        }}\n      />\n    </>\n  });\n\n  private bonus = observer(() => {\n    let items = this.controller.bonus;\n    let header = <div className=\"px-3\">\n      <div className=\"px-3 c8\">日期</div>\n      <div className=\"px-3 c6 text-right\">分红</div>\n    </div>;\n    return <>\n      <div className=\"px-3 py-1\">历年分红</div>\n      <List header={header} loading=\"...\"\n        items={items}\n        item={{\n          render: (row: StockBonus) => {\n            return <div className=\"px-3 py-2 d-flex flex-wrap\">\n              <div className=\"px-3 c8\">{row.day}</div>\n              <div className=\"px-3 c6 text-right\"> {row.bonus.toFixed(2)}</div>\n            </div>\n          }\n        }}\n      />\n    </>\n  });\n}","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Page, List, Muted, LMR } from '../../components';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../uq';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetMain extends VEntity<Sheet, SheetUI, CSheet> {\n    async open() {\n        this.openPage(this.view);\n    }\n\n    newClick = () => this.event('new');\n    schemaClick = () => this.event('schema'); \n    archivesClick = () => this.event('archives');\n    sheetStateClick = (state) => this.event('state', state);\n\n    renderState = (item:any, index:number) => {\n        let {state, count} = item;\n        if (count === 0) return null;\n        let badge = <span className=\"badge badge-success ml-5 align-self-end\">{count}</span>;\n        return <LMR className=\"px-3 py-2\" left={this.controller.getStateLabel(state)} right={badge} />;\n    }\n\n    protected view = observer(() => {\n        let list = this.controller.statesCount.filter(row=>row.count);\n        let right = <button className=\"btn btn-outline-primary\" onClick={this.archivesClick}>已归档</button>;\n        let templet:any;\n        if (this.isDev === true) {\n            templet = <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.schemaClick}>模板</button>;\n        }\n        return <Page header={this.label}>\n            <LMR\n                className=\"mx-3 my-2\"\n                right={right}>\n                <button className=\"btn btn-primary mr-2\" color=\"primary\" onClick={this.newClick}>新建</button>\n                {templet}\n            </LMR>\n            <List className=\"my-2\"\n                header={<Muted className=\"mx-3 my-1\">待处理{this.label}</Muted>}\n                none=\"[ 无 ]\"\n                items={list}\n                item={{render:this.renderState, onClick:this.sheetStateClick}} />\n        </Page>;\n    });\n}\n","import * as React from 'react';\nimport { Page } from '../../components';\nimport { Sheet } from '../../uq';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetNew extends VEntity<Sheet, SheetUI, CSheet> {\n    vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.view);\n    }\n\n    private onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        let valuesWithBox = this.vForm.values;\n        //let ret = \n        await this.controller.onSave(values, valuesWithBox);\n        /*\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.controller.showSaved(ret);\n        */\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import * as React from 'react';\nimport {List, Muted, LMR, EasyDate, FA} from '../../components';\nimport { Sheet } from '../../uq';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CSheet, SheetUI, SheetData } from './cSheet';\n\nconst leftFlowStyle = {width: '8rem'};\n\nexport abstract class VSheetView extends VEntity<Sheet, SheetUI, CSheet> {\n    protected vForm: VForm;\n    protected sheetData: SheetData;\n    //data: any;\n    //state: string;\n    //flows:any[];\n\n    flowRow = (item:any, index:number):JSX.Element => {\n        let {date, state, action} = item;\n        if (action === undefined) action = <><FA className=\"text-primary\" name=\"pencil-square-o\" /> 制单</>;\n        let to;\n        switch (state) {\n            case '$': break;\n            case '#': to = <><FA className=\"text-success\" name=\"file-archive-o\" /></>; break;\n            default: to = <><FA className=\"text-muted\" name=\"arrow-right\" /> &nbsp; {state}</>; break;\n        }\n        /*\n        return <div className=\"row\">\n            <div className=\"col-sm\"></div>\n            <div className=\"col-sm\"><div className=\"p-2\">{to}</div></div>\n            <div className=\"col-sm text-right\"><div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div></div>\n        </div>;\n        */\n        return <LMR \n            left={<div className=\"pl-3 py-2\" style={leftFlowStyle}>{action}</div>}\n            right={<div className=\"p-2\"><Muted><EasyDate date={date} /></Muted></div>}>\n            <div className=\"p-2\">{to}</div>\n        </LMR>;\n    }\n\n    protected sheetView = () => {\n        let {brief, flows} = this.sheetData;\n        let removed;\n        if (brief.state === '-')\n            removed = <div className=\"mx-3 my-2\" style={{color:'red'}}>本单据作废</div>;\n        return <div>\n            {removed}\n            {this.vForm.render()}\n    \n            <List header={<Muted className=\"mx-3 my-1\">流程</Muted>}\n                items={flows}\n                item={{render:this.flowRow}}/>\n        </div>;\n    };\n}\n","import * as React from 'react';\nimport { Page } from '../../components';\nimport { FormMode } from '../form';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetEdit extends VSheetView { //VEntity<Sheet, SheetUI, CSheet> {\n    protected sheetData: SheetData;\n    async open(param: SheetData) {\n        this.sheetData = param;\n        this.vForm = this.createForm(this.onSubmit, param.data, FormMode.edit);\n        this.openPage(this.view);\n    }\n\n    onSubmit = async ():Promise<void> => {\n        let values = this.vForm.getValues();\n        await this.controller.saveSheet(values, this.vForm.values);\n        this.closePage();\n        this.returnCall(this.vForm.values);\n    }\n\n    protected view = () => <Page header={this.label}>\n        {this.vForm.render()}\n    </Page>;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { FA, Page } from '../../components';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetAction extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    actionClick = async (action:any) => {\n        let {id, flow, state} = this.sheetData.brief;\n        await this.controller.action(id, flow, state, action.name);\n        this.ceasePage();\n        this.openPage(this.acted);\n        //alert(jsonStringify(res));\n        //await this.backPage();\n    }\n\n    deleteClick = async () => {\n        alert('单据作废：程序正在设计中');\n    }\n\n    editClick = async () => {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.controller.editSheet(this.sheetData);\n        this.vForm.setValues(values);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        let {states} = this.entity;\n        let s = states.find(v => v.name === state);\n        let actionButtons, startButtons;\n        if (s === undefined) {\n            let text:string, cn:string;\n            switch (state) {\n                default:\n                    text = '不认识的单据状态\\'' + state + '\\'';\n                    cn = 'text-info';\n                    break;\n                case '-': \n                    text = '已作废';\n                    cn = 'text-danger';\n                    break;\n                case '#':\n                    text = '已归档';\n                    cn = 'text-success';\n                    break;\n            }\n            actionButtons = <div className={classNames(cn)}>[{text}]</div>;\n        }\n        else {\n            actionButtons = <div className=\"flex-grow-1\">{s.actions.map((v,index) => \n                <button\n                    key={index}\n                    className=\"btn btn-primary mr-2\"\n                    onClick={()=>this.actionClick(v)}\n                >\n                    {this.controller.getActionLabel(state, v.name)}\n                </button>)}\n            </div>;\n            if (state === '$') {\n                startButtons = <div>\n                    <button className=\"btn btn-outline-info ml-2\" onClick={this.editClick}>修改</button>\n                    <button className=\"btn btn-outline-danger ml-2\" onClick={this.deleteClick}>作废</button>\n                </div>\n            }\n        };\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    {actionButtons}\n                    {startButtons}\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        let {discription} = this.sheetData.brief;\n        return <Page header=\"已处理\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"p-3\">{discription}</div>\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import * as React from 'react';\nimport { Page } from '../../components';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../uq';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VSheetSchema extends VEntity<Sheet, SheetUI, CSheet> {\n    async open(param?:any) {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label + \"模板\"}>\n        <pre className=\"mx-3 my-2\">{this.entity.schemaStringify()}</pre>\n    </Page>;\n}\n\n","import * as React from 'react';\nimport { Page, List, LMR, EasyDate, Muted } from '../../components';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../uq';\nimport { SheetUI, CSheet } from './cSheet';\n\nexport class VArchives extends VEntity<Sheet, SheetUI, CSheet> {\n    list: any[];\n\n    async open() {\n        this.list = await this.entity.getArchives(undefined, 10);\n        this.openPage(this.view);\n    }\n\n    archiveClick = async (brief:any) => {\n        if (brief.processing===1) return;\n        this.event('archived', brief);\n    }\n    archiveRow = (row:any, index:number) => {\n        let {date} = row;\n        let left = <>\n            {row.processing===1? '... ' : ''}\n            {row.no} &nbsp; {row.discription}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />\n    }\n\n    protected view = () => {\n        return <Page header={'已归档' + this.label}>\n            <List items={this.list} item={{render:this.archiveRow, onClick:this.archiveClick}} />\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { Page, List, Muted, LMR, EasyDate } from '../../components';\nimport { VEntity } from '../CVEntity';\nimport { Sheet } from '../../uq';\nimport { CSheet, SheetUI } from './cSheet';\n\nexport class VSheetList extends VEntity<Sheet, SheetUI, CSheet> {\n    protected row: (values) => JSX.Element;\n    stateName: string;\n    stateLabel: string;\n\n    async open(item:any) {\n        this.row = this.ui.listRow || this.rowContent;\n        this.stateName = item.state;\n        this.stateLabel = this.controller.getStateLabel(this.stateName);\n        //await this.controller.getStateSheets(this.stateName, 0, 10);\n        await this.controller.pageStateItems.first(this.stateName);\n        this.openPage(this.view);\n    }\n\n    rowClick = async (brief:any) => {\n        if (brief.processing===1) {\n            this.event('processing', brief.id);\n            return;\n        }\n        this.event('action', brief.id);\n    }\n\n    private onScrollBottom = () => {\n        console.log('onScrollBottom');\n        this.controller.pageStateItems.more();\n    }\n\n    protected rowContent = (row:any):JSX.Element => {\n        let {no, discription, date, processing} = row;\n        let left = <>            \n            {no} &nbsp; <Muted>{discription}</Muted> {processing===1? '...' : ''}\n        </>;\n        let right = <Muted><EasyDate date={date} /></Muted>;\n        return <LMR className=\"px-3 py-2\" left={left} right={right} />;\n    }\n\n    private renderRow = (row:any, index:number) => <this.row {...row} />\n\n    protected view = () => {\n        //let sheets = this.controller.stateSheets;\n        let {pageStateItems} = this.controller;\n        return <Page header={this.label + ' - ' + this.stateLabel} onScrollBottom={this.onScrollBottom}>\n            <List items={pageStateItems} item={{render:this.renderRow, onClick:this.rowClick}} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { Page } from '../../components';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport interface SheetStateFlows {\n    flows: any;\n    data: any;\n}\nexport class VArchived extends VSheetView {\n    //protected controller: CSheet;\n    //brief: any;\n\n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        /*\n        let {brief, data, flows} = await this.controller.getArchived(inBrief.id);\n        this.brief = brief;\n        this.data = data;\n        this.flows = flows;\n        */\n        this.vForm = this.createForm(undefined, this.sheetData.data);\n        this.openPage(this.view);\n    }\n\n    protected view = () => {\n        let {brief} = this.sheetData;\n        return <Page header={this.label + '-' + brief.no}>\n            <this.sheetView />\n        </Page>;\n    };\n}\n","import * as React from 'react';\nimport { Page, FA } from '../../components';\nimport { VSheet } from './vSheet';\n\nexport class VSheetSaved extends VSheet {\n    private brief: any;\n    async open(brief?:any) {\n        this.brief = brief;\n        this.openPage(this.view);\n    }\n\n    private restart = async () => {\n        this.ceasePage();\n        await this.event('new');\n    }\n\n    actionClick = async (action:any) => {\n        this.ceasePage();\n        let {id, flow, state} = this.brief;\n        await this.controller.action(id, flow, state, action.name);\n        this.openPage(this.acted);\n    }\n\n    private buttons = <>\n        <button className=\"btn btn-outline-primary mr-3\" onClick={this.restart}>继续开单</button>\n        <button className=\"btn btn-outline-info\" onClick={()=>this.backPage()}>返回</button>\n    </>;\n\n    private view = () => {\n        let {states} = this.entity;\n        const state = '$';\n        let s = states.find(v => v.name === state);\n        let actionButtons = <>{s.actions.map((v,index) => \n            <button\n                key={index}\n                className=\"btn btn-primary mr-3\"\n                onClick={()=>this.actionClick(v)}\n            >\n                {this.controller.getActionLabel(state, v.name)}\n            </button>)}\n        </>;\n        return <Page header=\"已保存\" back=\"close\">\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已保存！系统尚未处理</div>\n                <div className=\"p-3\">\n                    {actionButtons}\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>;\n    }\n\n    private acted = () => {\n        return <Page>\n            <div className=\"p-3 d-flex flex-column align-items-center\">\n                <div className=\"text-success\"><FA name=\"check-circle-o\" /> 单据已处理！</div>\n                <div className=\"p-3\">\n                    {this.buttons}\n                </div>\n            </div>\n        </Page>\n    }\n}\n","import { Sheet } from '../../uq';\nimport { SheetUI, CSheet } from './cSheet';\nimport { VEntity } from '../CVEntity';\n\nexport abstract class VSheet extends VEntity<Sheet, SheetUI, CSheet> {\n}\n","import React from 'react';\nimport { Page } from '../../components';\nimport { VSheetView } from './vSheetView';\nimport { SheetData } from './cSheet';\n\nexport class VSheetProcessing extends VSheetView { \n    async open(sheetData:SheetData) {\n        this.sheetData = sheetData;\n        //let {brief, data, flows} = await this.controller.getSheetData(sheetId);\n        //this.brief = brief;\n        //this.flows = flows;\n        //this.data = data;\n        //this.state = this.brief.state;\n        this.vForm = this.createForm(undefined, sheetData.data);\n        this.openPage(this.page);\n    }\n\n    protected page = () => {\n        let {brief} = this.sheetData;\n        let {state, no} = brief;\n        let stateLabel = this.controller.getStateLabel(state);\n        return <Page header={this.label + ':' + stateLabel + '-' + no}>\n            <div className=\"mb-2\">\n                <div className=\"d-flex px-3 py-2 border-bottom bg-light\">\n                    正在处理中...\n                </div>\n                <this.sheetView />\n            </div>\n        </Page>;\n    }\n}\n","import { IObservableArray, observable } from 'mobx';\nimport { postWsToTop } from '../../net';\nimport { TypeVPage } from '../../components';\nimport { PageItems } from '../../tool';\nimport { Sheet, StateCount } from '../../uq';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { VSheetMain } from './vMain';\nimport { VSheetNew } from './vNew';\nimport { VSheetEdit } from './vEdit';\nimport { VSheetAction } from './vSheetAction';\nimport { VSheetSchema } from './vSchema';\nimport { VArchives } from './vArchives';\nimport { VSheetList } from './vList';\nimport { VArchived } from './vArchived';\nimport { VSheetSaved } from './vSaved';\nimport { VSheetProcessing } from './vSheetProcessing';\n\nexport interface SheetActionUI {\n    label: string;\n}\n\nexport interface StateUI {\n    label: string;\n    actions: {[name:string]: SheetActionUI}\n}\n\nexport interface SheetUI extends EntityUI {\n    CSheet?: typeof CSheet;\n    states?: {[name:string]: StateUI};\n    main?: TypeVPage<CSheet>;\n    sheetNew?: TypeVPage<CSheet>;\n    sheetSaved?: TypeVPage<CSheet>;\n    sheetEdit?: TypeVPage<CSheet>;\n    sheetAction?: TypeVPage<CSheet>;\n    listRow?: (row:any) => JSX.Element;\n    sheetTitle?: (sheetValues:any, x:any) => string;      // 返回单据的描述\n}\n\nexport interface SheetData {\n    brief: any;\n    data: any;\n    flows: any[];\n}\n\nexport class CSheet extends CEntity<Sheet, SheetUI> {\n    statesCount:IObservableArray<StateCount> = observable.array<StateCount>([], {deep:true});\n    curState:string;\n    pageStateItems: PageItems<any>;\n\n    protected async internalStart() {\n        await this.loadStateSheetCount();\n        this.pageStateItems = this.entity.createPageStateItems();\n        await this.openVPage(this.VSheetMain);\n    }\n\n    protected async onMessage(msg: any):Promise<void> {\n        let {type, body, from, to} = msg;\n        if (type === 'sheet') this.onSheet(from, to, body);\n    }\n    private onSheet(from:number, to:number[], sheetData:any) {\n        let me = this.user.id;\n        let {id, preState, state} = sheetData;\n        console.log({$:'onMessage sheet', from:from, to:to.join(','), id:id, preState:preState, state:state, me:me, sheetData:sheetData})\n        if (from === me) {\n            this.sheetActPreState(id, preState);\n        }\n        if (to.find(v=>v===me) !== undefined) {\n            this.sheetActState(id, state, sheetData);\n        }\n    }\n    private sheetActPreState(id:number, preState:string) {\n        this.changeStateCount(preState, -1);\n        if (this.curState === undefined || this.curState !== preState) return;\n        /*\n        let index = this.stateSheets.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.stateSheets.splice(index, 1);\n        }*/\n        let index = this.pageStateItems.items.findIndex(v => v.id === id);\n        if (index>=0) {\n            this.pageStateItems.items.splice(index, 1);\n        }\n    }\n\n    private sheetActState(id:number, state:string, msg:any) {\n        this.changeStateCount(state, 1);\n        if (this.curState === undefined || this.curState !== state) return;\n        /*\n        if (this.stateSheets.findIndex(v => v.id === id) < 0) {\n            this.stateSheets.push(msg);\n        }\n        */\n        if (this.pageStateItems.items.findIndex(v => v.id === id) < 0) {\n            this.pageStateItems.items.push(msg);\n        }\n    }\n\n    private changeStateCount(state:string, delta:number) {\n        if (state === undefined) return;\n        let index = this.statesCount.findIndex(v => v.state === state);\n        console.log({$:'changeState', state: state, delta: delta, index: index});\n        if (index < 0) return;\n        let stateCount = this.statesCount[index];\n        stateCount.count += delta;\n        if (stateCount.count < 0) stateCount.count = 0;\n    }\n\n    protected get VSheetMain():TypeVPage<CSheet> {return (this.ui&&this.ui.main) || VSheetMain}\n    protected get VSheetNew(): TypeVPage<CSheet> {return this.ui.sheetNew || VSheetNew}\n    protected get VSheetSaved(): TypeVPage<CSheet> {return this.ui.sheetSaved || VSheetSaved}\n    protected get VSheetEdit(): TypeVPage<CSheet> {return this.ui.sheetEdit || VSheetEdit}\n    protected get VSheetSchema(): TypeVPage<CSheet> {return VSheetSchema}\n    protected get VArchives(): TypeVPage<CSheet> {return VArchives}\n    protected get VArchived(): TypeVPage<CSheet> {return VArchived}\n    protected get VSheetList(): TypeVPage<CSheet> {return VSheetList}\n    protected get VSheetAction(): TypeVPage<CSheet> {return this.ui.sheetAction || VSheetAction}\n    protected get VSheetProcessing(): TypeVPage<CSheet> {return VSheetProcessing}\n    protected async onEvent(type:string, value:any) {\n        let c: TypeVPage<CSheet>;\n        switch (type) {\n            default: return;\n            case 'new': c = this.VSheetNew; break;\n            case 'schema': c = this.VSheetSchema; break;\n            case 'archives': c = this.VArchives; break;\n            case 'state':\n                this.curState = value.state;\n                c = this.VSheetList;\n                break;\n            case 'archived':\n                await this.showArchived(value); return;\n            case 'action':\n                await this.showAction(value); return;\n            case 'processing':\n                await this.showProcessing(value); return;\n        }\n        await this.openVPage(c, value);\n    }\n\n    async startSheet(sheetId:number) {\n        if (await this.beforeStart() === false) return;\n        await this.onEvent('action', sheetId);\n    }\n\n    async showAction(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        postWsToTop({\n            body: {\n                $type: 'msg',\n                action: '$sheet',\n                msg: {\n                    id: sheetId,\n                    uq: this.cUq.uq.id,\n                    state: sheetData.brief.state\n                }\n            }\n        });\n        await this.openVPage(this.VSheetAction, sheetData);\n    }\n\n    async showProcessing(sheetId:number) {\n        let sheetData:SheetData = await this.getSheetData(sheetId);\n        await this.openVPage(this.VSheetProcessing, sheetData);\n    }\n\n    async editSheet(sheetData:SheetData):Promise<any> {\n        //alert('修改单据：程序正在设计中');\n        let values = await this.vCall(this.VSheetEdit, sheetData);\n        return values;\n    }\n\n    async showArchived(inBrief:any) {\n        let sheetData = await this.getArchived(inBrief.id);\n        await this.openVPage(this.VArchived, sheetData);\n    }\n\n    onSave = async (values:any, valuesWithBox:any):Promise<void> => {\n        //let values = this.vForm.getValues();\n        //let ret = await this.controller.saveSheet(values, this.vForm.values);\n        let ret = await this.saveSheet(values, valuesWithBox);\n        this.ceasePage();\n        //this.openPage(this.finishedPage);\n        await this.showSaved(ret);\n    }\n\n    async showSaved(sheetData:any) {\n        await this.openVPage(this.VSheetSaved, sheetData);\n    }\n\n    private getStateUI(stateName:string) {\n        let {states} = this.res;\n        if (states === undefined) return;\n        return states[stateName];\n    }\n    getStateLabel(stateName:string) {\n        let state = this.getStateUI(stateName);\n        let ret = (state && state.label) || stateName;\n        switch (ret) {\n            default: return ret;\n            case '$': return '新单';\n        }\n    }\n    getActionLabel(stateName:string, actionName:string) {\n        let state = this.getStateUI(stateName);\n        if (state === undefined) return actionName;\n        let actions = state.actions;\n        if (actions === undefined) return actionName;\n        let action = actions[actionName];\n        return (action && action.label) || actionName;\n    }\n\n    private async loadStateSheetCount():Promise<void> {\n        this.statesCount.clear();\n        let statesCount = await this.entity.stateSheetCount();\n        this.statesCount.splice(0, 0, ...statesCount);\n    }\n\n    async getSheetData(sheetId:number):Promise<SheetData> {\n        return await this.entity.getSheet(sheetId);\n    }\n\n    async getArchived(sheetId:number):Promise<SheetData> {\n        return await this.entity.getArchive(sheetId);\n    }\n\n    async saveSheet(values:any, valuesWithBox:any):Promise<any> {\n        let {sheetTitle} = this.ui;\n        let disc = sheetTitle === undefined? this.label : sheetTitle(valuesWithBox, this.x);\n        let ret = await this.entity.save(disc, values);\n        //let {id, state} = ret;\n        //if (id > 0) this.changeStateCount(state, 1);\n        return ret;\n    }\n\n    async action(id:number, flow:number, state:string, actionName:string):Promise<any> {\n        return await this.entity.action(id, flow, state, actionName);\n    }\n}\n","export * from './cSheet';\nexport * from './vSheet';\nexport * from './vMain';\nexport * from './vNew';\nexport * from './vEdit';\nexport * from './vList';\nexport * from './vSheetAction';\nexport * from './vSchema';\nexport * from './vArchived';\nexport * from './vSheetView';\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../../css/va-lmr.css';\n\nexport interface LMRProps {\n    className?: string | string[];\n    left?: string|JSX.Element;\n    right?: string|JSX.Element;\n    onClick?: ()=>void;\n}\n\n@observer\nexport class LMR extends React.Component<LMRProps> {\n    render() {\n        let {className, left, children, right, onClick} = this.props;\n        let l, r;\n        if (left !== undefined) l = <header>{left}</header>;\n        if (right !== undefined) r = <footer>{right}</footer>;\n        let cursor;\n        if (onClick !== undefined) cursor = 'cursor-pointer';\n        return <div className={classNames('va-lmr', className, cursor)} onClick={onClick}>\n            {l}\n            <div>{children}</div>\n            {r}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\nimport '../../css/va-badge.css';\n\nexport interface BadgeProps {\n    className?: string;\n    badge?: string|number;\n    size?: 'xs' | 'sm' | 'lg';\n    color?: 'secondary'|'success'|'danger'|'primary'|'info'|'warning';\n    badgeAlign?: 'left'|'center'|'right';\n    badgeVertical?: 'top'|'middle'|'bottom';\n}\n\n@observer\nexport class Badge extends React.Component<BadgeProps> {\n    render() {\n        let {className, badge, size, color, badgeAlign, badgeVertical, children} = this.props;\n        let cn = classNames(\n            className,\n            'va-badge',\n            size && 'va-badge-'+size,\n            'va-badge-' + (color||'secondary'),\n            badgeAlign && 'va-badg-'+badgeAlign,\n            badgeVertical && 'va-badg-'+badgeVertical,\n        );\n        let b;\n        if (badge) b = <b>{badge}</b>;\n        return <div className={cn}>\n            {children}\n            {b}\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface FAProps {\n    name: string;\n    className?: string;\n    size?: 'lg'|'2x'|'3x'|'4x'|'5x';\n    spin?: boolean;\n    fixWidth?: boolean;\n    border?: boolean;\n    pull?: 'left'|'right';\n    pulse?: boolean;\n    rotate?: 90|180|270;\n    flip?: 'horizontal'|'vertical';\n    inverse?: boolean;\n}\n\nexport class FA extends React.Component<FAProps> {\n    render() {\n        let {name, className, size, spin, fixWidth, border, pull, pulse, rotate, flip, inverse} = this.props;\n        let cn = classNames(className, 'fa',\n            name && ('fa-' + name),\n            size && 'fa-'+size,\n            fixWidth && 'fa-fw',\n            border && 'fa-border',\n            pull && 'fa-pull-' + pull,\n            spin && 'fa-spin',\n            pulse && 'fa-pulse',\n            rotate && 'fa-rotate-' + rotate,\n            flip && 'fa-flip-' + flip,\n            inverse && 'fa-inverse',\n        );\n        return <i className={cn} />\n    }\n}\n\nexport interface StackedFAProps {\n    className?: string;\n    size?: 'lg',\n}\nexport class StackedFA extends React.Component<StackedFAProps> {\n    render() {\n        let {className, size, children} = this.props;\n        let cn = classNames(\n            'fa-stack',\n            className,\n            size && 'fa-' + size);\n        return <span className={cn}>\n            {children}\n        </span>;\n    }\n}\n","import * as React from 'react';\nimport {FA} from './FA';\n\nexport interface IconTextProps {\n    icon: string;\n    iconClass?: string;\n    text: string;\n    textClass?: string;\n}\n\nexport class IconText extends React.Component<IconTextProps> {\n    render() {\n        let {icon, iconClass, text, textClass} = this.props;\n        return <div className=\"py-2\">\n            <FA className={iconClass} name={icon} fixWidth={true} />\n            <span className={textClass}>{text}</span>\n        </div>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport const Muted = (props:any) => \n<small className={classNames('text-muted', props.className)} style={props.style}>\n    {props.children}\n</small>;\n","export * from './Badge';\nexport * from './LMR';\nexport * from './FA';\nexport * from './IconText';\nexport * from './Muted';\n","import * as React from 'react';\nimport { Book } from '../../uq';\nimport { Page } from '../../components';\nimport { VEntity } from '../CVEntity';\nimport { CBook, BookUI } from './cBook';\n\nexport class VBookMain extends VEntity<Book, BookUI, CBook> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        Book\n    </Page>;\n}\n","import { CEntity, EntityUI } from '../CVEntity';\nimport { Book } from '../../uq';\nimport { VBookMain } from './vBookMain';\n\nexport interface BookUI extends EntityUI {\n    CBook?: typeof CBook;\n    main: typeof VBookMain,\n}\n\nexport class CBook extends CEntity<Book, BookUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VBookMain);\n    }\n\n    protected get VBookMain():typeof VBookMain {return VBookMain}\n}\n","import React from 'react';\nimport { View, List, Muted } from '../../components';\nimport { Entity } from '../../uq';\nimport { CLink } from '../link';\nimport { CUq } from './cUq';\n\nexport class VUq extends View<CUq> {\n    protected isSysVisible = false;\n    protected tuidLinks: CLink[];\n    protected mapLinks: CLink[];\n    protected sheetLinks: CLink[];\n    protected actionLinks: CLink[];\n    protected queryLinks: CLink[];\n    protected bookLinks: CLink[];\n    protected historyLinks: CLink[];\n    protected pendingLinks: CLink[];\n\n    constructor(cUq: CUq) {\n        super(cUq);\n        let {tuidArr, mapArr, sheetArr, actionArr, queryArr, bookArr, historyArr, pendingArr} = cUq.uq;\n        this.tuidLinks = tuidArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cTuidMain(v)));\n        this.mapLinks = mapArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cMap(v)));\n        this.sheetLinks = sheetArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cSheet(v)));\n        this.actionLinks = actionArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cAction(v)));\n        this.queryLinks = queryArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cQuery(v)));\n        this.bookLinks = bookArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cBook(v)));\n        this.historyLinks = historyArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cHistory(v)));\n        this.pendingLinks = pendingArr.filter(v => this.isVisible(v)).map(v => new CLink(this.controller.cPending(v)));\n    }\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n    render(param?:any) {\n        if (this.view === undefined) return <div>??? viewModel 必须定义 view ???</div>\n        return React.createElement(this.view);\n    }\n\n    protected view = () => {\n        let {res, uq, error} = this.controller;\n        let linkItem = {\n            render: (cLink:CLink, index:number):JSX.Element => cLink.render(), \n            onClick: undefined, \n        };\n        let lists = [\n            {\n                header: res.tuid || 'TUID',\n                items: this.tuidLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.map || 'MAP',\n                items: this.mapLinks,\n            },\n            {\n                cn: 'my-2',\n                header: res.sheet || 'SHEET',\n                items: this.sheetLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.action || 'ACTION',\n                items: this.actionLinks\n            },\n            {\n                cn: 'my-2',\n                header: res.query || 'QUERY',\n                items: this.queryLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.book || 'BOOK',\n                items: this.bookLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.history || 'HISTORY',\n                items: this.historyLinks\n            },\n            {\n                cn: 'mt-2 mb-4',\n                header: res.pending || 'PENDING',\n                items: this.pendingLinks\n            }\n        ];\n        let content;\n        if (error !== undefined) {\n            content = <div className=\"p-3 text-danger\">连接错误: {error}</div>;\n        }\n        else {\n            content = lists.map(({cn, header, items},index) => items.length > 0 && <List\n                key={index}\n                className={cn}\n                header={<div className=\"px-3 py-1 bg-light\"><Muted>{header}</Muted></div>}\n                items={items}\n                item={linkItem} />\n            );\n        }\n        return <>\n            <div className=\"px-3 py-1 small\">{res.uq || uq}</div>\n            {content}\n        </>;\n    }\n}\n","import * as React from 'react';\n//import _ from 'lodash';\nimport { Controller, resLang } from '../../components';\nimport { UqData } from '../../net';\nimport { PureJSONContent } from '../tools';\nimport { UqMan, Action, Sheet, Query, Book, Map, Entity, Tuid, History, Pending, TuidDiv, CreateBoxId, BoxId } from '../../uq';\nimport { CLink } from '../link';\nimport { CBook, BookUI } from '../book';\nimport { CSheet, SheetUI } from '../sheet';\nimport { ActionUI, CAction } from '../action';\nimport { QueryUI, CQuery, CQuerySelect } from '../query';\nimport { CTuidMain, TuidUI, CTuidInfo, CTuidSelect, CTuidEdit, CTuidList } from '../tuid';\nimport { MapUI, CMap } from '../map';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { VUq } from './vUq';\nimport { CHistory, HistoryUI } from '../history';\nimport { CPending, PendingUI } from '../pending';\nimport { CApp } from '../app';\nimport { TuidWithUIRes, ReactBoxId } from './reactBoxId';\n\nexport type EntityType = 'sheet' | 'action' | 'tuid' | 'query' | 'book' | 'map' | 'history' | 'pending';\n\nexport interface UqUI {\n    CTuidMain?: typeof CTuidMain;\n    CTuidEdit?: typeof CTuidEdit;\n    CTuidList?: typeof CTuidList;\n    CTuidSelect?: typeof CTuidSelect;\n    CTuidInfo?: typeof CTuidInfo;\n    CQuery?: typeof CQuery;\n    CQuerySelect?: typeof CQuerySelect;\n    CMap?: typeof CMap;\n    CAction?: typeof CAction;\n    CSheet?: typeof CSheet;\n    CBook?: typeof CBook;\n    CHistory?: typeof CHistory;\n    CPending?: typeof CPending;\n    tuid?: {[name:string]: TuidUI};\n    sheet?: {[name:string]: SheetUI};\n    action?: {[name:string]: ActionUI};\n    map?: {[name:string]: MapUI};\n    query?: {[name:string]: QueryUI};\n    book?: {[name:string]: BookUI};    \n    history?: {[name:string]: HistoryUI};\n    pending?: {[name:string]: PendingUI};\n    res?: any;\n}\n\nfunction lowerPropertyName(entities: {[name:string]: EntityUI}) {\n    if (entities === undefined) return;\n    for (let i in entities) entities[i.toLowerCase()] = entities[i];\n}\n\nexport class CUq extends Controller /* implements Uq*/ {\n    private ui:any;\n    private tuidURs: {[name:string]: TuidWithUIRes} = {};\n    private CTuidMain: typeof CTuidMain;\n    private CTuidEdit: typeof CTuidEdit;\n    private CTuidList: typeof CTuidList;\n    private CTuidSelect: typeof CTuidSelect;\n    private CTuidInfo: typeof CTuidInfo;\n    private CQuery: typeof CQuery;\n    private CQuerySelect: typeof CQuerySelect;\n    private CMap: typeof CMap;\n    private CAction: typeof CAction;\n    private CSheet: typeof CSheet;\n    private CBook: typeof CBook;\n    private CHistory: typeof CHistory;\n    private CPending: typeof CPending;\n\n    //constructor(cApp:CApp, uq:string, appId:number, uqId:number, access:string, ui:UqUI) {\n    constructor(cApp:CApp, uqData:UqData, ui:UqUI) {\n        super(resLang(ui.res));\n        this.cApp = cApp;\n        //this.id = uqId;\n        // 每一个ui都转换成小写的key的版本\n        lowerPropertyName(ui.tuid);\n        lowerPropertyName(ui.sheet);\n        lowerPropertyName(ui.map);\n        lowerPropertyName(ui.query);\n        lowerPropertyName(ui.action);\n        lowerPropertyName(ui.book);\n        lowerPropertyName(ui.history);\n        lowerPropertyName(ui.pending);\n        this.ui = ui;\n        this.CTuidMain = ui.CTuidMain || CTuidMain;\n        this.CTuidEdit = ui.CTuidEdit || CTuidEdit;\n        this.CTuidList = ui.CTuidList || CTuidList;\n        this.CTuidSelect = ui.CTuidSelect || CTuidSelect;\n        this.CTuidInfo = ui.CTuidInfo || CTuidInfo;\n        this.CQuery = ui.CQuery || CQuery;\n        this.CQuerySelect = ui.CQuerySelect || CQuerySelect;\n        this.CMap = ui.CMap || CMap;\n        this.CAction = ui.CAction || CAction;\n        this.CSheet = ui.CSheet || CSheet;\n        this.CBook = ui.CBook || CBook;\n        this.CHistory = ui.CHistory || CHistory;\n        this.CPending = ui.CPending || CPending;\n\n        this.uq = new UqMan(cApp.uqs, uqData, this.createBoxId, undefined);\n    }\n\n    protected async internalStart() {\n    }\n\n    cApp:CApp;\n    res: any;\n    uq: UqMan;\n    error: string;\n    \n    private createBoxId:CreateBoxId = (tuid:Tuid, id:number):BoxId =>{\n        let {name} = tuid;\n        let tuidUR = this.tuidURs[name];\n        if (tuidUR === undefined) {\n            let {ui, res} = this.getUI(tuid);\n            this.tuidURs[name] = tuidUR = new TuidWithUIRes(tuid, ui, res);\n        }\n        return new ReactBoxId(tuidUR, id);\n    }\n\n    async init():Promise<void> {\n        return await this.uq.init();\n    }\n\n    async loadEntities():Promise<string> {\n        try {\n            await this.uq.loadEntities();\n        }\n        catch (err) {\n            return err;\n        }\n    }\n\n    async getQuerySearch(name:string):Promise<Query> {\n        let query = this.uq.query(name);\n        if (query === undefined) \n            alert(`QUERY ${name} 没有定义!`);\n        else {\n            await query.loadSchema();\n            let {returns} = query;\n            if (returns.length > 1) {\n                alert(`QUERY ${name} 返回多张表, 无法做QuerySearch`);\n            }\n        }\n        return query;\n    }\n    getTuidPlaceHolder(tuid:Tuid) {\n        let {tuidPlaceHolder, entity} = this.res;\n        let {name} = tuid;\n        //let type:string;\n        if (entity !== undefined) {\n            let en = entity[name];\n            if (en !== undefined) {\n                //type = en.label;\n            }\n        }\n        return (tuidPlaceHolder || 'Select');\n    }\n    getNone() {\n        let {none} = this.res;\n        return none || 'none';\n    }\n    protected isSysVisible = false;\n    protected isVisible(entity: Entity):boolean {\n        return entity.sys !== true || this.isSysVisible;\n    }\n\n    async navSheet(sheetTypeId:number, sheetId:number) {\n        let sheet = this.uq.sheetFromTypeId(sheetTypeId);\n        if (sheet === undefined) {\n            alert('sheetTypeId ' + sheetTypeId + ' is not exists!');\n            return;\n        }\n        let cSheet = this.cSheet(sheet);\n        await cSheet.startSheet(sheetId);\n    }\n\n    sheet(entityName:string) {return this.uq.sheet(entityName);}\n    action(entityName:string) {return this.uq.action(entityName);}\n    query(entityName:string) {return this.uq.query(entityName);}\n    book(entityName:string) {return this.uq.book(entityName);}\n    map(entityName:string) {return this.uq.map(entityName);}\n    history(entityName:string) {return this.uq.history(entityName);}\n    pending(entityName:string) {return this.uq.pending(entityName);}\n    tuid(entityName:string) {return this.uq.tuid(entityName)}\n    tuidDiv(entityName:string, divName:string) {\n        return this.uq.tuidDiv(entityName, divName);\n    }\n\n    cSheetFromName(entityName:string):CSheet {\n        let entity = this.uq.sheet(entityName);\n        if (entity !== undefined) return this.cSheet(entity);\n    }\n    cActionFromName(entityName:string) {\n        let entity = this.uq.action(entityName);\n        if (entity !== undefined) return this.cAction(entity);\n    }\n    cQueryFromName(entityName:string) {\n        let entity = this.uq.query(entityName);\n        if (entity !== undefined) return this.cQuery(entity);\n    }\n    cBookFromName(entityName:string) {\n        let entity = this.uq.book(entityName);\n        if (entity !== undefined) return this.cBook(entity);\n    }\n    cMapFromName(entityName:string) {\n        let entity = this.uq.map(entityName);\n        if (entity !== undefined) return this.cMap(entity);\n    }\n    cHistoryFromName(entityName:string) {\n        let entity = this.uq.history(entityName);\n        if (entity !== undefined) return this.cHistory(entity);\n    }\n    cPendingFromName(entityName:string) {\n        let entity = this.uq.pending(entityName);\n        if (entity !== undefined) return this.cPending(entity);\n    }\n    cTuidMainFromName(entityName:string) {\n        let entity = this.uq.tuid(entityName);\n        if (entity !== undefined) return this.cTuidMain(entity);\n    }\n    cTuidEditFromName(entityName:string) {\n        let entity = this.uq.tuid(entityName);\n        if (entity !== undefined) return this.cTuidEdit(entity);\n    }\n    cTuidInfoFromName(entityName:string) {\n        let entity = this.uq.tuid(entityName);\n        if (entity !== undefined) return this.cTuidInfo(entity);\n    }\n\n    cTuidSelectFromName(entityName:string) {\n        let entity = this.uq.tuid(entityName);\n        if (entity !== undefined) return this.cTuidSelect(entity);\n    }\n\n    cFromName(entityType:EntityType, entityName:string): CEntity<Entity, EntityUI> {\n        switch (entityType) {\n            case 'sheet':\n                let sheet = this.uq.sheet(entityName);\n                if (sheet === undefined) return;\n                return this.cSheet(sheet);\n            case 'action':\n                let action = this.uq.action(entityName);\n                if (action === undefined) return;\n                return this.cAction(action);\n            case 'tuid':\n                let tuid = this.uq.tuid(entityName);\n                if (tuid === undefined) return;\n                return this.cTuidMain(tuid);\n            case 'query':\n                let query = this.uq.query(entityName);\n                if (query === undefined) return;\n                return this.cQuery(query);\n            case 'book':\n                let book = this.uq.book(entityName);\n                if (book === undefined) return;\n                return this.cBook(book);\n            case 'map':\n                let map = this.uq.map(entityName);\n                if (map === undefined) return;\n                return this.cMap(map);\n            case 'history':\n                let history = this.uq.history(entityName);\n                if (history === undefined) return;\n                return this.cHistory(history);\n            case 'pending':\n                let pending = this.uq.pending(entityName);\n                if (pending === undefined) return;\n                return this.cPending(pending);\n        }\n    }\n\n    linkFromName(entityType:EntityType, entityName:string) {\n        return this.link(this.cFromName(entityType, entityName));\n    }\n\n    private getUI<T extends Entity, UI extends EntityUI>(t:T):{ui:UI, res:any} {\n        let ui:any, res:any;\n        let {name, typeName} = t;\n        if (this.ui !== undefined) {\n            if (typeName === 'div') {\n                let tuidDiv:TuidDiv = t as unknown as TuidDiv;\n                let ownerTuid = tuidDiv.owner;\n                let tUIs = this.ui[ownerTuid.typeName] as TuidUI;\n                if (tUIs) {\n                    let tUI = tUIs[ownerTuid.name];\n                    if (tUI) {\n                        let divs = tUI.divs;\n                        if (divs) {\n                            ui = divs[name];\n                        }\n                    }\n                }\n            }\n            else {\n                let tUI = this.ui[typeName];\n                if (tUI !== undefined) {\n                    ui = tUI[name];\n                }\n            }\n        }\n        let {entity} = this.res;\n        if (entity !== undefined) {\n            res = entity[name];\n        }\n        return {ui: ui || {}, res: res || {} };\n    }\n\n    link(cEntity:CEntity<Entity, EntityUI>) {\n        return new CLink(cEntity);\n    }\n\n    get tuidLinks() {\n        return this.uq.tuidArr.filter(v => this.isVisible(v)).map(v => this.link(this.cTuidMain(v)));\n    }\n    cTuidMain(tuid:Tuid):CTuidMain {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new ((ui && ui.CTuidMain) || this.CTuidMain)(this, tuid, ui, res);\n    }\n    cTuidEdit(tuid:Tuid):CTuidEdit {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new ((ui && ui.CTuidEdit) || this.CTuidEdit)(this, tuid, ui, res);\n    }\n    cTuidList(tuid:Tuid):CTuidList {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new ((ui && ui.CTuidList) || this.CTuidList)(this, tuid, ui, res);\n    }\n    cTuidSelect(tuid:Tuid):CTuidSelect {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new ((ui && ui.CTuidSelect) || this.CTuidSelect)(this, tuid, ui, res);\n    }\n    cTuidInfo(tuid:Tuid):CTuidInfo {\n        let {ui, res} = this.getUI<Tuid, TuidUI>(tuid);\n        return new ((ui && ui.CTuidInfo) || this.CTuidInfo)(this, tuid, ui, res);\n    }\n\n    cSheet(sheet:Sheet/*, sheetUI?:SheetUI, sheetRes?:any*/):CSheet {\n        let {ui, res} = this.getUI<Sheet, SheetUI>(sheet);\n        //if (sheetUI !== undefined) ui = sheetUI;\n        //if (sheetRes !== undefined) res = sheetRes;\n        //return new (ui && ui.CSheet || this.CSheet)(this, sheet, sheetUI, sheetRes);\n        return new ((ui && ui.CSheet) || this.CSheet)(this, sheet, ui, res);\n    }\n    get sheetLinks() { \n        return this.uq.sheetArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cSheet(v))\n        });\n    }\n\n    cAction(action:Action):CAction {\n        let {ui, res} = this.getUI<Action, ActionUI>(action);\n        return new ((ui && ui.CAction) || this.CAction)(this, action, ui, res);\n    }\n    get actionLinks() { \n        return this.uq.actionArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cAction(v))\n        });\n    }\n\n    cQuery(query:Query):CQuery {\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new ((ui && ui.CQuery) || this.CQuery)(this, query, ui, res);\n    }\n    cQuerySelect(queryName:string):CQuerySelect {\n        let query = this.uq.query(queryName);\n        if (query === undefined) return;\n        let {ui, res} = this.getUI<Query, QueryUI>(query);\n        return new ((ui && ui.CQuerySelect) || this.CQuerySelect)(this, query, ui, res);\n    }\n    get queryLinks() {\n        return this.uq.queryArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cQuery(v))\n        });\n    }\n    \n    cBook(book:Book):CBook {\n        let {ui, res} = this.getUI<Book, BookUI>(book);\n        return new ((ui && ui.CBook) || this.CBook)(this, book, ui, res);\n    }\n    get bookLinks() { \n        return this.uq.bookArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cBook(v))\n        });\n    }\n    \n    cHistory(history:History):CHistory {\n        let {ui, res} = this.getUI<History, HistoryUI>(history);\n        return new ((ui && ui.CHistory) || this.CHistory)(this, history, ui, res);\n    }\n    get historyLinks() { \n        return this.uq.historyArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cHistory(v))\n        });\n    }\n    \n    cPending(pending:Pending):CPending {\n        let {ui, res} = this.getUI<Pending, PendingUI>(pending);\n        return new ((ui && ui.CPending) || this.CPending)(this, pending, ui, res);\n    }\n    get pendingLinks() { \n        return this.uq.pendingArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cPending(v))\n        });\n    }\n    \n    cMap(map:Map):CMap {\n        let {ui, res} = this.getUI<Map, MapUI>(map);\n        return new ((ui && ui.CMap) || this.CMap)(this, map, ui, res);\n    }\n    get mapLinks() { \n        return this.uq.mapArr.filter(v => this.isVisible(v)).map(v => {\n            return this.link(this.cMap(v));\n        });\n    }\n\n    getTuidContent(tuid:Tuid): React.StatelessComponent<any> {\n        let {ui} = this.getUI<Tuid, TuidUI>(tuid);\n        return (ui && ui.content) || PureJSONContent;\n    }\n\n    getTuidDivContent(tuidDiv:TuidDiv): React.StatelessComponent<any> {\n        let {owner} = tuidDiv;\n        let {ui} = this.getUI<Tuid, TuidUI>(owner);\n        return (ui && ui.divs && ui.divs[tuidDiv.name].content) || PureJSONContent;\n    }\n\n    async showTuid(tuid:Tuid, id:number):Promise<void> {\n        let c = this.cTuidInfo(tuid);\n        await c.start(id);\n    }\n\n    async showTuidDiv(tuid:TuidDiv, id:number):Promise<void> {\n        let {owner} = tuid;\n        let c = this.cTuidInfo(owner);\n        await c.start(id);\n    }\n\n    protected get VUq():typeof VUq {return VUq}\n\n    render() {\n        let v = new (this.VUq)(this);\n        return v.render();\n    }\n}\n\n","export * from './cUq';\nexport * from './vUq';\n//export * from './reactBoxId';","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport className from 'classnames';\nimport { Page, List, LMR, FA } from '../../components';\nimport { PureJSONContent } from '../tools';\nimport { Map } from '../../uq';\nimport { VEntity } from '../CVEntity';\nimport { CMap, MapItem, MapUI } from './cMap';\nimport { tv } from '../cUq/reactBoxId';\n\nexport class VMapMain extends VEntity<Map, MapUI, CMap> {\n    private isFrom: boolean;\n\n    async open(param?:any) {\n        this.isFrom = this.controller.isFrom;\n        this.openPage(this.view);\n    }\n\n    itemRender = (item:MapItem, index:number) => {\n        return <this.ItemRow item={item} />;\n    }\n\n    private ItemRow = observer(({item}: {item:MapItem}) => {\n        let {box, children, isLeaf, keyIndex, values} = item;\n        let keyUI = this.controller.keyUIs[keyIndex];\n        let {content:keyContent, valuesContent, none:keyNone} = keyUI;\n        let add:any, remove:any;\n        if (this.isFrom === false) {\n            add = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.addClick(item)}>\n                <FA name=\"plus\" />\n            </button>;\n            remove = <button className=\"btn btn-link btn-sm\" onClick={()=>this.controller.removeClick(item)}>\n                <FA className=\"text-info\" name=\"trash\" />\n            </button>;\n        }\n        let right:any;\n        if (isLeaf === false) {\n            if (keyIndex === 0)\n                right = add;\n            else\n                right = <>{remove} &nbsp; {add}</>;\n        }\n        else if (keyIndex > 0) {\n            right = remove;\n        }\n        let content:any, border:any, valuesView:any;\n        if (isLeaf === true) {\n            content = undefined; //<div className=\"ml-5\">leaf</div>;\n            if (values) {\n                //valuesView = null; // 现在不显示values content了\n                valuesView = (valuesContent || PureJSONContent)(values, this.x);\n            }\n        }\n        else {\n            border = 'border-bottom';\n            let none = keyNone && keyNone(this.x);\n            content = <List \n                className=\"ml-4\" \n                items={children} \n                item={{onClick:undefined, render:this.itemRender}}\n                none={none} />\n        }\n        let left = <div className=\"py-1 pr-3\">{tv(box, keyContent, this.x)}</div>;\n        return <div className=\"d-flex flex-column\">\n            <LMR className={className('px-3', 'py-2', border)}\n                left={left}\n                right={right}\n            >\n                <div className=\"py-1\">{valuesView}</div>\n            </LMR>\n            {content}\n        </div>;\n    });\n\n    protected get view() { return () => <Page header={this.label}>\n            <List items={this.controller.items} item={{className:'my-2', onClick:undefined, render:this.itemRender}} />\n        </Page>\n    };\n}\n","import * as React from 'react';\nimport { VEntity } from '../CVEntity';\nimport { MapUI, CMap } from './cMap';\nimport { Map } from '../../uq';\nimport { Page } from '../../components';\nimport { VForm } from '../form';\n\nexport class VInputValues extends VEntity<Map, MapUI, CMap> {\n    private vForm: VForm;\n\n    async open(param?:any) {\n        this.vForm = this.createForm(this.onValuesSubmit);\n        this.openPageElement(<this.view />);\n    }\n\n    private onValuesSubmit = async () => {\n        this.ceasePage();\n        let values = this.vForm.getValues();\n        this.returnCall(values);\n    }\n\n    private view = () => {\n        return <Page>\n            {this.vForm.render()}\n        </Page>\n    }\n}\n","import _ from 'lodash';\nimport { observable } from 'mobx';\nimport { Map, Tuid, BoxId, Field, fieldDefaultValue } from '../../uq';\nimport { PureJSONContent } from '../tools';\nimport { CEntity, EntityUI } from '../CVEntity';\nimport { VMapMain } from './vMain';\nimport { VInputValues } from './inputValues';\n\nexport interface MapKey {\n    content: (values, x?:any) => JSX.Element;\n    valuesContent?: (values, x?:any) => JSX.Element;\n    none?: (x:any)=>string;\n}\n\nexport interface MapUI extends EntityUI {\n    CMap?: typeof CMap;\n    keys?: MapKey[],\n}\n\nexport class MapItem {\n    parent: MapItem;\n    tuid: Tuid;\n    box: BoxId;\n    isLeaf: boolean;\n    keyIndex:number;\n    children: MapItem[] = observable.array([], {deep: true});\n    values: any;\n    constructor(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number) {\n        this.parent = parent;\n        this.tuid = tuid;\n        this.box = box;\n        this.keyIndex = keyIndex;\n        this.isLeaf = false;\n    }\n}\n\n/*eslint no-template-curly-in-string: 0*/\nexport class CMap extends CEntity<Map, MapUI> {\n    isFrom: boolean;\n    items:MapItem[];\n    keyFields: Field[];\n    keyUIs: MapKey[];\n\n    protected async internalStart() {\n        let {keys, schemaFrom} = this.entity;\n        this.isFrom = schemaFrom !== undefined;\n        let q = this.entity.queries.all;\n        let result = await q.query({});\n        //let data = await this.entity.unpackReturns(res);\n        let ret = result.ret;\n        let keysLen = keys.length;\n        this.keyUIs = _.clone(this.ui.keys || []);\n        this.keyFields = [];\n        let retFields = q.returns[0].fields;\n        for (let i=0; i<keysLen; i++) {\n            this.keyFields.push(retFields[i]);\n            if (i >= this.keyUIs.length) {\n                this.keyUIs.push({\n                    content: PureJSONContent,\n                });\n            }\n        }\n        this.items = observable([]);\n        let item:MapItem = undefined;\n        for (let r of ret) {\n            let newItem = this.addItem(item, r);\n            if (newItem !== undefined) {\n                this.items.push(newItem);\n                item = newItem;\n            }\n        }\n\n        await this.openVPage(this.VMapMain);\n    }\n\n    private createItem(parent:MapItem, tuid:Tuid, box:BoxId, keyIndex:number, values?:any) {\n        let item = new MapItem(parent, tuid, box, keyIndex);\n        if (keyIndex === this.keyFields.length - 1) {\n            item.isLeaf = true;\n            item.values = values;\n        }\n        return item;\n    }\n\n    addItem(item:MapItem, row:any):MapItem {\n        let ret:MapItem = undefined;\n        let keysLen = this.keyFields.length;\n        let p = item;\n        for (let i=0;i<keysLen;i++) {\n            let key = this.keyFields[i];\n            let {name} = key;\n            let tuidBox = key._tuid;\n            let val:BoxId = row[name];\n            if (val === undefined) break;\n            let {id} = val;\n            if (i === 0) {\n                if (id === 0) continue;\n                if (p === undefined || p.box.id !== id) {\n                    ret = p = this.createItem(undefined, tuidBox.tuid, val, i, row);\n                }\n                continue;\n            }\n            let {children} = p;\n            let len = children.length;\n            if (len > 0) {\n                let n = children[len-1];\n                if (n.box.id === id) {\n                    p = n;\n                    continue;\n                }\n            }\n            if (id > 0) {\n                children.push(p = this.createItem(p, tuidBox.tuid, val, i, row));\n            }\n        }\n        return ret;\n    }\n\n    async searchOnKey(keyField:Field, param):Promise<number> {\n        let {_tuid} = keyField;\n        let {tuid, ownerField} = _tuid;\n        let cTuidSelect = this.cUq.cTuidSelect(tuid);\n        let callParam = param;\n        if (ownerField !== undefined) {\n            callParam = param[ownerField.name];\n            if (typeof callParam === 'object') {\n                callParam = callParam.id;\n            }\n        }\n        let ret = await cTuidSelect.call(callParam);\n        return _tuid.getIdFromObj(ret);\n    }\n\n    addClick = async(item:MapItem) => {\n        let {keyIndex, children} = item;\n        let keysLen = this.keyFields.length;\n        let keysLast = keysLen-1;\n        let idx = keyIndex + 1;\n        if (idx >= keysLen) return;\n        let keyField = this.keyFields[idx];\n        let kn = keyField.name;\n        let tuid = keyField._tuid;\n        let searchParam = {} as any;\n        let data = {} as any;\n        for (let p=item;p!==undefined;p=p.parent) {\n            let {keyIndex:ki, box} = p;\n            let kn = this.keyFields[ki].name;\n            //searchParam[kn] = data['_' + kn] = box.id;\n            searchParam[kn] = data[kn] = box.id;\n        }\n\n        let id = await this.searchOnKey(keyField, searchParam);\n        if (id === undefined || id <= 0) return;\n        tuid.useId(id);\n        let idBox = tuid.boxId(id);\n        let arr1 = {} as any;\n        let values:any = {};\n        if (keyIndex+1===keysLast) {\n            tuid.useId(id);\n            //values[kn] = arr1['_' + kn] = idBox;\n            values[kn] = arr1[kn] = idBox;\n            if (this.entity.fields.length > 0) {\n                let ret = await this.vCall(VInputValues, data);\n                for (let i in ret) {\n                    //values[i] = arr1['_' + i] = ret[i];\n                    values[i] = arr1[i] = ret[i];\n                }\n            }\n        }\n        else {\n            //values[kn] = data['_' + kn] = idBox;\n            values[kn] = data[kn] = idBox;\n            for (let i=idx+1;i<keysLast;i++) {\n                //data['_' + this.keyFields[i].name] = 0;\n                data[this.keyFields[i].name] = 0;\n            }\n            // 填map的key field 0 值\n            //arr1['_' + this.keyFields[keysLast].name] = 0;\n            arr1[this.keyFields[keysLast].name] = 0;\n            let {fields} = this.entity;\n            for (let f of fields) {\n                let {type, null:nullable} = f;\n                if (!(nullable === true)) {\n                    //arr1['_' + f.name] = fieldDefaultValue(type);\n                    arr1[f.name] = fieldDefaultValue(type);\n                }\n            }\n        }\n        data.arr1 = [arr1];\n        await this.entity.actions.add.submit(data);\n        let rowIndex = children.findIndex(v => v.box.id === id);\n        if (rowIndex < 0) {\n            children.push(this.createItem(item, tuid.tuid, idBox, idx, values));\n        }\n        else {\n            let {fields} = this.entity;\n            if (fields !== undefined && fields.length > 0) {\n                let row = children[rowIndex];\n                children.splice(rowIndex, 1);\n                row.values = values;\n                /*\n                for (let f of fields) {\n                    let {name:fn} = f;\n                    row.values[fn] = values[fn];\n                }*/\n                children.splice(rowIndex, 0, row);\n            }\n        }\n        this.removeCeased();\n    }\n\n    removeClick = async(item:MapItem) => {\n        let keyField = this.keyFields[item.keyIndex];\n        let tuid = keyField._tuid;\n        let cTuidMain = this.cUq.cTuidMain(tuid.tuid);\n        let label = cTuidMain.getLable(tuid.tuid);\n        let confirmDelete:_.TemplateExecutor = \n            this.res.confirmDelete \n            || _.template('do you really want to remove ${label}?');\n        if (window.confirm(confirmDelete({label:label})) === false) return;\n        let map:Map = this.entity;\n        let data = {} as any;\n        let arr1 = data['arr1'] = [];\n        let v0 = {} as any;\n        arr1.push(v0);\n        for (let p=item; p!==undefined;p=p.parent) {\n            let ki=p.keyIndex;\n            //v0['_'+this.keyFields[ki].name] = p.box.id;\n            v0[this.keyFields[ki].name] = p.box.id;\n        }\n        let len = this.keyFields.length;\n        for (let i=item.keyIndex+1; i<len; i++) {\n            let k = this.keyFields[i];\n            //v0['_'+k.name] = -1;\n            v0[k.name] = -1;\n        }\n        await map.actions.del.submit(data);\n        let children = item.parent.children;\n        let index = children.findIndex(v => v === item);\n        if (index >= 0) children.splice(index, 1);\n    }\n\n    protected get VMapMain():typeof VMapMain {return VMapMain}\n}\n","export * from './cMap';\nexport * from './vMain';\n","import {CenterApiBase} from '../net';\n\nexport class CenterApi extends CenterApiBase {\n    async userAppUnits(app:number):Promise<any[]> {\n        return await this.get('tie/user-app-units', {app:app});\n    }\n}\n\nexport const centerApi = new CenterApi('tv/', undefined);\n","import * as React from 'react';\nimport { VPage, Page, FA, nav, LMR, List } from \"../../components\";\nimport { appInFrame } from '../../net';\nimport { CApp } from \"./CApp\";\n\nexport class VAppMain extends VPage<CApp> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    render(param?:any) {\n        return this.appContent();\n    }\n\n    protected appPage = () => {\n        let {caption} = this.controller;\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\n            {this.appContent()}\n        </Page>;\n    }\n\n    protected appContent = () => {\n        let {cUqArr} = this.controller;\n        let content:any;\n        if (cUqArr.length === 0) {\n            content = <div className=\"text-danger\">\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\n            </div>;\n        }\n        else {\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\n        }\n        return <>{content}</>;\n    };\n}\n\nexport class VUnsupportedUnit extends VPage<CApp> {\n    async open(predefinedUnit: number) {\n        this.openPage(this.page, predefinedUnit);\n    }\n\n    private page = (predefinedUnit: number) => {\n        let {user} = nav;\n        let userName:string = user? user.name : '[未登录]';\n        let {appOwner, appName} = this.controller.uqs;\n        return <Page header=\"APP无法运行\" logout={true}>\n            <div className=\"m-3 text-danger container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\n                    <div className=\"col-sm text-body\">{userName}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">\n                        可能原因<FA name=\"exclamation-triangle\" />\n                    </div>\n                    <div className=\"col-sm text-body\">\n                        <ul className=\"p-0\">\n                            <li>没有小号运行 {appName}</li>\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{appName}的小号</li>\n                            {\n                                predefinedUnit && \n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {appName}</li>\n                            }\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\n                    <div className=\"col-sm text-body\">\n                        预设小号定义在 public/unit.json 文件中。\n                        定义了这个文件的程序，只能由url直接启动。\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\n                        如果要删去缓存的预定义Unit，logout然后再login。\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    }\n}\n\nexport class VUnitSelect extends VPage<CApp> {\n    async open() {\n        this.openPage(this.page);\n    }\n\n    private renderRow = (item: any, index: number):JSX.Element => {\n        let {id, nick, name} = item;\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\n            <div>{nick || name}</div>\n        </LMR>;\n    }\n    private onRowClick = async (item: any) => {\n        appInFrame.unit = item.id; // 25;\n        await this.controller.start();\n    }\n\n    private page = () => {\n        return <Page header=\"选择小号\" logout={true}>\n            <List items={this.controller.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\n        </Page>\n    }\n}\n\nexport class VErrorsPage extends VPage<CApp> {\n    async open(errors:string[]) {\n        this.openPage(this.page, errors);\n    }\n\n    private page = (errors:string[]) => {\n        return <Page header=\"ERROR\">\n            <div className=\"m-3\">\n                <div>Load Uqs 发生错误：</div>\n                {errors.map((r, i) => <div key={i}>{r}</div>)}\n            </div>\n        </Page>;\n    }\n}\n\nexport class VAppStartError extends VPage<CApp> {\n    async open(error:any) {\n        this.openPage(this.page, error);\n    }\n\n    private page = (error:any) => {\n        return <Page header=\"App start error!\">\n            <pre>\n                {typeof error === 'string'? error : error.message}\n            </pre>\n        </Page>;\n    }\n}","//import _ from 'lodash';\nimport { nav, Controller, TypeVPage, resLang, NavSettings} from '../../components';\nimport { loadAppUqs, appInFrame, getExHash, UqData} from '../../net';\nimport { CUq, UqUI } from '../cUq';\nimport { centerApi } from '../centerApi';\nimport { UQsMan } from '../../uq';\nimport { VUnsupportedUnit, VAppMain, VUnitSelect, VErrorsPage, VAppStartError } from './vApp';\n\nexport interface RoleAppUI {\n    CApp?: typeof CApp;\n    CUq?: typeof CUq;\n    main?: TypeVPage<CApp>;\n    uqs: {[uq:string]: UqUI | (()=>Promise<UqUI>)};\n    res?: any;\n}\n\nexport interface AppUI extends RoleAppUI, NavSettings {\n    appName: string;        // 格式: owner/appName\n    version: string;        // 版本变化，缓存的uqs才会重载\n    roles?: {[role:string]: RoleAppUI | (()=>Promise<RoleAppUI>)};\n}\n\nexport class CApp extends Controller {\n    private readonly cUqCollection: {[uq:string]: CUq} = {};\n    private readonly cImportUqs: {[uq:string]: CUq} = {};\n    protected ui:AppUI;\n    readonly name: string;\n    readonly version: string;\n    readonly uqs: UQsMan;\n    readonly caption: string; // = 'View Model 版的 Uq App';\n    appUnits:any[];\n\n    constructor(ui:AppUI) {\n        super(resLang(ui && ui.res));\n        nav.setSettings(ui);\n        this.name = ui.appName;\n        this.version = ui.version;\n        if (this.name === undefined) {\n            throw new Error('appName like \"owner/app\" must be defined in UI');\n        }\n        this.uqs = new UQsMan(this.name, undefined);\n        if (ui.uqs === undefined) ui.uqs = {};\n        this.ui = ui;\n        this.caption = this.res.caption || 'Tonva';\n    }\n    \n    getImportUq(uqOwner:string, uqName:string):CUq {\n        let uq = uqOwner + '/' + uqName;\n        let cUq = this.cImportUqs[uq];\n        if (cUq !== undefined) return cUq;\n        //let ui = this.ui && this.ui.uqs && this.ui.uqs[uq];\n        //let uqId = -1; // unknown\n        this.cImportUqs[uq] = cUq = this.getCUq(uq);\n        return cUq;\n    }\n\n    protected newCUq(uqData: UqData, uqUI: UqUI) {\n        let cUq = new (this.ui.CUq || CUq)(this, uqData, uqUI);\n        Object.setPrototypeOf(cUq.x, this.x);\n        return cUq;\n    }\n\n    get cUqArr():CUq[] {\n        let ret:CUq[] = [];\n        for (let i in this.cUqCollection) {\n            ret.push(this.cUqCollection[i]);\n        }\n        return ret;\n    }\n\n    getCUq(uq:string):CUq {\n        return this.cUqCollection[uq];\n    }\n\n    protected get VAppMain():TypeVPage<CApp> {return (this.ui&&this.ui.main) || VAppMain}\n    protected async beforeStart():Promise<boolean> {\n        try {\n            let retErrors = await this.load();\n            //let app = await loadAppUqs(this.appOwner, this.appName);\n            // if (isDevelopment === true) {\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\n            let {predefinedUnit} = appInFrame;\n            //let {id} = app;\n            //this.id = id;\n            let {user} = nav;\n            if (user !== undefined && user.id > 0) {\n                this.appUnits = await centerApi.userAppUnits(this.uqs.id);\n                switch (this.appUnits.length) {\n                    case 0:\n                        this.showUnsupport(predefinedUnit);\n                        return false;\n                    case 1:\n                        let appUnit = this.appUnits[0].id;\n                        if (appUnit === undefined || appUnit < 0 || \n                            (predefinedUnit !== undefined && appUnit !== predefinedUnit))\n                        {\n                            this.showUnsupport(predefinedUnit);\n                            return false;\n                        }\n                        appInFrame.unit = appUnit;\n                        break;\n                    default:\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\n                            appInFrame.unit = predefinedUnit;\n                            break;\n                        }\n                        //nav.push(<this.selectUnitPage />)\n                        this.openVPage(VUnitSelect);\n                        return false;\n                }\n            }\n            if (retErrors !== undefined) {\n                this.openVPage(VErrorsPage);\n                return false;\n            }\n            return true;\n        }\n        catch (err) {\n            this.openVPage(VAppStartError);\n            return false;\n        }\n    }\n\n    private async load(): Promise<string[]> {\n        let {appOwner, appName} = this.uqs;\n        let {localData} = this.uqs;\n        let uqAppData = localData.get();\n        if (!uqAppData || uqAppData.version !== this.version) {\n            uqAppData = await loadAppUqs(appOwner, appName);\n            uqAppData.version = this.version;\n            localData.set(uqAppData);\n            for (let uq of uqAppData.uqs) uq.newVersion = true;\n        }\n        let {id, uqs} = uqAppData;\n        this.uqs.id = id;\n\n        let retErrors:string[] = [];\n\n        let promiseInits: PromiseLike<void>[] = [];\n        let promises: PromiseLike<string>[] = [];\n        for (let uqData of uqs) {\n            let {uqOwner, uqName} = uqData;\n            let uqFullName = uqOwner + '/' + uqName;\n            let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\n            let cUq = this.newCUq(uqData, uqUI);\n            this.cUqCollection[uqFullName] = cUq;\n            this.uqs.addUq(cUq.uq);\n            promiseInits.push(cUq.init());\n        }\n        await Promise.all(promiseInits);\n\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            promises.push(cUq.loadEntities());\n        }\n        let results = await Promise.all(promises);\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        if (retErrors.length === 0) {\n            retErrors.push(...this.uqs.setTuidImportsLocal());\n            if (retErrors.length === 0) {\n                return;\n            }\n        }\n        return retErrors;\n    }\n\n    protected async internalStart(param:any) {\n        if (param !== true) {\n            this.clearPrevPages();\n        }\n        await this.showMainPage();\n    }\n\n    /*\n    render(): JSX.Element {\n        return this.renderView(this.VAppMain);\n    }*/\n\n    // 如果是独立app，删去显示app之前的页面。\n    // 如果非独立app，则不删\n    protected clearPrevPages() {\n        nav.clear();\n    }\n\n    private showUnsupport(predefinedUnit: number) {\n        this.clearPrevPages();\n        this.openVPage(VUnsupportedUnit, predefinedUnit);\n    }\n\n    private async showMainPage() {\n        // #tv-RwPBwMef-23-sheet-api-108\n        let exHash = getExHash();\n        if (exHash !== undefined) {\n            let parts = exHash.split('-');\n            if (parts.length > 3) {\n                let action = parts[3];\n                // sheet_debug 表示centerUrl是debug方式的\n                if (action === 'sheet' || action === 'sheet_debug') {\n                    let uqId = Number(parts[4]);\n                    let sheetTypeId = Number(parts[5]);\n                    let sheetId = Number(parts[6]);\n                    let cUq = this.getCUqFromId(uqId);\n                    if (cUq === undefined) {\n                        alert('unknown uqId: ' + uqId);\n                        return;\n                    }\n                    this.clearPrevPages();\n                    await cUq.navSheet(sheetTypeId, sheetId);\n                    return;\n                }\n            }\n        }\n        this.openVPage(this.VAppMain);\n    }\n\n    private getCUqFromId(uqId:number): CUq {\n        for (let i in this.cUqCollection) {\n            let cUq = this.cUqCollection[i];\n            if (cUq.uq.id === uqId) return cUq;\n        }\n        return;\n    }\n}\n","export * from './CApp';\n","import * as React from 'react';\nimport { History } from '../../uq';\nimport { Page } from '../../components';\nimport { VEntity } from '../CVEntity';\nimport { CHistory, HistoryUI } from './cHistory';\n\nexport class VHistoryMain extends VEntity<History, HistoryUI, CHistory> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        History\n    </Page>;\n}\n","import { CEntity, EntityUI } from '../CVEntity';\nimport { History } from '../../uq';\nimport { VHistoryMain } from './vHistoryMain';\n\nexport interface HistoryUI extends EntityUI {\n    CHistory?: typeof CHistory;\n    main: typeof VHistoryMain,\n}\n\nexport class CHistory extends CEntity<History, HistoryUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VHistoryMain);\n    }\n\n    protected get VHistoryMain():typeof VHistoryMain {return VHistoryMain}\n}\n","export * from './cHistory';\nexport * from './vHistoryMain';\n","import * as React from 'react';\nimport { Pending } from '../../uq';\nimport { Page } from '../../components';\nimport { VEntity } from '../CVEntity';\nimport { CPending, PendingUI } from './cPending';\n\nexport class VPendingMain extends VEntity<Pending, PendingUI, CPending> {\n    async open(param?:any):Promise<void> {\n        this.openPage(this.view);\n    }\n\n    protected view = () => <Page header={this.label}>\n        pending\n    </Page>;\n}\n","import { CEntity, EntityUI } from '../CVEntity';\nimport { Pending } from '../../uq';\nimport { VPendingMain } from './vPendingMain';\n\nexport interface PendingUI extends EntityUI {\n    CPending?: typeof CPending;\n    main: typeof VPendingMain,\n}\n\nexport class CPending extends CEntity<Pending, PendingUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VPendingMain);\n    }\n\n    protected get VPendingMain():typeof VPendingMain {return VPendingMain}\n}\n","export * from './cPending';\nexport * from './vPendingMain';\n","import * as React from 'react';\nimport { Page } from '../../components';\nimport { jsonStringify } from '../tools';\nimport { VForm } from '../form';\nimport { VEntity } from '../CVEntity';\nimport { CAction, ActionUI } from './cAction';\nimport { Action } from '../../uq';\n\nexport class VActionMain extends VEntity<Action, ActionUI, CAction> {\n    protected vForm: VForm;\n    protected returns: any;\n\n    async open(param?:any):Promise<void> {\n        this.vForm = this.createForm(this.onSubmit, param);\n        this.openPage(this.mainPage);\n    }\n\n    private onSubmit = async () => {\n        let values = this.vForm.getValues();\n        this.returns = await this.controller.submit(values);\n        this.closePage();\n        this.openPage(this.resultPage);\n    }\n\n    protected mainPage = () => {\n        let {label} = this.controller;\n        return <Page header={label}>\n            {this.vForm.render('mx-3 my-2')}\n        </Page>;\n    }\n\n    protected resultPage = () => {\n        let {label} = this.controller;\n        return <Page header={label} back=\"close\">\n            完成！\n            <pre>\n                {jsonStringify(this.returns)}\n            </pre>\n        </Page>;\n    }\n}\n","import { CEntity, EntityUI } from '../CVEntity';\nimport { Action } from '../../uq';\nimport { VActionMain } from './vActionMain';\n\nexport interface ActionUI extends EntityUI {\n    CAction?: typeof CAction;\n    //main: typeof VActionMain,\n}\n\nexport class CAction extends CEntity<Action, ActionUI> {\n    protected async internalStart() {\n        await this.openVPage(this.VActionMain);\n    }\n\n    protected get VActionMain():typeof VActionMain {return VActionMain}\n\n    async submit(values:any) {\n        return this.entity.submit(values);\n    }\n\n    async submitReturns(values:any) {\n        return this.entity.submitReturns(values);\n    }\n}\n","export * from './cAction';\nexport * from './vActionMain';\n","export * from './StockInfoType';\r\nexport { CStockInfo } from './CStockInfo';\r\nexport { VStockInfo } from './VStockInfo';","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nimport {setCenterToken} from './uqApi';\nimport {WSChannel} from './wsChannel';\n\nexport const netToken = {\n    set(userId:number, token:string) {\n        setCenterToken(userId, token);\n        WSChannel.setCenterToken(token);\n    },\n    clear() {\n        setCenterToken(0, undefined);\n        WSChannel.setCenterToken(undefined);\n    }\n};\n","import * as React from 'react';\n//import _ from 'lodash';\nimport {nav} from './nav';\nimport {Page} from './page';\nimport { User, env } from '../tool';\n\nexport abstract class Controller {\n    readonly res: any;\n    readonly x: any;\n    icon: string|JSX.Element;\n    label:string;\n    readonly isDev:boolean = env.isDevelopment;\n    get user():User {return nav.user}\n    get isLogined():boolean {\n        let {user} = nav;\n        if (user === undefined) return false;\n        return user.id > 0;\n    }\n    constructor(res:any) {\n        this.res = res || {};\n        this.x = this.res.x || {};\n    }\n\n    private receiveHandlerId:number;\n    private disposer:()=>void;\n\n    private dispose() {\n        // message listener的清理\n        nav.unregisterReceiveHandler(this.receiveHandlerId);\n        this.onDispose();\n    }\n\n    protected onDispose() {\n    }\n\n    protected async openVPage<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp((this as any) as C)).open(param);\n    }\n\n    protected renderView<C extends Controller>(view: new (controller: C)=>View<C>, param?:any) {\n        return (new view((this as any) as C)).render(param);\n    }\n\n    async event(type:string, value:any) {\n        await this.onEvent(type, value);\n    }\n\n    protected async onEvent(type:string, value:any) {\n    }\n\n    protected msg(text:string) {\n        alert(text);\n    }\n    protected errorPage(header:string, err:any) {\n        this.openPage(<Page header=\"App error!\">\n            <pre>\n                {typeof err === 'string'? err : err.message}\n            </pre>\n        </Page>);\n    }\n\n    protected onMessage(message:any):Promise<void> {\n        return;\n    }\n\n    private onMessageReceive = async (message:any):Promise<void> => {\n        await this.onMessage(message);\n    }\n\n    protected async beforeStart():Promise<boolean> {\n        /*\n        console.log('this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);');\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n        console.log('return true');\n        */\n        return true;\n    }\n    protected registerReceiveHandler() {\n        this.receiveHandlerId = nav.registerReceiveHandler(this.onMessageReceive);\n    }\n\n    protected abstract internalStart(param?:any, ...params:any[]):Promise<void>;\n    async start(param?:any, ...params:any[]):Promise<void> {\n        this.disposer = this.dispose.bind(this);\n        this.registerReceiveHandler();\n        let ret = await this.beforeStart();\n        if (ret === false) return;\n        await this.internalStart(param, ...params);\n    }\n\n    get isCalling():boolean {return this._resolve_$ !== undefined}\n\n    private _resolve_$:((value:any) => void)[];\n    async call<T>(param?:any, ...params:any[]):Promise<T> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<T> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await this.start(param, ...params);\n        });\n    }\n\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\n        if (this._resolve_$ === undefined) this._resolve_$ = [];\n        return new Promise<any> (async (resolve, reject) => {\n            this._resolve_$.push(resolve);\n            await (new vp(this as any)).open(param);\n        });\n    }\n\n    returnCall(value:any) {\n        if (this._resolve_$ === undefined) return;\n        let resolve = this._resolve_$.pop();\n        if (resolve === undefined) {\n            alert('the Controller call already returned, or not called');\n            return;\n        }\n        resolve(value);\n    }\n\n    openPage(page:JSX.Element) {\n        nav.push(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    replacePage(page:JSX.Element) {\n        nav.replace(page, this.disposer);\n        this.disposer = undefined;\n    }\n\n    backPage() {\n        nav.back();\n    }\n\n    closePage(level?:number) {\n        nav.pop(level);\n    }\n\n    ceasePage(level?:number) {\n        nav.ceaseTop(level);\n    }\n\n    removeCeased() {\n        nav.removeCeased();\n    }\n\n    regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        nav.regConfirmClose(confirmClose);\n    }\n}\n\n\nexport abstract class View<C extends Controller> {\n    protected controller: C;\n    protected readonly res: any;\n    protected readonly x: any;\n\n    constructor(controller: C) {\n        this.controller = controller;\n        this.res = controller.res;\n        this.x = controller.x;\n    }\n\n    protected get isDev() {return  env.isDevelopment}\n\n    abstract render(param?:any): JSX.Element;\n\n    protected renderVm(vm: new (controller: C)=>View<C>, param?:any) {\n        return (new vm(this.controller)).render(param);\n    }\n\n    protected async openVPage(vp: new (controller: C)=>VPage<C>, param?:any):Promise<void> {\n        await (new vp(this.controller)).open(param);\n    }\n\n    protected async event(type:string, value?:any) {\n        /*\n        if (this._resolve_$_ !== undefined) {\n            await this._resolve_$_({type:type, value:value});\n            return;\n        }*/\n        await this.controller.event(type, value);\n    }\n\n    async vCall<C extends Controller>(vp: new (controller: C)=>VPage<C>, param?:any):Promise<any> {\n        return await this.controller.vCall(vp, param);\n    }\n\n    protected returnCall(value:any) {\n        this.controller.returnCall(value);\n    }\n\n    protected openPage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.openPage(React.createElement(view, param));\n    }\n\n    protected replacePage(view: React.StatelessComponent<any>, param?:any) {\n        this.controller.replacePage(React.createElement(view, param));\n    }\n\n    protected openPageElement(page: JSX.Element) {\n        this.controller.openPage(page);\n    }\n\n    protected replacePageElement(page: JSX.Element) {\n        this.controller.replacePage(page);\n    }\n\n    protected backPage() {\n        this.controller.backPage();\n    }\n\n    protected closePage(level?:number) {\n        this.controller.closePage(level);\n    }\n\n    protected ceasePage(level?:number) {\n        this.controller.ceasePage(level);\n    }\n\n    protected removeCeased() {\n        this.controller.removeCeased();\n    }\n\n    protected regConfirmClose(confirmClose: ()=>Promise<boolean>) {\n        this.controller.regConfirmClose(confirmClose);\n    }\n}\n\nexport abstract class VPage<C extends Controller> extends View<C> {\n    abstract open(param?:any):Promise<void>;\n\n    render(param?:any):JSX.Element {return null;}\n}\n\nexport type TypeVPage<C extends Controller> = new (controller: C)=>VPage<C>;\n\n","export * from './schema';\nexport * from './uiSchema';\nexport * from './toUiSelectItems';","\nexport const mobileRegex = /^[0-9]*$/;\nexport const emailRegex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n// /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/\n\nexport const EmailFieldRule = (value:any): string|string[] => {\n    if (emailRegex.test(value as string) === false) return '电子邮件格式错误';\n}\n\nexport const MobileFieldRule = (value:any): string|string[] => {\n    if (emailRegex.test(value as string) === false) return '手机格式错误';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface DropdownAction {\n    icon?: string;\n    caption?: string;\n    action?: () => void;\n}\n\nexport interface DropdownActionsProps {\n    icon?: string;\n    actions: DropdownAction[];\n    isRight?: boolean;\n}\n\nexport interface DropdownActionsState {\n    dropdownOpen: boolean;\n}\n\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    private menu: HTMLDivElement;\n    private button: HTMLElement;\n    constructor(props:DropdownActionsProps) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    componentWillMount() {\n        document.addEventListener('click', this.handleDocumentClick);\n        document.addEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleDocumentClick);\n        document.removeEventListener('touchstart', this.handleDocumentClick);\n    }\n\n    private handleDocumentClick = (evt:any) => {\n        if (this.state.dropdownOpen === false) return;\n        if (this.button && this.button.contains(evt.target)) return;\n        if (!this.menu) return;\n        //if (!this.menu.contains(evt.target)) \n        this.toggle();\n    }\n\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        let {dropdownOpen} = this.state;\n        //isOpen={this.state.dropdownOpen} toggle={this.toggle}\n        return <div className=\"dropdown\">\n            <button ref={v=>this.button=v} className=\"cursor-pointer dropdown-toggle btn btn-sm\"\n                data-toggle=\"dropdown\"\n                aria-expanded={dropdownOpen}\n                onClick={this.toggle}>\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </button>\n            <div ref={v => this.menu=v} className={classNames({\"dropdown-menu\":true, \"dropdown-menu-right\":isRight, \"show\":dropdownOpen})}>\n                {\n                    actions.map((v,index) => {\n                        let {icon, caption, action} = v;\n                        if (icon === undefined && caption === undefined) \n                            return <div className=\"dropdown-divider\" />;\n                        let i:any;\n                        if (hasIcon === true) {\n                            if (icon !== undefined) icon = 'fa-' + icon;\n                            i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                        }\n                        if (action === undefined) \n                            return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                        return <a className=\"dropdown-item\" key={index} href=\"#\" onClick={(evt:React.MouseEvent<HTMLAnchorElement>)=>{ evt.preventDefault();action()}}>{i} {caption}</a>\n                    })\n                }\n            </div>\n        </div>\n    }\n}\n\n/*\nexport class DropdownActions extends React.Component<DropdownActionsProps, DropdownActionsState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n    private toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n    render() {\n        let {icon, actions, isRight} = this.props;\n        if (isRight === undefined) isRight = true;\n        let hasIcon = actions.some(v => v.icon!==undefined);\n        return <UncontrolledButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret={true} size=\"sm\" className=\"cursor-pointer\">\n                <i className={classNames('fa', 'fa-'+(icon||'ellipsis-v'))} />\n            </DropdownToggle>\n            <DropdownMenu right={isRight}>\n                {actions.map((v,index) => {\n                    let {icon, caption, action} = v;\n                    if (icon === undefined && caption === undefined) \n                        return <div className=\"dropdown-divider\" />;\n                    let i;\n                    if (hasIcon === true) {\n                        if (icon !== undefined) icon = 'fa-' + icon;\n                        i = <><i className={classNames('fa', icon, 'fa-fw')} aria-hidden={true}></i>&nbsp; </>;\n                    }\n                    if (action === undefined) \n                        return <h6 className=\"dropdown-header\">{i} {caption}</h6>;\n                    return <DropdownItem key={index} onClick={action}>{i} {caption}</DropdownItem>\n                })}\n            </DropdownMenu>\n        </UncontrolledButtonDropdown>\n    }\n}\n*/","import * as React from 'react';\n\nexport interface EasyDateProps {\n    date: Date | number;\n}\n\nfunction renderDate(vDate:Date|number, withTime:boolean) {\n    if (!vDate) return null;\n    let date: Date;\n    switch (typeof vDate) {\n        default: date = vDate as Date; break;\n        case 'string': date = new Date(vDate); break;\n        case 'number': date = new Date((vDate as number)*1000); break;\n    }\n\n    let now = new Date();\n    let tick:number, nDate:number, _date:number, month:number, year:number, hm:string, nowYear:number;\n    let d = date;\n    tick = now.getTime() - d.getTime();\n    let hour=d.getHours(), minute=d.getMinutes();\n    nDate=now.getDate();\n    _date=d.getDate();\n    month=d.getMonth()+1;\n    year=d.getFullYear();\n    nowYear = now.getFullYear();\n    hm = withTime === true? ' ' + hour + ((minute<10?':0':':') + minute) : '';\n\n    if (tick < -24*3600*1000) {\n        if (year === nowYear)\n            return month+'月'+_date+'日' + hm;\n        else\n            return year+'年'+month+'月'+_date+'日' + hm;\n    }\n    if (tick < 24*3600*1000) {\n        return _date!==nDate? \n            (tick < 0? '明天 ' : '昨天 ') + hm \n            : withTime===true? hm : '今天';\n    }\n    if (year === nowYear) {\n        return month+'月'+_date+'日';\n    }\n    return year+'年'+month+'月'+_date+'日';\n}\n\n\nexport class EasyDate extends React.Component<EasyDateProps> {\n    render() {\n        return renderDate(this.props.date, false);\n    }\n}\n\nexport class EasyTime extends React.Component<EasyDateProps> {\n    render() {\n        return renderDate(this.props.date, true);\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Image } from '.';\n\nexport interface MediaProps {\n    icon: string;\n    main: string|JSX.Element;\n    discription?: string | JSX.Element;\n    px?: number;\n    py?: number;\n}\n\nexport class Media extends React.Component<MediaProps> {\n    render() {\n        let {icon, main, discription, px, py} = this.props;\n        let disp:any;\n        if (typeof discription === 'string')\n            disp = <div>{discription}</div>;\n        else\n            disp = discription;\n        let cn = classNames(\n            'media', \n            px===undefined? 'px-0':'px-'+px, \n            py===undefined? 'py-2':'py-'+py);\n        return <div className={cn}>\n            <Image className=\"mr-3 w-4c h-4c\" src={icon} />\n            <div className=\"media-body\">\n                <h5 className=\"mt-0\">{main}</h5>\n                {disp}\n            </div>\n        </div>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\n\nexport interface SearchBoxProps {\n    className?: string;\n    label?: string;\n    initKey?: string;\n    placeholder?: string;\n    buttonText?: string;\n    maxLength?: number;\n    size?: 'sm' | 'md' | 'lg';\n    inputClassName?: string;\n    onSearch: (key:string)=>Promise<void>;\n    onFocus?: ()=>void;\n    allowEmptySearch?: boolean;\n}\n\n/*\nexport interface SearchBoxState {\n    disabled: boolean;\n}*/\n\nexport class SearchBox extends React.Component<SearchBoxProps> { //}, SearchBoxState> {\n    private input: HTMLInputElement;\n    private key: string = null;\n    @observable private disabled: boolean;\n\n    private onChange = (evt: React.ChangeEvent<any>) => {\n        this.key = evt.target.value;\n        if (this.key !== undefined) {\n            this.key = this.key.trim();\n            if (this.key === '') this.key = undefined;\n        }\n        if (this.props.allowEmptySearch !== true) {\n            this.disabled = !this.key;\n        }\n    }\n    private onSubmit = async (evt: React.FormEvent<any>) => {\n        evt.preventDefault();\n        if (this.key === null) this.key = this.props.initKey || '';\n        if (this.props.allowEmptySearch !== true) {\n            if (!this.key) return;\n            if (this.input) this.input.disabled = true;\n        }\n        await this.props.onSearch(this.key);\n        if (this.input) this.input.disabled = false;\n    }\n    clear() {\n        if (this.input) this.input.value = '';\n    }\n    render() {\n        let {className, inputClassName, onFocus,\n            label, placeholder, buttonText, maxLength, size} = this.props;\n        let inputSize:string;\n        switch (size) {\n            default:\n            case 'sm': inputSize = 'input-group-sm'; break;\n            case 'md': inputSize = 'input-group-md'; break;\n            case 'lg': inputSize = 'input-group-lg'; break;\n        }\n        let lab:any;\n        if (label !== undefined) lab = <label className=\"input-group-addon\">{label}</label>;\n        return <form className={className} onSubmit={this.onSubmit} >\n            <div className={classNames(\"input-group\", inputSize)}>\n                {lab}\n                <input ref={v=>this.input=v} onChange={this.onChange}\n                    type=\"text\"\n                    name=\"key\"\n                    onFocus={onFocus}\n                    className={classNames('form-control', inputClassName || 'border-primary')}\n                    placeholder={placeholder}\n                    defaultValue={this.props.initKey}\n                    maxLength={maxLength} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\"\n                        type=\"submit\"\n                        disabled={this.disabled}>\n                        <i className='fa fa-search' />\n                        <i className=\"fa\"/>\n                        {buttonText}\n                    </button>\n                </div>\n            </div>\n        </form>;\n    }\n}\n","import { UqMan, TuidModify } from '../uqMan';\nimport { Tuid } from \"./tuid\";\n\ninterface Modify {\n    id: number;\n    entity: string;\n    key: string;\n}\n\nexport class TuidsCache {\n    private readonly uq: UqMan;\n    //private readonly uqApi: UqApi;\n    //private readonly tuids: {[name:string]: Tuid};\n    private modifyMax: TuidModify;\n    private cacheTimer: any;\n    constructor(uq: UqMan) {\n        this.uq = uq;\n        //this.uqApi = uq.uqApi;\n        //this.tuids = uq.tuids;\n    }\n\n    cacheTuids(defer:number) {\n        this.clearCacheTimer();\n        this.cacheTimer = setTimeout(this.loadIds, defer);\n    }\n    private clearCacheTimer() {\n        if (this.cacheTimer === undefined) return;\n        clearTimeout(this.cacheTimer);\n        this.cacheTimer = undefined;\n    }\n    private loadIds = () => {\n        this.clearCacheTimer();\n        let {tuids} = this.uq;\n        for (let i in tuids) {\n            let tuid = tuids[i];\n            tuid.cacheIds();\n        }\n    }\n    \n    pullModify(modifyMax:number) {\n        if (modifyMax === undefined) return;\n        let now = Math.floor(Date.now() / 1000);\n        if (this.modifyMax === undefined) {\n            this.modifyMax = this.uq.localModifyMax.get();\n            if (this.modifyMax === undefined) {\n                this.modifyMax = {\n                    max: modifyMax,\n                    seconds: now,\n                };\n                this.uq.localModifyMax.set(this.modifyMax);\n            }\n        }\n        let {max, seconds} = this.modifyMax;\n        let lockGap = 3600;\n        if (now - seconds < lockGap) return;\n        if (modifyMax <= max) return;\n        let tuidCached:string[] = [];\n        let {tuids} = this.uq;\n        for (let i in tuids) {\n            //if (tuids[i].cached === true) \n            tuidCached.push(i);\n        }\n        if (tuidCached.length === 0) return;\n        this.modifyMax.seconds = now;\n        this.innerPullModify(tuidCached.join('\\t'));\n    }\n\n    private async innerPullModify(tuidLists:string):Promise<void> {\n        let {uqApi, tuids} = this.uq;\n        let {max} = this.modifyMax;\n        let ret:{queue:Modify[], queueMax:number} = await uqApi.queueModify(max, 30, tuidLists);\n        let group:{[entity:string]: {tuid:Tuid; ids: string[]}} = {};\n        let modifyMax:number = 0;\n        for (let modify of ret.queue) {\n            let {id, entity, key} = modify;\n            let tuid = tuids[entity];\n            if (tuid === undefined) continue;\n            let item = group[entity];\n            if (item === undefined) {\n                item = group[entity] = {tuid: tuid, ids:[]};\n            }\n            item.ids.push(key);\n            if (id > modifyMax) modifyMax = id;\n        }\n        for (let i in group) {\n            let {tuid, ids} = group[i];\n            await tuid.modifyIds(ids);\n        }\n        let now = Math.floor(Date.now() / 1000);\n        this.modifyMax = {\n            max: modifyMax,\n            seconds: now,\n        }\n        this.uq.localModifyMax.set(this.modifyMax);\n    }\n}\n","import { LocalMap, LocalCache, env } from '../tool';\nimport { UqData } from '../net';\nimport { UqMan } from './uqMan';\nimport { TuidImport, TuidInner } from './tuid';\n\nexport interface TVs {\n    [uqName:string]: {\n        [tuidName: string]: (values: any) => JSX.Element;\n    }\n}\n\nexport class UQsMan {\n    private collection: {[uqName: string]: UqMan};\n    private readonly tvs: TVs;\n\n    readonly name: string;\n    readonly appOwner: string;\n    readonly appName: string;\n    readonly localMap: LocalMap;\n    readonly localData: LocalCache;\n    id: number;\n\n    constructor(tonvaAppName:string, tvs:TVs) {\n        this.tvs = tvs || {};\n        this.buildTVs();\n        this.collection = {};\n        let parts = tonvaAppName.split('/');\n        if (parts.length !== 2) {\n            throw new Error('tonvaApp name must be / separated, owner/app');\n        }\n        this.appOwner = parts[0];\n        this.appName = parts[1];\n        this.localMap = env.localDb.map(tonvaAppName);\n        this.localData = this.localMap.child('uqData');\n    }\n\n    // to be removed in the future\n    addUq(uq: UqMan) {\n        this.collection[uq.name] = uq;\n    }\n\n    private buildTVs() {\n        for (let i in this.tvs) {\n            let uqTVs = this.tvs[i];\n            if (uqTVs === undefined) continue;\n            let l = i.toLowerCase();\n            if (l === i) continue;\n            this.tvs[l] = uqTVs;\n            for (let j in uqTVs) {\n                let en = uqTVs[j];\n                if (en === undefined) continue;\n                let lj = j.toLowerCase();\n                if (lj === j) continue;\n                uqTVs[lj] = en;\n            }\n        }\n    }\n\n    async init(uqsData:UqData[]):Promise<void> {\n        let promiseInits: PromiseLike<void>[] = [];\n        for (let uqData of uqsData) {\n            let {uqOwner, uqName} = uqData;\n            let uqFullName = uqOwner + '/' + uqName;\n            //let uqUI = this.ui.uqs[uqFullName] as UqUI || {};\n            //let cUq = this.newCUq(uqData, uqUI);\n            //this.cUqCollection[uqFullName] = cUq;\n            //this.uqs.addUq(cUq.uq);\n            let uq = new UqMan(this, uqData, undefined, this.tvs[uqFullName] || this.tvs[uqName]);\n            this.collection[uqFullName] = uq;\n            let lower = uqFullName.toLowerCase();\n            if (lower !== uqFullName) {\n                this.collection[lower] = uq;\n            }\n            promiseInits.push(uq.init());\n        }\n        await Promise.all(promiseInits);\n    }\n\n    async load(): Promise<string[]> {\n        let retErrors:string[] = [];\n        let promises: PromiseLike<string>[] = [];\n        for (let i in this.collection) {\n            let uq = this.collection[i];\n            promises.push(uq.loadEntities());\n        }\n        let results = await Promise.all(promises);\n        for (let result of results)\n        {\n            let retError = result; // await cUq.loadSchema();\n            if (retError !== undefined) {\n                retErrors.push(retError);\n                continue;\n            }\n        }\n        return retErrors;\n    }\n\n    buildUQs(): any {\n        let uqs = {};\n        for (let i in this.collection) {\n            let uqMan = this.collection[i];\n            //let n = uqMan.name;\n            let uqName = uqMan.uqName;\n            let l = uqName.toLowerCase();\n            let entities = uqMan.entities;\n            let keys = Object.keys(entities);\n            for (let key of keys) {\n                let entity = entities[key];\n                let {name, sName} = entity;\n                if (name !== sName) entities[sName] = entity;\n            }\n            uqs[i] = entities;\n            uqs[uqName] = entities;\n            if (l !== uqName) uqs[l] = entities;\n        }\n        return uqs;\n    }\n\n    setTuidImportsLocal():string[] {\n        let ret:string[] = [];\n        for (let i in this.collection) {\n            let uq = this.collection[i];\n            for (let tuid of uq.tuidArr) {\n                if (tuid.isImport === true) {\n                    let error = this.setInner(tuid as TuidImport);\n                    if (error) ret.push(error);\n                }\n            }\n        }\n        return ret;\n    }\n\n    private setInner(tuidImport: TuidImport):string {\n        let {from} = tuidImport;\n        let fromName = from.owner + '/' + from.uq;\n        let uq = this.collection[fromName];\n        if (uq === undefined) {\n            //debugger;\n            return `setInner(tuidImport: TuidImport): uq ${fromName} is not loaded`;\n        }\n        let iName = tuidImport.name\n        let tuid = uq.tuid(iName);\n        if (tuid === undefined) {\n            //debugger;\n            return `setInner(tuidImport: TuidImport): uq ${fromName} has no Tuid ${iName}`;\n        }\n        if (tuid.isImport === true) {\n            //debugger;\n            return `setInner(tuidImport: TuidImport): uq ${fromName} Tuid ${iName} is import`;\n        }\n        tuidImport.setFrom(tuid as TuidInner);\n    }\n}\n","export * from './app';\nexport * from './startApp';\nexport * from './cUq';\nexport * from './action';\nexport * from './tuid';\nexport * from './sheet';\nexport * from './query';\nexport * from './map';\nexport * from './history';\nexport * from './pending';\nexport * from './form/viewModel';\nexport * from './form';\nexport * from './formUI';\nexport * from './ControllerUq';\nexport * from './CVEntity';\nexport * from './link';\nexport * from './icons';\n","import _ from 'lodash';\nimport { Context } from '../context';\nimport { FormRes } from '../formRes';\n\nexport abstract class Rule {\n    abstract check(defy:string[], value:any):void;\n}\n\nexport type ContextRule = (context:Context)=>{[target:string]:string[]|string} | string[] | string;\nexport type FieldRule = (value:any) => string[] | string;\n\nexport class RuleCustom extends Rule {\n    private func: FieldRule;\n    constructor(func: FieldRule) {\n        super();\n        this.func = func;\n    }\n    check(defy:string[], value:any) {\n        let ret = this.func(value);\n        if (ret === undefined) return;\n        switch (typeof ret) {\n            case 'undefined': return;\n            case 'string': defy.push(ret as string); return;\n            default: defy.push(...ret); return;\n        }        \n    }\n}\n\nexport abstract class RulePredefined extends Rule {\n    protected res: FormRes;\n    constructor(res: FormRes) {\n        super();\n        this.res = res;\n    }\n}\n\nexport class RuleRequired extends RulePredefined {\n    check(defy:string[], value:any) {\n        switch (typeof value) {\n            default:\n            case 'boolean': return;\n            case 'object':\n                if (value !== null) return;\n                break;\n            case 'string':\n                if ((value as string).trim().length > 0) return;\n                break;\n            case 'number':\n                if (isNaN(value as number) === false) return;\n                break;\n            case 'undefined':\n                break;\n        }\n        defy.push(this.res.required);\n    }\n}\n\nexport class RuleNum extends RulePredefined {\n    private minMsg: _.TemplateExecutor;\n    private maxMsg: _.TemplateExecutor;\n    protected min: number;\n    protected max: number\n    constructor(res: FormRes, min?: number, max?: number) {\n        super(res);\n        this.minMsg = _.template(res.min);\n        this.maxMsg = _.template(res.max);\n        this.min = min;\n        this.max = max;\n    }\n    check(defy:string[], value:any) {\n        if (value === undefined || value === null) return;\n        let n = Number(value);\n        if (isNaN(n) === true) {\n            defy.push(this.res.number);\n        }\n        else {\n            this.checkMore(defy, n);\n        }\n    }\n\n    protected checkMore(defy:string[], value: number) {\n        if (this.min !== undefined && Number(value) < this.min) {\n            defy.push(this.minMsg({min:this.min}));\n        }\n        if (this.max !== undefined && Number(value) > this.max) {\n            defy.push(this.maxMsg({max:this.max}));\n        }\n    }\n}\n\nexport class RuleInt extends RuleNum {\n    protected checkMore(defy:string[], n: number) {\n        super.checkMore(defy, n);\n        if (Number.isInteger(n) === false) {\n            defy.push(this.res.integer);\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiItem, ChangingHandler, ChangedHandler } from '../../schema';\nimport { FieldProps } from '../field';\nimport { Context } from '../context';\nimport { ItemSchema } from '../../schema';\nimport { Rule, RuleRequired, RuleCustom, FieldRule } from '../rules';\nimport { computed, observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nexport abstract class Widget {\n    name: string;\n    protected context: Context;\n    protected fieldProps:FieldProps;\n    protected children: React.ReactNode;\n    protected itemSchema: ItemSchema;\n    protected ui: UiItem;\n    protected defaultValue: any;\n    protected value: any;\n    protected rules: Rule[];\n    @observable errors: string[] = [];\n    @observable protected contextErrors: string[] = [];\n    @computed protected get hasError():boolean {return (this.errors.length + this.contextErrors.length)>0}\n    protected readOnly:boolean;\n    protected disabled:boolean;\n    @observable visible:boolean;\n\n    constructor(context:Context, itemSchema:ItemSchema, fieldProps:FieldProps, children: React.ReactNode) {\n        this.context = context;\n        let {name} = itemSchema;\n        this.name = name;\n        this.itemSchema = itemSchema;\n        this.fieldProps = fieldProps;\n        this.children = children;\n        this.ui = context.getUiItem(name);\n        if (this.ui === undefined) {\n            this.readOnly = false;\n            this.disabled = false;\n            this.visible = true;\n        }\n        else {\n            let {readOnly, disabled, visible} = this.ui;\n            this.readOnly = (readOnly === true);\n            this.disabled = (disabled === true);\n            this.visible = !(visible === false);            \n        }\n        this.value = this.defaultValue =  context.getValue(name); //defaultValue;\n        this.init();\n    }\n\n    protected init() {\n        this.rules = [];\n        if (this.itemSchema.required === true) {\n            this.rules.push(new RuleRequired(this.context.form.res));\n        }\n        this.buildRules();\n        if (this.ui === undefined) return;\n        let {rules} = this.ui;\n        if (rules === undefined) return;\n        if (Array.isArray(rules) === false) {\n            this.rules.push(new RuleCustom(rules as FieldRule));\n            return;\n        }\n        for (let rule of rules as FieldRule[]) {\n            this.rules.push(new RuleCustom(rule));\n        }\n    }\n\n    protected buildRules() {\n    }\n\n    checkRules() {\n        let defy:string[] = [];\n        for (let r of this.rules) r.check(defy, this.value);\n        if (defy.length === 0) {\n            this.context.removeErrorWidget(this);\n        }\n        else {\n            this.context.addErrorWidget(this);\n            this.errors.push(...defy);\n        }\n    }\n\n    @computed get isOk() {\n        return this.errors.length ===0;\n    }\n\n    setError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.errors.push(err);\n        else this.errors.push(...err);\n    }\n\n    setContextError(err:string | string[]) {\n        if (err === undefined) return;\n        if (typeof err === 'string') this.contextErrors.push(err);\n        else this.contextErrors.push(...err);\n    }\n\n    clearError() {\n        this.errors.splice(0);\n    }\n\n    clearContextError() {\n        this.contextErrors.splice(0);\n    }\n\n    protected parse(value:any):any {return value}\n\n    protected setElementValue(value:any) {}\n    protected setDataValue(value:any) {\n        if (this.isChanging === true) return;\n        this.context.initData[this.name] = this.value = this.parse(value);\n    }\n\n    setValue(value:any) {\n        if (this.isChanging === true) return;\n        //this.setDataValue(value);\n        //this.setElementValue(value);\n        this.changeValue(value, false);\n    }\n\n    getValue() {\n        return this.context.getValue(this.name);\n    }\n\n    getReadOnly():boolean {return this.readOnly}\n    getDisabled():boolean {return this.disabled}\n    getVisible():boolean {return this.visible}\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}\n    setVisible(value:boolean) {this.visible = value}\n\n    private isChanging: boolean;\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n    }\n\n    protected changeValue(newValue: any, fromElement: boolean) {\n        let prev = this.value;\n        let onChanging: ChangingHandler;\n        let onChanged: ChangedHandler;\n        if (this.ui !== undefined) {\n            onChanging = this.ui.onChanging;\n            onChanged = this.ui.onChanged;\n        }\n        let allowChange = true;\n        if (onChanging !== undefined) {\n            this.isChanging = true;\n            allowChange = onChanging(this.context, this.value, prev);\n            this.isChanging = false;\n        }\n        if (allowChange === true) {\n            this.setDataValue(newValue);\n            if (fromElement !== true) this.setElementValue(newValue);\n            if (onChanged !== undefined) {\n                this.isChanging = true;\n                onChanged(this.context, this.value, prev);\n                this.isChanging = false;\n            }\n        }\n    }\n\n    protected get className():string {\n        let fieldClass:string;\n        if (this.context.inNode === false) fieldClass = 'form-control';\n        return classNames(fieldClass, this.context.form.FieldClass, this.ui && this.ui.className);\n    }\n\n    protected abstract render():JSX.Element;\n\n    protected renderBody():JSX.Element {\n        let elDiscription;\n        if (this.hasError === false && this.ui) {\n            let {discription, discriptionClassName} = this.ui;\n            if (discriptionClassName === undefined) discriptionClassName = 'small text-muted';\n            elDiscription = <span className={discriptionClassName}>\n                {discription}\n            </span>;\n        }\n        return <>\n            {this.render()}\n            {elDiscription}\n        </>;\n    }\n\n    container = observer(():JSX.Element => {\n        if (this.visible === false) return null;\n        let {form, inNode} = this.context;\n        if (inNode === true) return this.render();\n        let label:any = this.label;\n        if (this.itemSchema.required === true && form.props.requiredFlag !== false) {\n            if (label !== null) label = <>{label}&nbsp;<span className=\"text-danger\">*</span></>;\n        }\n        return form.FieldContainer(label, this.renderBody());\n    })\n\n    protected get label():string {\n        let label:any;\n        if (this.ui === undefined) {\n            label = this.name;\n        }\n        else {\n            let uiLabel = this.ui.label;\n            if (uiLabel === null) label = null;\n            else label = uiLabel || this.name;\n        }\n        return label;\n    }\n\n    protected renderTemplet():JSX.Element | undefined {\n        if (this.children !== undefined) {\n            return <>{this.children}</>;\n        }\n        if (this.ui === undefined) return undefined;\n        let {Templet} = this.ui;\n        if (typeof Templet === 'function') return Templet(this.value);\n        return Templet;\n    }\n\n    protected renderErrors() {\n        let errorList:string[] = [...this.errors, ...this.contextErrors];\n        if (errorList.length === 0) return null;\n        let {inNode} = this.context;\n        let tag = inNode === true? 'span' : 'div';\n        return errorList.map(err => React.createElement(tag, \n            {\n                key: err, \n                className: 'text-danger d-inline-block my-2 ml-3'\n            },\n            <><i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}</>\n        ));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextItem, StringSchema } from '../../schema';\n\nexport class TextWidget extends Widget {\n    protected inputType = 'text';\n    protected ui: UiTextItem;\n    protected input: HTMLInputElement;\n\n    protected setElementValue(value:any) {\n        if (this.input === null) return;\n        this.input.value = value;\n    }\n    protected get placeholder() {return (this.ui && this.ui.placeholder) || this.name}\n    protected onKeyDown = async (evt:React.KeyboardEvent<HTMLInputElement>) => {\n        this.internalOnKeyDown(evt);\n        if (evt.keyCode !== 13) return;\n        let {onEnter} = this.context.form.props;\n        if (onEnter === undefined) return;\n\n        this.changeValue(evt.currentTarget.value, true);\n\n        //this.checkRules();\n        //this.context.checkContextRules();\n        this.input.blur();\n\n        let ret = await onEnter(this.name, this.context);\n        if (ret !== undefined) {\n            this.context.setError(this.name, ret);\n        }\n    }\n\n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n    }\n\n    protected onBlur(evt: React.FocusEvent<any>) {\n        this.onInputChange(evt);\n        this.checkRules();\n        this.context.checkContextRules();\n    }\n    protected onFocus(evt: React.FocusEvent<any>) {\n        this.clearError();\n        this.context.removeErrorWidget(this);\n        this.context.clearErrors();\n    }\n    protected onChange(evt: React.ChangeEvent<any>) {\n    }\n\n    setReadOnly(value:boolean) {\n        if (this.input === null) return;\n        this.input.readOnly = this.readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        if (this.input === null) return;\n        this.input.disabled = this.disabled = value;\n    }\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {\n            //'form-control': true,\n        };\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, cn)}\n            type={this.inputType}\n            defaultValue={this.value}\n            onChange={(evt: React.ChangeEvent<any>) => this.onChange(evt)}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            disabled={this.disabled}\n            onKeyDown = {this.onKeyDown}\n            onFocus = {(evt: React.FocusEvent<any>) => this.onFocus(evt)}\n            onBlur={(evt: React.FocusEvent<any>) => this.onBlur(evt)}\n            maxLength={(this.itemSchema as StringSchema).maxLength} />\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiTextAreaItem } from '../../schema';\nimport { StringSchema } from '../../schema';\n\nexport class TextAreaWidget extends Widget {\n    protected itemSchema: StringSchema;\n    protected input: HTMLTextAreaElement;\n    protected ui: UiTextAreaItem;\n\n    protected setElementValue(value:any) {this.input.value = value}\n    protected onInputChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setValue(evt.currentTarget.value);\n    }\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let renderTemplet = this.renderTemplet();\n        if (renderTemplet !== undefined) return renderTemplet;\n        let cn = {};\n        if (this.hasError === true) {\n            cn['is-invalid'] = true;\n        }\n        else {\n            cn['required-item'] = this.itemSchema.required === true;\n        }\n        return <textarea ref={(input) => this.input=input} \n            className={classNames(this.className, cn)}\n            rows={this.ui && this.ui.rows}\n            maxLength={this.itemSchema.maxLength}\n            defaultValue={this.defaultValue} onChange={this.onInputChange} />\n    }\n}\n","//import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class PasswordWidget extends TextWidget {\n    protected inputType = 'password';\n}\n\nexport class UrlWidget extends TextWidget {\n    protected inputType = 'url';\n}\n\nexport class EmailWidget extends TextWidget {\n    protected inputType = 'email';\n}\n","//import * as React from 'react';\nimport { TextWidget } from './textWidget';\nimport { RuleNum, RuleInt } from '../rules';\nimport { NumBaseSchema } from '../../schema';\n\nexport class NumberWidget extends TextWidget {\n    protected inputType = 'number';\n    protected itemSchema: NumBaseSchema;\n\n    protected buildRules() {\n        super.buildRules();\n        let res = this.context.form.res;\n        let {min, max} = this.itemSchema;\n        this.rules.push(\n            this.itemSchema.type === 'integer'?\n                new RuleNum(res, min, max) :\n                new RuleInt(res, min, max)\n        );\n        /*\n        if (this.itemSchema.type === 'integer') {\n            this.rules.push(new RuleInt);\n        }\n        let {min, max} = this.itemSchema;\n        if (min !== undefined) this.rules.push(new RuleMin(min));\n        if (max !== undefined) this.rules.push(new RuleMax(max));\n        */\n    }\n\n    protected parse(value:any):any {\n        if (value === undefined || value === null) return;\n        return Number(value);\n    }\n}\n","import * as React from 'react';\nimport { NumberWidget } from './numberWidget';\n\nexport class UpdownWidget extends NumberWidget {\n    protected inputType = 'number';\n\n    protected isValidKey(key:number):boolean {\n        return key===46 || key===8 || key===37 || key===39\n            || (key>=48 && key<=57)\n            || (key>=96 && key<=105)\n            || key===109 || key===189;\n    }\n    \n    protected internalOnKeyDown(evt:React.KeyboardEvent<HTMLInputElement>) {\n        let key = evt.keyCode;\n        window.event.returnValue = this.isValidKey(key);\n    }\n}\n","//import * as React from 'react';\nimport { TextWidget } from './textWidget';\n\nexport class DateWidget extends TextWidget {\n    protected inputType = 'date';\n}\n\nexport class DateTimeWidget extends TextWidget {\n    protected inputType = 'datetime';\n}\n\nexport class TimeWidget extends TextWidget {\n    protected inputType = 'time';\n}\n\nexport class MonthWidget extends TextWidget {\n    protected inputType = 'month';\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiCheckItem } from '../../schema';\n\nexport class CheckBoxWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiCheckItem;\n    protected trueValue: any;\n    protected falseValue: any;\n\n    protected init() {\n        super.init();\n        if (this.ui !== undefined) {\n            let {trueValue, falseValue} = this.ui;\n            if (trueValue === undefined) this.trueValue = true;\n            else this.trueValue = trueValue;\n            if (falseValue === undefined) this.falseValue = false;\n            else this.falseValue = falseValue;\n        }\n        else {\n            this.trueValue = true;\n            this.falseValue = false;\n        }\n    }\n    protected setElementValue(value:any) {\n        this.input.checked = value === this.trueValue;\n    }\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    protected onInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.setDataValue(evt.target.checked === true? this.trueValue : this.falseValue);\n    }\n\n    protected onClick = () => {\n        this.context.clearErrors();\n    }\n\n    render() {\n        let cn = classNames(this.className, 'form-check-inline p-0');\n        let input = <input\n            ref={(input)=>this.input = input}\n            className={'align-self-center'}\n            type=\"checkbox\"\n            defaultChecked={this.defaultValue} \n            onChange={this.onInputChange}\n            onClick={this.onClick} />;\n        if (this.context.inNode === true) {\n            return <label className={cn}>\n                {input} {(this.ui&&this.ui.label) || this.name}\n            </label>\n        }\n        else {\n            return <div className={cn}>\n                <label className=\"w-100 h-100 mb-0 d-flex justify-content-center\">{input}</label>\n            </div>;\n        }\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { observable } from 'mobx';\nimport { Widget } from './widget';\nimport { UiSelect } from '../../schema';\n\nexport class SelectWidget extends Widget {\n    protected select: HTMLSelectElement;\n    protected ui: UiSelect;\n    @observable protected readOnly: boolean;\n\n    protected setElementValue(value:any) {this.select.value = value}\n    protected onInputChange = (evt:React.ChangeEvent<HTMLSelectElement>) => {\n        this.setDataValue(evt.target.value);\n    }\n\n    setReadOnly(value:boolean) {this.select.disabled = this.readOnly = !value}\n    setDisabled(value:boolean) {this.select.disabled = this.disabled = value}\n\n    render() {\n        if (this.readOnly === true) {\n            let option = this.ui.list.find(v => v.value === this.value);\n            let title = (option === undefined)? '(???)' : option.title;\n            return <span className=\"form-control w-min-6c\">{title}</span>;\n        }\n        return <select\n            ref={(select)=>this.select = select}\n            className={classNames(this.className, 'form-control')}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}>\n            {this.ui.list.map((v,index) => {\n                let {title, value} = v;\n                let cn:string;\n                //if (value === undefined || value === null) cn = 'text-light small';\n                //else cn = 'text-danger';\n                return <option className={cn} key={index} value={value}>{title || value}</option>\n            })}\n        </select>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n//import { TextWidget } from './textWidget';\nimport { Widget } from './widget';\nimport { UiRadio } from '../../schema';\nimport { RowContext } from '../context';\n\n\nconst radioStyle:React.CSSProperties = {height: 'auto'};\n\nexport class RadioWidget extends Widget {\n    protected inputs: {[index:number]: HTMLInputElement} = {};\n    protected ui: UiRadio;\n\n    protected setElementValue(value:any) {\n        for (let i in this.inputs) {\n            let input = this.inputs[i];\n            input.checked = value === input.value;\n        }\n    }\n    setReadOnly(value:boolean) {\n        this.readOnly = value;\n        for (let i in this.inputs) this.inputs[i].readOnly = value;\n    }\n    setDisabled(value:boolean) {\n        this.disabled = value;\n        for (let i in this.inputs) this.inputs[i].disabled = value\n    }\n\n    /*\n    protected onInputChange = (evt: React.ChangeEvent<any>) => {\n        this.changeValue(evt.target.value, true);\n    }\n    */\n\n    render() {\n        let {defaultValue, list} = this.ui;\n        let {isRow} = this.context;\n        let rowKey:number;\n        if (isRow === true) {\n            rowKey = (this.context as RowContext).rowKey;\n        }\n        let cn = classNames(this.className, 'py-0');\n        return <span className={cn} style={radioStyle}>\n                {list.map((v,index) => {\n                    let {value, title} = v;\n                    let name = this.name;\n                    if (rowKey !== undefined) name += '-' + rowKey;\n                    return <label key={index} className=\"form-radio-inline\">\n                        <input ref={input=>this.inputs[index]=input} type=\"radio\" name={name}\n                            value={value} defaultChecked={(this.defaultValue || defaultValue)===value}\n                            onChange={this.onInputChange} />\n                        {title || value}\n                    </label>;\n                    //</span>\n                })}\n            </span>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { UiRange } from '../../schema';\nimport { Widget } from './widget';\n\nexport class RangeWidget extends Widget {\n    protected inputType = 'range';\n    protected input: HTMLInputElement;\n    protected ui: UiRange;\n\n    setReadOnly(value:boolean) {this.input.readOnly = this.readOnly = value}\n    setDisabled(value:boolean) {this.input.disabled = this.disabled = value}\n\n    render() {\n        let {min, max, step} = this.ui;\n        return <><input ref={input=>this.input = input}\n            className={classNames(this.className, 'form-control', 'w-min-6c')}\n            type={this.inputType}\n            defaultValue={this.defaultValue} \n            onChange={this.onInputChange}\n            max={max}\n            min={min}\n            step={step}\n            />\n        </>;\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiIdItem, TempletType } from '../../schema';\nimport { observable } from 'mobx';\n\nexport class IdWidget extends Widget {\n    protected ui: UiIdItem;\n    @observable protected value:number;\n    setReadOnly(value:boolean) {this.readOnly = value}\n    setDisabled(value:boolean) {this.disabled = value}    \n\n    protected onClick = async () => {\n        let pickId = this.ui && this.ui.pickId;\n        if (pickId === undefined) {\n            alert('no pickId defined!');\n            return;\n        }\n        let id = await pickId(this.context, this.name, this.value);        \n        this.setDataValue(id);\n        this.clearError();\n        this.clearContextError();\n        this.checkRules();\n    }\n\n    render() {\n        let placeholder:string|JSX.Element, Templet: TempletType;\n        if (this.ui !== undefined) {\n            placeholder = this.ui.placeholder;\n            Templet = this.ui.Templet;\n        }\n        let cn = {\n            'form-control': true,\n            'required-item': this.itemSchema.required === true,\n            'cursor-pointer': true,\n            'is-invalid': this.hasError,\n        };\n        let content;\n        if (this.value === undefined || this.value === null) {\n            content = placeholder || 'placeholder';\n            cn['text-muted'] = true;\n        }\n        else if (Templet === undefined) {\n            content = <>{this.value}</>;\n        }\n        else if (typeof Templet === 'function') {\n            content = Templet(this.value);\n        }\n        else {\n            content = Templet;\n        }\n        return <>\n            <div className={classNames(cn)} onClick={this.onClick}>{content}</div>\n            {this.renderErrors()}\n        </>;\n    }\n}\n","import * as React from 'react';\nimport { DataType } from '../../schema';\nimport { UiType } from '../../schema';\n\nexport const Unknown = (dataType:DataType, uiType:UiType, dataTypes:DataType[]) => {\n    return <span className=\"text-danger\">!!data type {dataType} only support {(dataTypes || []).join(', ')}, can't use ui {uiType}!!</span>;\n};\n","import * as React from 'react';\nimport { UiButton, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { Widget } from './widget';\nimport { observer } from 'mobx-react';\n\nexport class ButtonWidget extends Widget {\n    protected ui: UiButton;\n\n    protected onClick = async () => {\n        this.clearError();\n        this.clearContextError();\n        let {name, type} = this.itemSchema;\n        if (type === 'submit') {\n            await this.context.submit(name);\n        }\n        /*\n        let {onButtonClick} = this.context.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${name} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(name, this.context);\n        if (ret === undefined) return;\n        this.context.setError(name, ret);\n        */\n    }\n\n    private observerRender = observer(() => {\n        let {name, type} = this.itemSchema;\n        let Templet:TempletType, cn:string, caption:string;\n        if (this.ui !== undefined) {\n            let {widget:widgetType} = this.ui;\n            if (widgetType !== 'button') return Unknown(type, widgetType, ['button']);\n            Templet = this.ui.Templet;\n            cn = this.ui.className;\n            caption = this.ui.label;\n        }\n        let {form, hasError} = this.context;\n        let context = this.context;\n        let disabled = type==='submit' && hasError;\n        let content:any;\n        if (this.children !== undefined) content = this.children;\n        else if (typeof Templet === 'function') content = Templet();\n        else if (Templet !== undefined) content = Templet;\n        else content = caption; \n        let button = <button \n            className={cn} \n            type=\"button\"\n            disabled={disabled}\n            onClick={this.onClick}>\n            {content || name}\n        </button>;\n        if (context.inNode === true) return <>{button}{this.renderErrors()}</>;\n        return <div className={form.ButtonClass}>\n            <div>{this.renderErrors()}</div>\n            {button}\n        </div>;\n    });\n    \n    protected get label():string {return null}\n\n    render() {\n        return <this.observerRender />\n    }\n}\n","import * as React from 'react';\nimport { Form } from './form';\nimport { UiSchema, UiArr, UiItem } from '../schema';\nimport { ArrSchema, ItemSchema } from '../schema';\nimport { Widget } from './widgets/widget';\n//import { ArrRow } from './arrRow';\nimport { observable, computed } from 'mobx';\nimport { ContextRule } from './rules';\nimport { observer } from 'mobx-react';\n\nexport abstract class Context {\n    private subContexts:{[name:string]:{[rowKey:string]:Context}};\n    readonly form: Form;\n    readonly uiSchema: UiSchema;\n    readonly initData: any;\n    readonly inNode: boolean;           // true: 在</> 流中定义Field\n    readonly widgets: {[name:string]: Widget} = {};\n    readonly rules: ContextRule[];\n    readonly isRow: boolean;\n    @observable errors: string[] = [];\n    @observable errorWidgets:Widget[] = [];\n\n    constructor(form: Form, uiSchema: UiSchema, data: any, inNode: boolean, isRow: boolean) {\n        this.form = form;\n        this.uiSchema = uiSchema;\n        this.initData = data;\n        this.inNode = inNode;\n        this.isRow = isRow;\n        if (uiSchema !== undefined) {\n            let {rules} = uiSchema;\n            if (rules !== undefined) {\n                this.rules = [];\n                if (Array.isArray(rules) === false)\n                    this.rules.push(rules as ContextRule);\n                else\n                    this.rules.push(...rules as ContextRule[]);\n            }\n        }\n    }\n\n    getArrRowContexts(arrName: string) {\n        if (this.subContexts === undefined) this.subContexts = {};\n        let arrRowContexts = this.subContexts[arrName];\n        if (arrRowContexts === undefined) this.subContexts[arrName] = arrRowContexts = {};\n        return arrRowContexts;\n    }\n\n    abstract get data():any;\n    abstract getItemSchema(itemName:string):ItemSchema;\n    abstract getUiItem(itemName:string):UiItem;\n    get arrName():string {return undefined}\n    getValue(itemName:string):any {return this.initData[itemName]}\n    setValue(itemName:string, value:any) {\n        this.initData[itemName] = value;\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setValue(value);\n    }\n    getDisabled(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) return widget.getDisabled();\n        return undefined;\n    }\n    setDisabled(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setDisabled(value);\n    }\n    getReadOnly(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getReadOnly();\n        return undefined;\n    }\n    setReadOnly(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setReadOnly(value);\n    }\n    getVisible(itemName:string):boolean {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.getVisible();\n        return undefined;\n    }\n    setVisible(itemName:string, value:boolean) {\n        let widget = this.widgets[itemName];\n        if (widget !== undefined) widget.setVisible(value);\n    }\n\n    async submit(buttonName: string) {\n        this.checkRules()\n        if (this.hasError === true) {\n            let err = '';\n            for (let ew of this.errorWidgets) {\n                err += ew.name + ':\\n' + ew.errors.join('\\n');\n            }\n            console.error(err);\n            return;\n        }\n        let {onButtonClick} = this.form.props;\n        if (onButtonClick === undefined) {\n            alert(`button ${buttonName} clicked. you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(buttonName, this);\n        if (ret === undefined) return;\n        this.setError(buttonName, ret);\n\n    }\n\n    checkFieldRules() {\n        for (let i in this.widgets) {\n            this.widgets[i].checkRules();\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                arrRowContexts[j].checkFieldRules();\n            }\n        }\n    }\n\n    checkContextRules() {\n        this.clearErrors();\n        if (this.rules === undefined) return;\n        for (let rule of this.rules) {\n            let ret = rule(this);\n            if (ret === undefined) continue;\n            if (Array.isArray(ret) === true) {\n                this.errors.push(...ret as string[]);\n            }\n            else if (typeof ret === 'string') {\n                this.errors.push(ret as string);\n            }\n            else {\n                for (let i in ret as object) this.setError(i, ret[i]);\n            }\n        }\n        if (this.subContexts === undefined) return;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                let rowContext = arrRowContexts[j];\n                rowContext.clearErrors();\n                rowContext.checkContextRules();\n            }\n        }\n    }\n\n    setError(itemName:string, error:string) {\n        let widget = this.widgets[itemName];\n        if (widget === undefined) return;\n        widget.setContextError(error);\n        this.addErrorWidget(widget);\n    }\n\n    clearContextErrors() {\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearContextError();\n        }\n    }\n\n    clearWidgetsErrors() {\n        for (let i in this.widgets) {\n            let widget = this.widgets[i];\n            if (widget === undefined) continue;\n            widget.clearError();\n        }\n    }\n\n    checkRules() {\n        this.clearErrors();\n        this.clearWidgetsErrors();\n        this.checkFieldRules();\n        if (this.hasError === true) return;\n        this.checkContextRules();\n    }\n\n    addErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos < 0) this.errorWidgets.push(widget);\n    }\n    removeErrorWidget(widget:Widget) {\n        let pos = this.errorWidgets.findIndex(v => v === widget);\n        if (pos >= 0) this.errorWidgets.splice(pos, 1);\n    }\n\n    protected checkHasError():boolean {\n        let ret = (this.errorWidgets.length + this.errors.length) > 0;\n        if (ret === true) return true;\n        if (this.subContexts === undefined) return false;\n        for (let i in this.subContexts) {\n            let arrRowContexts = this.subContexts[i];\n            for (let j in arrRowContexts) {\n                if (arrRowContexts[j].hasError === true) return true;\n            }\n        }\n        return false;\n    }\n\n    @computed get hasError():boolean {\n        return this.checkHasError();\n    };\n\n    clearErrors() {\n        this.errors.splice(0);\n        this.errorWidgets.splice(0);\n        this.clearContextErrors();\n    }\n\n    renderErrors = observer((): JSX.Element => {\n        let {errors} = this;\n        if (errors.length === 0) return null;\n        return <>\n            {errors.map(err => <span key={err} className=\"text-danger inline-block my-1 ml-3\">\n                <i className=\"fa fa-exclamation-circle\" /> &nbsp;{err}\n            </span>)}\n        </>\n    });\n}\n\nlet rowKeySeed:number = 1;\nexport class RowContext extends Context {\n    readonly parentContext: Context;\n    readonly arrSchema: ArrSchema;\n    readonly uiSchema: UiArr;\n    //readonly row: ArrRow;\n    readonly rowKey: number;\n    readonly data: any;\n    constructor(parentContext:Context, arrSchema: ArrSchema, data: any, inNode: boolean) {\n        let uiArr:UiArr;\n        let {uiSchema} = parentContext;\n        if (uiSchema !== undefined) {\n            let {items} = uiSchema;\n            if (items !== undefined) uiArr = items[arrSchema.name] as UiArr;\n        }\n        super(parentContext.form, uiArr, data, inNode, true);\n        this.parentContext = parentContext;\n        this.arrSchema = arrSchema;\n        this.rowKey = rowKeySeed++;\n        this.data = data;\n    }\n    getItemSchema(itemName:string):ItemSchema {return this.arrSchema.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        if (this.uiSchema === undefined) return undefined;\n        let {items} = this.uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName]\n    }\n    get arrName():string {return this.arrSchema.name}\n    clearErrors() {\n        super.clearErrors();\n        this.parentContext.clearErrors();\n    }\n\n    get parentData():any {return this.parentContext.data;}\n}\n\nexport class FormContext extends Context {\n    constructor(form:Form, inNode:boolean) {\n        super(form, form.uiSchema, form.data, inNode, false);\n    }\n    get data():any {return this.form.data}\n    getItemSchema(itemName:string):ItemSchema {return this.form.itemSchemas[itemName]}\n    getUiItem(itemName:string):UiItem {\n        let {uiSchema} = this.form;\n        if (uiSchema === undefined) return undefined;\n        let {items} = uiSchema;\n        if (items === undefined) return undefined;\n        return items[itemName];\n    }\n}\n\nexport const ContextContainer = React.createContext<Context>({} as any);\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport classNames from 'classnames';\n//import { ArrRow } from '../arrRow';\nimport { Context, RowContext, ContextContainer } from '../context';\nimport { ArrSchema } from '../../schema';\nimport { UiArr, TempletType } from '../../schema';\nimport { Unknown } from './unknown';\nimport { factory } from './factory';\n\nexport const ArrComponent = observer((\n    {parentContext, arrSchema, children}:{parentContext: Context, arrSchema: ArrSchema, children: React.ReactNode}) => \n{\n    let {name, arr} = arrSchema;\n    let data = parentContext.initData[name] as any[];\n    let {form} = parentContext;\n    let arrRowContexts = parentContext.getArrRowContexts(name);\n    let ui = parentContext.getUiItem(name) as UiArr;\n    let arrLabel = name;\n    let Templet:TempletType;\n    let selectable:boolean, deletable:boolean, restorable:boolean;\n    let {ArrContainer, RowContainer, RowSeperator, uiSchema} = form;\n    if (uiSchema !== undefined) {\n        let {selectable:formSelectable, deletable:formDeletable, restorable:formRestorable} = uiSchema;\n        if (selectable !== true) selectable = formSelectable;\n        if (deletable !== true) deletable = formDeletable;\n        if (restorable !== true) restorable = formRestorable;\n    }\n    if (ui !== undefined) {\n        let {widget:widgetType, label, \n            selectable:arrSelectable, deletable:arrDeletable, restorable:arrRestorable,\n            ArrContainer:ac, RowContainer:rc, RowSeperator:rs\n        } = ui;\n        if (arrSelectable !== undefined) selectable = arrSelectable;\n        if (arrDeletable !== undefined) deletable = arrDeletable;\n        if (arrRestorable !== undefined) restorable = arrRestorable;\n        if (ac !== undefined) ArrContainer = ac;\n        if (rc !== undefined) RowContainer = rc;\n        if (rs !== undefined) RowSeperator = rs;\n        Templet = ui.Templet;\n        if (widgetType !== 'arr') return Unknown(arrSchema.type, widgetType, ['arr']);\n        arrLabel = label || arrLabel;\n    }\n    let first = true;\n    return ArrContainer(arrLabel, <>\n        {data.map((row:any, index) => {\n            let rowContext: RowContext;\n            let rowContent: JSX.Element;\n            let sep = undefined;\n            if (first === false) sep = RowSeperator;\n            else first = false;\n            if (children !== undefined) {\n                rowContext = new RowContext(parentContext, arrSchema, row, true);\n                rowContent = <>{children}</>;\n            }\n            else {\n                let typeofTemplet = typeof Templet;\n                if (typeofTemplet === 'function') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = React.createElement(observer(Templet as React.StatelessComponent), row);\n                }\n                else if (typeofTemplet === 'object') {\n                    rowContext = new RowContext(parentContext, arrSchema, row, true);\n                    rowContent = Templet as JSX.Element;\n                }\n                else {\n                    rowContext = new RowContext(parentContext, arrSchema, row, false);\n                    rowContent = <>{\n                        arr.map((v, index) => {\n                            return <React.Fragment key={v.name}>\n                                {factory(rowContext, v, undefined)}\n                            </React.Fragment>\n                        })}\n                    </>;\n                }\n            }\n            let {rowKey} = rowContext;\n            arrRowContexts[rowKey] = rowContext;\n\n            let selectCheck:JSX.Element, deleteIcon:JSX.Element;\n            if (selectable === true) {\n                let onClick = (evt: React.MouseEvent<HTMLInputElement>)=>{\n                    let {checked} = (evt.target as HTMLInputElement);\n                    row.$isSelected = checked;\n                    let {$source} = row;\n                    if ($source !== undefined) $source.$isSelected = checked;\n                    rowContext.clearErrors();\n                }\n                selectCheck = <div className=\"form-row-checkbox\">\n                    <input type=\"checkbox\" onClick={onClick} defaultChecked={row.$isSelected} />\n                </div>;\n            }\n            let isDeleted = !(row.$isDeleted===undefined || row.$isDeleted===false);\n            if (deletable === true) {\n                let icon = isDeleted? 'fa-undo' : 'fa-trash';\n                let onDelClick = () => {\n                    if (restorable === true) {\n                        row.$isDeleted = !isDeleted;\n                        let {$source} = row;\n                        if ($source !== undefined) $source.$isDeleted = !isDeleted;\n                    }\n                    else {\n                        let p = data.indexOf(row);\n                        if (p>=0) data.splice(p, 1);\n                    }\n                    rowContext.clearErrors();\n                }\n                deleteIcon = <div className=\"form-row-edit text-info\" onClick={onDelClick}>\n                    <i className={classNames('fa', icon, 'fa-fw')} />\n                </div>;\n            }\n            let editContainer = selectable===true || deletable===true?\n                (content:any) => <fieldset disabled={isDeleted}><div className={classNames('d-flex', {'deleted':isDeleted, 'row-selected':row.$isSelected})}>\n                    {selectCheck}\n                    <div className={selectable===true && deletable===true? \"form-row-content\":\"form-row-content-1\"}>{content}</div>\n                    {deleteIcon}\n                </div></fieldset>\n                :\n                (content:any) => content;\n\n            return <ContextContainer.Provider key={rowKey} value={rowContext}>\n                {sep}\n                {RowContainer(editContainer(<><rowContext.renderErrors />{rowContent}</>))}\n            </ContextContainer.Provider>;\n        })}\n    </>);\n});\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Widget } from './widget';\nimport { UiImageItem } from '../../schema';\nimport { Image } from '../../image';\nimport { ImageItemEdit } from '../../edit/imageItemEdit';\nimport { observer } from 'mobx-react';\nimport { observable } from 'mobx';\n\nexport class ImageWidget extends Widget {\n    protected input: HTMLInputElement;\n    protected ui: UiImageItem;\n    @observable private imageSrc: string;\n\n    protected init() {\n        super.init();\n        this.imageSrc = this.value;\n    }\n\n    protected onClick = async () => {\n        let edit = new ImageItemEdit(this.itemSchema, this.ui, this.ui.label, this.value);\n        let ret = await edit.start();\n        if (ret !== null) {\n            this.setValue(ret);\n            this.imageSrc = ret;\n        }\n        await edit.end();\n    }\n\n    render() {\n        return <this.observerRender />;\n    }\n\n    private observerRender = observer(() => {\n        let cn = [\n            'bg-white p-1 d-flex justify-content-center',\n        ];\n        let onClick: any;\n        if (!this.readOnly && !this.disabled) {\n            cn.push('cursor-pointer');\n            onClick = this.onClick;\n        }\n        return <div className={classNames(cn)} onClick={onClick}>\n            <Image src={this.imageSrc} className=\"w-4c h-4c\"/>\n        </div>;\n    });\n}\n","import * as React from 'react';\nimport { ArrSchema, DataType, ItemSchema } from '../../schema';\nimport { TypeWidget, UiCustom } from '../../schema';\nimport { TextWidget } from './textWidget';\nimport { TextAreaWidget } from './textareaWidget';\nimport { PasswordWidget, UrlWidget, EmailWidget } from './passwordWidget';\nimport { UpdownWidget } from './updownWidget';\nimport { NumberWidget } from './numberWidget';\nimport { DateWidget, DateTimeWidget, TimeWidget, MonthWidget } from './dateWidget';\nimport { CheckBoxWidget } from './checkBoxWidget';\nimport { FieldProps } from '../field';\nimport { Context } from '../context';\nimport { SelectWidget } from './selectWidget';\nimport { RadioWidget } from './radioWidget';\nimport { RangeWidget } from './rangeWidget';\nimport { IdWidget } from './idWidget';\nimport { ButtonWidget } from './buttonWidget';\nimport { ArrComponent } from './arrComponent';\nimport { ImageWidget } from './imageWidget';\n\nconst widgetsFactory: {[type: string]: {widget?: TypeWidget, dataTypes?: DataType[]}} = {\n    id: {\n        dataTypes: ['id'],\n        widget: IdWidget,\n    },\n    text: {\n        dataTypes: ['integer', 'number', 'string'],\n        widget: TextWidget\n    },\n    textarea: {\n        dataTypes: ['string'],\n        widget: TextAreaWidget\n    },\n    password: {\n        dataTypes: ['string'],\n        widget: PasswordWidget\n    },\n    date: {\n        dataTypes: ['date'],\n        widget: DateWidget\n    },\n    datetime: {\n        dataTypes: ['date'],\n        widget: DateTimeWidget\n    },\n    time: {\n        dataTypes: ['date'],\n        widget: TimeWidget\n    },\n    month: {\n        dataTypes: ['date'],\n        widget: MonthWidget\n    },\n    select: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: SelectWidget\n    },\n    url: {\n        dataTypes: ['string'],\n        widget: UrlWidget\n    },\n    email: {\n        dataTypes: ['string'],\n        widget: EmailWidget\n    },\n    number: {\n        dataTypes: ['integer', 'number'],\n        widget: NumberWidget\n    },\n    updown: {\n        dataTypes: ['integer', 'number'],\n        widget: UpdownWidget\n    },\n    color: {\n\n    },\n    checkbox: {\n        dataTypes: ['boolean', 'integer', 'number'],\n        widget: CheckBoxWidget\n    },\n    image: {\n        dataTypes: ['string'],\n        widget: ImageWidget,\n    },\n    checkboxes: {\n\n    },\n    radio: {\n        dataTypes: ['integer', 'number', 'string', 'date', 'boolean'],\n        widget: RadioWidget\n    },\n    range: {\n        dataTypes: ['integer'],\n        widget: RangeWidget,\n    },\n    button: {\n        dataTypes: ['button', 'submit'],\n        widget: ButtonWidget,\n    }\n}\n\nexport function factory(context: Context, itemSchema: ItemSchema, children:React.ReactNode, fieldProps?: FieldProps):JSX.Element {\n    if (context === undefined) {\n        debugger;\n        return null;\n    }\n    if (itemSchema === undefined) return undefined;\n    let {name, type} = itemSchema;\n    switch (type) {\n    case 'arr':\n        let arrSchema = context.getItemSchema(name) as ArrSchema;\n        return <ArrComponent parentContext={context} arrSchema={arrSchema} children={children} />;\n    default:\n        break;\n    }\n\n    let typeWidget: TypeWidget;\n    let ui = context.getUiItem(name);\n    function getTypeWidget(t:DataType): TypeWidget {\n        switch(t) {\n        default: return TextWidget; \n        case 'id': return IdWidget;\n        case 'integer': return UpdownWidget;\n        case 'number': return NumberWidget; \n        case 'string': return TextWidget; \n        case 'date': return DateWidget; \n        case 'boolean': return CheckBoxWidget; \n        case 'button':\n        case 'submit': return ButtonWidget;\n        }\n    }\n    if (ui === undefined) { \n        typeWidget = getTypeWidget(type);\n    }\n    else {\n        let {widget:widgetType} = ui;\n        switch (widgetType) {\n        default:\n            if (widgetType !== undefined) {\n                let widgetFactory = widgetsFactory[widgetType];\n                typeWidget = widgetFactory.widget;\n            }\n            if (typeWidget === undefined) typeWidget = getTypeWidget(type);\n            break;\n        case 'custom':\n            typeWidget = (ui as UiCustom).WidgetClass;\n            break;\n        case 'group':\n            return <span>impletment group</span>;\n        }\n        //label = uiLabel || name;\n    }\n    \n    let {widgets} = context;\n    let widget = new typeWidget(context, itemSchema, fieldProps, children);\n    widgets[name] = widget;\n\n    return <widget.container />;\n    /*\n    if (isRow === false) {\n        let WidgetElement = observer(() => widget.container());\n        return <WidgetElement />;\n    }\n    else {\n        let widgetElement = widget.container();\n        return widgetElement;\n    }\n    */\n}\n\n","//import _ from 'lodash';\nimport { KeyValueRes, Res } from '../res';\n\nexport interface FormRes extends KeyValueRes {\n    required: string;\n    number: string;\n    integer: string;\n    min: string;\n    max: string;\n}\n\n/*eslint no-template-curly-in-string: 0*/\nexport const formRes:Res<FormRes> = {\n    _: {\n        required: 'required',\n        number: 'not valid number',\n        integer: 'not valid integer',\n        min: 'min value is ${min}',\n        max: 'max value is ${max}',\n    },\n    zh: {\n        _: {\n            required: '必须填',\n            number: '需要数字',\n            integer: '需要整数',\n            min: '不能小于${min}',\n            max: '不能大于${max}',\n        }\n    },\n}\n","import * as React from 'react';\nimport {observable, IReactionDisposer, autorun} from 'mobx';\nimport classNames from 'classnames';\nimport { Schema, ItemSchema, ArrSchema } from '../schema';\nimport { UiSchema, TempletType } from '../schema';\nimport { factory } from './widgets';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { ContextContainer, FormContext, Context } from './context';\nimport { FormRes, formRes } from './formRes';\nimport { resLang } from '../res';\n\nexport type FormButtonClick = (name:string, context: Context) => Promise<any>;\nexport type InputEnter = (name:string, context: Context) => Promise<any>;\n\nexport interface FormProps {\n    className?: string;\n    schema: Schema;\n    uiSchema?: UiSchema;\n    formData?: any;\n    onButtonClick?: FormButtonClick;\n    onEnter?: InputEnter;\n    fieldLabelSize?: number;            // col-sm-2 for label\n    requiredFlag?: boolean;             // default=true\n    beforeShow?: (formContext:FormContext) => void;\n    res?: FormRes;\n\n    Container?: (content:JSX.Element) => JSX.Element;\n    FieldContainer?: (label:string|JSX.Element, content:JSX.Element) => JSX.Element;\n    FieldClass?: string;\n    ButtonClass?: string;\n}\n\nexport class Form extends React.Component<FormProps> {\n    readonly schema: Schema;\n    readonly itemSchemas: {[name:string]: ItemSchema};\n    readonly uiSchema: UiSchema;\n    readonly res?: FormRes;\n    protected formContext: FormContext;\n    //private content: any;\n    //private formData: any;\n    private disposer: IReactionDisposer;\n    //@observable \n    readonly data:any;\n\n    readonly Container: (content:JSX.Element) => JSX.Element;\n    readonly FieldContainer: (label:any, content:JSX.Element) => JSX.Element;\n    readonly FieldClass: string;\n    readonly ButtonClass: string;\n    //readonly ArrContainer: (label:any, content:JSX.Element) => JSX.Element;\n    //readonly RowContainer: (content:JSX.Element) => JSX.Element;\n    //readonly RowSeperator: JSX.Element;\n\n    constructor(props:FormProps) {\n        super(props);\n        let {schema, uiSchema, \n            Container, FieldContainer, FieldClass, \n            ButtonClass, res,\n        } = props;\n        this.Container = Container || this.DefaultContainer;\n        this.FieldContainer = FieldContainer || this.DefaultFieldContainer;\n        this.FieldClass = FieldClass!==undefined && FieldClass!==''&&FieldClass!==null? FieldClass : this.DefaultFieldClass;\n        this.res = res || this.DefaultRes;\n        this.ButtonClass = ButtonClass || this.DefaultButtonClass;\n\n        this.schema = schema;\n        this.itemSchemas = {};\n        for (let itemSchema of this.schema) {\n            this.itemSchemas[itemSchema.name] = itemSchema;\n        }\n        this.uiSchema = uiSchema;\n\n        //this.formData = formData;\n        this.disposer = autorun(this.watch);\n        this.data = {};\n        // this.initRender();\n    }\n\n    private renderContent():any {\n        this.initData(this.props.formData);\n        let {children} = this.props;\n        if (children !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return <>{children}</>;\n        }\n\n        let Templet: TempletType;\n        if (this.uiSchema !== undefined) {\n            Templet = this.uiSchema.Templet;\n        }\n        if (Templet !== undefined) {\n            this.formContext = new FormContext(this, true);\n            return typeof(Templet) === 'function'? Templet(this.data) : Templet;\n        }\n\n        this.formContext = new FormContext(this, false);\n        return <>{this.schema.map((v, index) => {\n            return <React.Fragment key={index}>{factory(this.formContext, v, children)}</React.Fragment>\n        })}</>;\n    }\n\n    private initData(formData: any) {\n        if (formData === undefined) formData = {};\n        for (let itemSchema of this.schema) {\n            this.initDataItem(itemSchema, this.data, formData);\n        }\n    }\n\n    private initDataItem(itemSchema: ItemSchema, data:any, formData: any):any {\n        let {name, type} = itemSchema;\n        if (type === 'button') return;\n        if (type !== 'arr') {\n            data[name] = formData[name];\n            return;\n        }\n\n        let arrItem:ArrSchema = itemSchema as ArrSchema;\n        let {arr:arrItems} = arrItem;\n        if (arrItems === undefined) return;\n        let arrDict = arrItem.itemSchemas = {};\n        for (let item of arrItems) {\n            arrDict[item.name] = item;\n        }\n        let val:any[] = formData[name];\n        if (val === undefined) val = [];\n        else if (Array.isArray(val) === false) val = [val];\n        let arr:any[] = [];\n        for (let row of val) {\n            let {$isSelected, $isDeleted} = row;\n            let r = {\n                $source: row,\n                $isSelected: $isSelected,\n                $isDeleted: $isDeleted,\n            };\n            for (let item of arrItems) {\n                this.initDataItem(item, r, row);\n                /*\n                let {name:nm} = item;\n                let v = row[nm];\n                if (v === undefined) v = null;\n                r[nm] = v;\n                */\n            }\n            arr.push(r);\n        }\n        // 如果没有observable，行删除标志点击不管用\n        // 不知道这里为什么要去掉observable。有可能会有别的问题\n        data[name] = observable(arr);\n        //data[name] = arr;\n        return;\n    }\n\n    private watch = () => {\n        let {formData} = this.props;\n        if (formData === undefined) return;\n        //this.initData(formData);\n        this.calcSelectOrDelete();\n    }\n    private calcSelectOrDelete() {\n        for (let itemSchema of this.schema) {\n            this.arrItemOperated(itemSchema);\n        }\n    }\n\n    private arrItemOperated(itemSchema: ItemSchema) {\n        let {name, type} = itemSchema;\n        if (type !== 'arr') return;\n        if (this.data === undefined) return;\n        let formArrVal = this.data[name];\n        if (formArrVal === undefined) return;\n        let {arr: arrItems} = itemSchema as ArrSchema;\n        for (let row of formArrVal) {\n            let {$source} = row;\n            if ($source === undefined) continue;\n            let {$isSelected, $isDeleted} = $source;\n            row.$isSelected = $isSelected;\n            row.$isDeleted = $isDeleted;\n            //console.log($isSelected, $isDeleted);\n            for (let item of arrItems) {\n                this.arrItemOperated(item);\n            }\n        }\n    }\n\n    componentDidMount() {\n        let {beforeShow} = this.props;\n        if (beforeShow !== undefined) beforeShow(this.formContext);\n    }\n\n    componentWillUnmount() {\n        if (this.disposer !== undefined) this.disposer();\n    }\n\n    render() {\n        let content = this.renderContent();\n        return <ContextContainer.Provider value={this.formContext}>\n            <this.formContext.renderErrors />\n            {this.Container(content)}\n        </ContextContainer.Provider>;\n    }\n\n    async buttonClick(buttonName:string) {\n        this.formContext.checkRules()\n        if (this.formContext.hasError === true) return;\n\n        let {onButtonClick} = this.formContext.form.props;\n        if (onButtonClick === undefined) {\n            alert(`you should define form onButtonClick`);\n            return;\n        }\n        let ret = await onButtonClick(buttonName, this.formContext);\n        if (ret === undefined) return;\n        this.formContext.setError(buttonName, ret);\n    }\n\n    protected DefaultContainer = (content:JSX.Element): JSX.Element => {\n        return <form className={classNames(this.props.className)} onSubmit={e=>e.preventDefault()}>\n            {content}\n        </form>;\n    }\n    protected DefaultFieldContainer = (label:string|JSX.Element, content:JSX.Element): JSX.Element => {\n        let {fieldLabelSize} = this.props;\n\n        if (fieldLabelSize > 0) {\n            let labelView:any;\n            if (label === null) {\n                fieldLabelSize = 0;\n            }\n            else {\n                labelView = <label className={classNames('col-sm-' + fieldLabelSize, 'col-form-label')}>{label}</label>\n            }\n            let fieldCol = 'col-sm-' + (12 - fieldLabelSize);\n            return <div className=\"form-group row\">\n                {labelView}\n                <div className={fieldCol}>{content}</div>\n            </div>;\n        }\n        return <div className=\"form-group\">\n            {label===null? null:<label className=\"col-form-label\">{label}</label>}\n            {content}\n        </div>;\n    }\n    protected DefaultFieldClass:string = undefined;\n    protected DefaultButtonClass = 'text-center py-2';\n    protected DefaultRes:FormRes = resLang<FormRes>(formRes);\n\n    ArrContainer = (label:any, content:JSX.Element): JSX.Element => {\n        return <div>\n            <div className={classNames('small text-muted text-center bg-light py-1 px-3 mt-4 mb-1')}>{label}</div>\n            {content}\n        </div>;\n    }\n    RowContainer = (content:JSX.Element): JSX.Element => {\n        let cn = classNames({\n            'py-3': true\n        });\n        return <div className={cn}>{content}</div>\n    }\n    RowSeperator = <div className=\"border border-gray border-top\" />;\n}\n","import * as React from 'react';\nimport { factory } from './widgets';\nimport { ContextContainer, Context } from './context';\n\nexport interface FieldProps {\n    name: string;\n}\n\nexport class FormField extends React.Component<FieldProps> {\n    static contextType = ContextContainer;\n    render() {\n        let {name, children } = this.props;\n        let context:Context = this.context;\n        if (context === undefined) return <span className=\"text-danger\">!only in Form!</span>;\n        let itemSchema = context.getItemSchema(name);\n        let content = factory(context, itemSchema, children, this.props);\n        if (content === undefined) {\n            return <span className=\"text-danger\">!!{name} is not defined!!</span>;\n        }\n        return content;\n    }\n}\n","export {Form} from './form';\nexport {FormField} from './field';\nexport {Context, RowContext} from './context';\nexport * from './widgets';\n","import {CenterApiBase} from '../net';\n\nexport class CenterApi extends CenterApiBase {\n    async userAppUnits(app:number):Promise<any[]> {\n        return await this.get('tie/user-app-units', {app:app});\n    }\n}\n\nexport const centerApi = new CenterApi('tv/', undefined);\n","import * as React from 'react';\nimport { VPage, Page, FA, nav, LMR, List } from \"../components\";\nimport { appInFrame } from '../net';\nimport { CAppBase } from \"./CAppBase\";\n\n/*\nexport class VAppMain extends VPage<CMainBase> {\n    async open(param?:any) {\n        this.openPage(this.appPage);\n    }\n\n    render(param?:any) {\n        return this.appContent();\n    }\n\n    protected appPage = () => {\n        let {caption} = this.controller;\n        return <Page header={caption} logout={async()=>{appInFrame.unit = undefined}}>\n            {this.appContent()}\n        </Page>;\n    }\n\n    protected appContent = () => {\n        let {cUqArr} = this.controller;\n        let content:any;\n        if (cUqArr.length === 0) {\n            content = <div className=\"text-danger\">\n                <FA name=\"\" /> 此APP没有绑定任何的UQ\n            </div>;\n        }\n        else {\n            content = cUqArr.map((v,i) => <div key={i}>{v.render()}</div>);\n        }\n        return <>{content}</>;\n    };\n}\n*/\nexport class VUnsupportedUnit extends VPage<CAppBase> {\n    async open(predefinedUnit: number) {\n        this.openPage(this.page, predefinedUnit);\n    }\n\n    private page = (predefinedUnit: number) => {\n        let {user} = nav;\n        let userName:string = user? user.name : '[未登录]';\n        let {appOwner, appName} = this.controller.uqsMan;\n        return <Page header=\"APP无法运行\" logout={true}>\n            <div className=\"m-3 text-danger container\">\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">登录用户</div>\n                    <div className=\"col-sm text-body\">{userName}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">App</div>\n                    <div className=\"col-sm text-body\">{`${appOwner}/${appName}`}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">预设小号</div>\n                    <div className=\"col-sm text-body\">{predefinedUnit || <small className=\"\">[无预设小号]</small>}</div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">\n                        可能原因<FA name=\"exclamation-triangle\" />\n                    </div>\n                    <div className=\"col-sm text-body\">\n                        <ul className=\"p-0\">\n                            <li>没有小号运行 {appName}</li>\n                            <li>用户 <b>{userName}</b> 没有加入任何一个运行{appName}的小号</li>\n                            {\n                                predefinedUnit && \n                                <li>预设小号 <b>{predefinedUnit}</b> 没有运行App {appName}</li>\n                            }\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <div className=\"col-sm-3 font-weight-bold\">小号{predefinedUnit}</div>\n                    <div className=\"col-sm text-body\">\n                        预设小号定义在 public/unit.json 文件中。\n                        定义了这个文件的程序，只能由url直接启动。\n                        用户第一次访问app之后，会缓存在localStorage里。<br/>\n                        如果要删去缓存的预定义Unit，logout然后再login。\n                    </div>\n                </div>\n            </div>\n        </Page>;\n    }\n}\n\nexport class VUnitSelect extends VPage<CAppBase> {\n    async open() {\n        this.openPage(this.page);\n    }\n\n    private renderRow = (item: any, index: number):JSX.Element => {\n        let {id, nick, name} = item;\n        return <LMR className=\"px-3 py-2\" right={'id: ' + id}>\n            <div>{nick || name}</div>\n        </LMR>;\n    }\n    private onRowClick = async (item: any) => {\n        appInFrame.unit = item.id; // 25;\n        await this.controller.start();\n    }\n\n    private page = () => {\n        return <Page header=\"选择小号\" logout={true}>\n            <List items={this.controller.appUnits} item={{render: this.renderRow, onClick: this.onRowClick}}/>\n        </Page>\n    }\n}\n\nexport class VErrorsPage extends VPage<CAppBase> {\n    async open(errors:string[]) {\n        this.openPage(this.page, errors);\n    }\n\n    private page = (errors:string[]) => {\n        return <Page header=\"ERROR\">\n            <div className=\"m-3\">\n                <div>Load Uqs 发生错误：</div>\n                {errors.map((r, i) => <div key={i}>{r}</div>)}\n            </div>\n        </Page>;\n    }\n}\n\nexport class VStartError extends VPage<CAppBase> {\n    async open(error:any) {\n        this.openPage(this.page, error);\n    }\n\n    private page = (error:any) => {\n        return <Page header=\"App start error!\">\n            <pre>\n                {typeof error === 'string'? error : error.message}\n            </pre>\n        </Page>;\n    }\n}","//import _ from 'lodash';\nimport { Controller, nav } from \"../components\";\nimport { Tuid, Action, Sheet, Query, Map, UQsMan, TVs } from \"../uq\";\nimport { appInFrame, loadAppUqs, UqAppData } from \"../net\";\nimport { centerApi } from \"./centerApi\";\nimport { VUnitSelect, VErrorsPage, VStartError, VUnsupportedUnit } from \"./vMain\";\n\ntype EntityType = Tuid | Action | Sheet | Query | Map;\n\nexport interface IConstructor<T> {\n    new (...args: any[]): T;\n\n    // Or enforce default constructor\n    // new (): T;\n}\n\nexport interface AppConfig {\n    appName: string;        // 格式: owner/appName\n    version: string;        // 版本变化，缓存的uqs才会重载\n    tvs: TVs;\n    uqNameMap?: {[uqName:string]: string};      // uqName='owner/uq' 映射到内存简单名字：uq, 可以注明映射，也可以自动。有可能重\n    loginTop?: JSX.Element;\n}\n\nexport abstract class CAppBase extends Controller {\n    protected _uqs: any;\n\n    protected readonly name: string;\n    protected readonly version: string;\n\n    readonly uqsMan: UQsMan;\n    appUnits:any[];\n\n    // appName: owner/name\n    constructor(config: AppConfig) {\n        super(undefined);\n        let {appName, version, tvs} = config;\n        this.name = appName;\n        if (appName === undefined) {\n            throw new Error('appName like \"owner/app\" must be defined in MainConfig');\n        }\n        this.version = version;\n        this.uqsMan = new UQsMan(this.name, tvs);\n    }\n\n    get uqs(): any {return this._uqs;}\n\n    protected async beforeStart():Promise<boolean> {\n        try {\n            let retErrors = await this.load();\n            //let app = await loadAppUqs(this.appOwner, this.appName);\n            // if (isDevelopment === true) {\n            // 这段代码原本打算只是在程序员调试方式下使用，实际上，也可以开放给普通用户，production方式下\n            let {predefinedUnit} = appInFrame;\n            //let {id} = app;\n            //this.id = id;\n            let {user} = nav;\n            if (user !== undefined && user.id > 0) {\n                this.appUnits = await centerApi.userAppUnits(this.uqsMan.id);\n                switch (this.appUnits.length) {\n                    case 0:\n                        this.showUnsupport(predefinedUnit);\n                        return false;\n                    case 1:\n                        let appUnit = this.appUnits[0].id;\n                        if (appUnit === undefined || appUnit < 0 || \n                            (predefinedUnit !== undefined && appUnit !== predefinedUnit))\n                        {\n                            this.showUnsupport(predefinedUnit);\n                            return false;\n                        }\n                        appInFrame.unit = appUnit;\n                        break;\n                    default:\n                        if (predefinedUnit>0 && this.appUnits.find(v => v.id===predefinedUnit) !== undefined) {\n                            appInFrame.unit = predefinedUnit;\n                            break;\n                        }\n                        //nav.push(<this.selectUnitPage />)\n                        this.openVPage(VUnitSelect);\n                        return false;\n                }\n            }\n            if (retErrors !== undefined) {\n                this.openVPage(VErrorsPage);\n                return false;\n            }\n            return true;\n        }\n        catch (err) {\n            this.openVPage(VStartError, err);\n            return false;\n        }\n    }\n\n    private async load(): Promise<string[]> {\n        let {appOwner, appName} = this.uqsMan;\n        let {localData} = this.uqsMan;\n        let uqAppData:UqAppData = localData.get();\n        if (!uqAppData || uqAppData.version !== this.version) {\n            uqAppData = await loadAppUqs(appOwner, appName);\n            uqAppData.version = this.version;\n            localData.set(uqAppData);\n            // \n            for (let uq of uqAppData.uqs) uq.newVersion = true;\n        }\n        let {id, uqs} = uqAppData;\n        this.uqsMan.id = id;\n        await this.uqsMan.init(uqs);\n        let retErrors = await this.uqsMan.load();\n        if (retErrors.length === 0) {\n            retErrors.push(...this.uqsMan.setTuidImportsLocal());\n            if (retErrors.length === 0) {\n                this._uqs = this.uqsMan.buildUQs();\n                /*\n                _.merge(this.uqs, this.uqsMan.uqsColl);\n                for (let i in this.uqs) {\n                    let p = i.indexOf('/');\n                    if (p < 0) continue;\n                    let uq = this.uqs[i];\n                    \n                    let n = i.substr(p+1);\n                    let l = n.toLowerCase();\n                    this.uqs[n] = uq;\n                    if (l !== n) this.uqs[l] = uq;\n                }\n                */\n                return;\n            }\n        }\n        return retErrors;\n    }\n\n    private showUnsupport(predefinedUnit: number) {\n        nav.clear();\n        this.openVPage(VUnsupportedUnit, predefinedUnit);\n    }\n}\n","//import * as React from 'react';\nimport { AppConfig, CAppBase } from './CAppBase';\n//import { AppUI, CApp } from './app';\n\n/*\nfunction convertUIKeyToLowercase(obj: any) {\n    for (let i in obj) {\n        let v = obj[i];\n        obj[i.toLowerCase()] = v;\n        if (typeof v !== 'object') continue;\n        if (React.isValidElement(v)) continue;\n        if (Array.isArray(v) !== true) {\n            convertUIKeyToLowercase(v);\n            continue;\n        }\n        for (let i of (v as any[])) {\n            convertUIKeyToLowercase(i);\n        }\n    }\n}\n*/\n// const appName = 'JKDev/jkOrder';\nexport async function start(CApp: new (config: AppConfig) => CAppBase, appConfig: AppConfig) {\n    //convertUIKeyToLowercase(ui);\n    //let cApp = new (ui && ui.CApp || CApp)(ui);\n    //await cApp.start();\n    let cApp = new CApp(appConfig);\n    await cApp.start();\n}\n","import { Controller } from \"../components\";\nimport { IConstructor } from \"./CAppBase\";\n\nexport abstract class CBase extends Controller {\n    protected readonly _uqs: any;\n    readonly cApp: any;\n\n    constructor(cApp: any) {\n        super(undefined);\n        this.cApp = cApp;\n        this._uqs = cApp.uqs;\n        this.init();\n    }\n\n    protected get uqs(): any {return this._uqs}\n\n    protected init() {}\n\n    protected newC<T extends CBase>(type: IConstructor<T>):T {\n        return new type(this.cApp);\n    }\n\n    protected newSub<T extends CSub>(type: IConstructor<T>):T {\n        return new type(this);\n    }\n}\n\nexport abstract class CSub extends CBase {\n    protected readonly owner: CBase;\n\n    constructor(owner: CBase) {\n        super(owner.cApp);\n        this.owner = owner;\n    }\n}\n","export * from './CAppBase';\nexport * from './start';\nexport * from './CBase';\n","import * as React from 'react';\nimport { UiTextItem } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\n\nexport class StringItemEdit extends ItemEdit {\n    protected uiItem: UiTextItem;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.newValue = evt.target.value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue !== preValue);\n    }\n\n    private onBlur = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        this.verifyValue();\n    }\n\n    private onFocus = () => {\n        this.error = undefined;\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>{\n                this.verifyValue();\n                if (this.error === undefined) resolve(this.newValue);\n            }}>保存</button>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">\n                <input type=\"text\" \n                    onChange={this.onChange}\n                    onBlur={this.onBlur}\n                    onFocus={this.onFocus}\n                    className=\"form-control\" \n                    defaultValue={this.value} />\n                {\n                    this.uiItem && <div className=\"small muted m-2\">{this.uiItem.placeholder}</div>\n                }\n                {this.error && <div className=\"text-danger\">{this.error}</div>}\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { ItemSchema, UiRadio } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\n\nexport class RadioItemEdit extends ItemEdit {\n    protected uiItem: UiRadio;\n\n    constructor(itemSchema: ItemSchema, uiItem:UiRadio, label:string, value: any) {\n        super(itemSchema, uiItem, label, value);\n        if (this.value === undefined) {\n            this.value = uiItem.defaultValue;\n        }\n    }\n\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (value: any) => {\n        this.newValue = value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue !== preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let {name} = this.itemSchema;\n        let {list} = this.uiItem;\n        let right = <button\n            className=\"btn btn-sm btn-success\"\n            disabled={!this.isChanged}\n            onClick={()=>{\n                this.verifyValue();\n                if (this.error === undefined) resolve(this.newValue);\n            }}>保存</button>;\n        let content = list?\n            list.map((v, index:number) => {\n                let {title, value} = v;\n                return <label key={index} className=\"px-3 py-2 cursor-pointer\">\n                    <input name={name} type=\"radio\" value={value} \n                        onClick={()=>this.onChange(value)} \n                        defaultChecked={value === this.value} /> {title || value} &nbsp;\n                </label>;\n            })\n            :\n            <>no list defined</>;\n        return <Page header={'更改' + this.label} right={right}>\n            <div className=\"m-3\">{content}</div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { UiSelect } from '../schema';\nimport { nav } from '../nav';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\n\nexport class SelectItemEdit extends ItemEdit {\n    protected uiItem: UiSelect;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            nav.push(element,reject);\n        });\n    }\n\n    private onChange = (value:any) => {\n        this.newValue = value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue !== preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        let {resolve} = props;\n        let {list} = this.uiItem;\n        let content = list?\n            list.map((v, index:number) => {\n                let {title, value} = v;\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\n                    {title || value}\n                </div>;\n            })\n            :\n            <>no list defined</>;\n        return <Page header={'更改' + this.label}>\n            <div className=\"my-3\">\n                {content}\n            </div>\n        </Page>;\n    })\n}\n","import * as React from 'react';\nimport { UiIdItem } from '../schema';\nimport { Page } from '../page';\nimport { observer } from 'mobx-react';\nimport { ItemEdit } from './itemEdit';\n\nexport class IdItemEdit extends ItemEdit {\n    protected uiItem: UiIdItem;\n    protected async internalStart():Promise<any> {\n        return new Promise<any>(async (resolve, reject) => {\n            //let element = React.createElement(this.page, {resolve:resolve, reject:reject});\n            //nav.push(element,reject);\n\n            let {pickId} = this.uiItem;\n            if (pickId === undefined) {\n                alert('IdItemEdit.pickId = undefined');\n                return;\n            }\n            let boxId = await pickId(undefined, undefined, this.value);\n            //if (typeof id === 'object') {\n            //    id = (id as any).id;\n            //}\n            this.onChange(boxId.id);\n            resolve(boxId);\n            //this.newValue = id;\n        });\n    }\n\n    protected async internalEnd():Promise<void> {}\n\n    private onChange = (value:any) => {\n        this.newValue = value;\n        let preValue = this.value;\n        this.isChanged = (this.newValue !== preValue);\n    }\n\n    private page = observer((props:{resolve:(value:any)=>void, reject: (resean?:any)=>void}):JSX.Element => {\n        /*\n        let {resolve, reject} = props;\n        let {list} = this.uiItem;\n        let content = list?\n            list.map((v, index:number) => {\n                let {title, value} = v;\n                return <div key={index} className=\"px-3 py-2 cursor-pointer bg-white mb-1\" onClick={()=>{this.onChange(value); resolve(this.newValue)}}>\n                    {title || value}\n                </div>;\n            })\n            :\n            <>no list defined</>;\n        return <Page header={'更改' + this.label}>\n            <div className=\"my-3\">\n                {content}\n            </div>\n        </Page>;\n        */\n        return <Page header={'更改' + this.label}>\n            ddd\n        </Page>\n    })\n}\n","import * as React from 'react';\n//import _ from 'lodash';\nimport { observer } from 'mobx-react';\nimport { Schema, UiSchema, ItemSchema, UiItem, UiSelectBase, UiRadio } from '../schema';\nimport { ItemEdit } from './itemEdit';\nimport { StringItemEdit } from './stringItemEdit';\nimport { ImageItemEdit } from './imageItemEdit';\nimport { Image } from '../image';\nimport { RadioItemEdit } from './radioItemEdit';\nimport { SelectItemEdit } from './selectItemEdit';\nimport { IdItemEdit } from './idItemEdit';\n\nexport interface EditProps {\n    className?: string;\n    schema: Schema;\n    data: any;\n    onItemClick?: (itemSchema: ItemSchema, uiItem: UiItem, value: any) => Promise<void>;\n    onItemChanged?: (itemSchema: ItemSchema, newValue:any, preValue:any) => Promise<void>;\n    stopEdit?: boolean;\n    uiSchema?: UiSchema;\n    sepClassName?: string;\n    topBorderClassName?: string;\n    bottomBorderClassName?: string;\n    rowContainerClassName?: string;\n}\n\n@observer\nexport class Edit extends React.Component<EditProps> {\n    private defaultSepClassName = 'border-top edit-sep-light-gray';\n    private defaultRowContainerClassName = 'd-flex px-3 py-2 bg-white align-items-center';\n    private topBorder:JSX.Element;\n    private bottomBorder:JSX.Element;\n    private rowContainerClassName?: string;\n    private sep:JSX.Element;\n    private uiSchema: {[name:string]: UiItem};\n\n    constructor(props: EditProps) {\n        super(props);\n        let {topBorderClassName, bottomBorderClassName, sepClassName, rowContainerClassName, uiSchema, stopEdit} = props;\n        this.topBorder = <div className={topBorderClassName || this.defaultSepClassName} />;\n        this.bottomBorder = <div className={bottomBorderClassName || this.defaultSepClassName} />;\n        this.rowContainerClassName = rowContainerClassName || this.defaultRowContainerClassName;\n        if (stopEdit !== true) this.rowContainerClassName += ' cursor-pointer';\n        this.sep = <div className={sepClassName || this.defaultSepClassName} />;\n        this.uiSchema = (uiSchema && uiSchema.items) || {};\n    }\n\n    render() {\n        let elItems:JSX.Element[] = [];\n        let {schema} = this.props;\n        let len = schema.length;\n\n        elItems.push(this.topBorder);\n        for (let i=0; i<len; i++) {\n            let itemSchema = schema[i];\n            if (i>0) elItems.push(this.sep);\n            let value = this.props.data[itemSchema.name];\n            elItems.push(this.renderRow(itemSchema, value));\n        }\n        elItems.push(this.bottomBorder);\n\n        return <div>\n            {elItems.map((v, index) => <React.Fragment key={index}>{v}</React.Fragment>)}\n        </div>;\n    }\n\n    private renderRow = (itemSchema: ItemSchema, value:any):JSX.Element => {\n        let {name, type, required} = itemSchema;\n        let divValue:any;\n        let uiItem = this.uiSchema[name];\n        let label:string;\n        if (uiItem === undefined) {\n            label = name;\n        }\n        else {\n            label = uiItem.label;\n            let templet = uiItem.Templet;\n            if (templet !== undefined) {\n                if (typeof templet === 'function')\n                    divValue = <b>{templet(value)}</b>;\n                else\n                    divValue = <b>{templet}</b>;\n            }\n            else if (value !== undefined) {\n                switch (uiItem.widget) {\n                    case 'radio':\n                    case 'select':\n                        let {list} = uiItem as UiSelectBase;\n                        divValue = <b>{list.find(v => v.value === value).title}</b>;\n                        break;\n                    case 'id':\n                        divValue = <b>no templet for {name}={value}</b>\n                        break;\n                }\n            }\n        }\n        //let value:any = this.props.data[name];\n        /*\n        if (uiItem !== undefined && value) {\n            switch (uiItem.widget) {\n                case 'radio':\n                case 'select':\n                    let {list} = uiItem as UiSelectBase;\n                    divValue = <b>{list.find(v => v.value === value).title}</b>;\n                    break;\n                case 'id':\n                    divValue = <b>no templet for {name}={value}</b>\n                    break;\n            }\n        }\n        */\n        if (divValue === undefined) {\n            switch (type) {\n                default:\n                    divValue = value? <b>{value}</b> : <small className=\"text-muted\">(无)</small>;\n                    break;\n                case 'image':\n                    divValue = <Image className=\"w-4c h-4c\" src={value} />;\n                    break;\n            }\n        }\n        let requireFlag = required===true && <span className=\"text-danger\">*</span>;\n        return <div className={this.rowContainerClassName} onClick={async ()=>await this.rowClick(itemSchema, uiItem, label, value)}>\n            <div className=\"w-6c\">{label} {requireFlag}</div>\n            <div className=\"flex-fill d-flex justify-content-end\">{divValue}</div>\n            {this.props.stopEdit!==true && <div className=\"w-2c text-right\"><i className=\"fa fa-angle-right\" /></div>}\n        </div>;\n    };\n\n    private rowClick = async (itemSchema: ItemSchema, uiItem: UiItem, label:string, value: any) => {\n        let {onItemChanged, onItemClick, stopEdit} = this.props;\n        if (stopEdit === true) return;\n        let changeValue:any;\n        if (onItemClick !== undefined) {\n            await onItemClick(itemSchema, uiItem, value);\n            return;\n        }\n        let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);\n        if (itemEdit === undefined) {\n            alert('undefined: let itemEdit:ItemEdit = createItemEdit(itemSchema, uiItem, label, value);');\n            return;\n        }\n        try {\n            changeValue = await itemEdit.start();\n            if (changeValue !== value) {\n                if (onItemChanged === undefined) {\n                    alert(`${itemSchema.name} value changed, new: ${changeValue}, pre: ${value}`);\n                    this.props.data[itemSchema.name] = changeValue;\n                }\n                else {\n                    await onItemChanged(itemSchema, changeValue, value);\n                }\n            }\n            await itemEdit.end();\n        }\n        catch (err) {\n            // 如果直接back，会触发reject，就到这里了\n            console.log('no value changed');\n        }\n    }\n}\n\nfunction createItemEdit(itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any):ItemEdit {\n    let itemEdit: new (itemSchema: ItemSchema, uiItem:UiItem, label:string, value: any) => ItemEdit;\n    if (uiItem !== undefined) {\n        switch (uiItem.widget) {\n            default: break;\n            case 'id': itemEdit = IdItemEdit; break;\n            case 'text': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n            case 'select': itemEdit = SelectItemEdit; break;\n            case 'radio': \n                return new RadioItemEdit(itemSchema, uiItem as UiRadio, label, value);\n        }\n    }\n    if (itemEdit === undefined) {\n        switch (itemSchema.type) {\n            case 'string': itemEdit = StringItemEdit; break;\n            case 'image': itemEdit = ImageItemEdit; break;\n        }\n    }\n    if (itemEdit === undefined) return;\n    return new itemEdit(itemSchema, uiItem, label, value);\n}\n","export * from './edit';\n","import * as React from 'react';\nimport { IObservableArray, computed } from 'mobx';\nimport { PageItems } from '../../tool/pageItems';\nimport {List} from './index';\n\nexport abstract class ListBase {\n    protected list: List;\n    constructor(list: List) {\n        this.list = list;\n    }\n    get isPaged():boolean {\n        let items = this.list.props.items;\n        return (items !== null && items !== undefined && Array.isArray(items) === false);\n    }\n    get items():any[]|IObservableArray<any> {\n        let items = this.list.props.items;\n        if (items === null) return null;\n        if (items === undefined) return undefined;\n        if (Array.isArray(items) === true)\n            return items as IObservableArray<any>;\n        else\n            return (items as PageItems<any>).items;\n    }\n    @computed get loading():boolean {\n        let items = this.list.props.items;\n        if (items === null) return false;\n        if (items === undefined) return true;\n        let pageItems = items as PageItems<any>;\n        if (pageItems.items === undefined) return false;\n        return pageItems.loading;\n    }\n    get selectedItems():any[] { return undefined; }\n    //updateProps(nextProps:any) {}\n    dispose() {};\n    abstract render: (item:any, index:number) => JSX.Element;\n    protected renderContent(item:any, index:number) {\n        let {render} = this.list.props.item;\n        if (render === undefined) return <div className=\"px-3 py-2\">{JSON.stringify(item)}</div>;\n        return render(item, index);\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {ListBase} from './base';\n\nexport class Clickable extends ListBase {\n    render = (item:any, index:number):JSX.Element => {\n        let {className, key, onClick} = this.list.props.item;\n        return <li key={key===undefined?index:key(item)} className={classNames('va-row-clickable', className)} onClick={()=>onClick && onClick(item)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { ListBase } from './base';\nimport { uid } from '../../tool/uid';\n\nexport class Static extends ListBase {\n    render = (item:any, index:number):JSX.Element => {\n        let {className, key} = this.list.props.item;\n        if (typeof item === 'string') {\n            let cn = classNames('va-list-gap', 'px-3', 'pt-1');\n            return <li key={uid()} className={cn}>{item}</li>;\n        }\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            {this.renderContent(item, index)}\n        </li>\n    }\n}\n","import * as React from 'react';\nimport {observable, IObservableArray, autorun, IReactionDisposer} from 'mobx';\nimport classNames from 'classnames';\nimport {ListBase} from './base';\nimport {uid} from '../../tool/uid';\nimport { PageItems } from '../../tool/pageItems';\nimport { List } from './index';\n\nexport interface SelectableItem {\n    selected: boolean;\n    item: any;\n    labelId: string;\n}\n\nexport class Selectable extends ListBase {\n    @observable private _items: SelectableItem[];\n    //private _selectedItems: any[];\n    private input: HTMLInputElement;\n    private disposer: IReactionDisposer;\n\n    constructor(list: List) {\n        super(list);\n        this.disposer = autorun(this.buildItems);\n        //this.buildItems();\n    }\n    dispose() {this.disposer()};\n    private buildItems = () => {\n        console.log('buildItems in selectable.tsx');\n        let {items, selectedItems, compare} = this.list.props;\n        let itemsArray:any[] | IObservableArray<any>;\n        if (items === undefined) {\n            this._items = undefined;\n            return;\n        }\n        if (items === null) {\n            this._items = null;\n            return;\n        }\n        if (Array.isArray(items) === true) {\n            itemsArray = items as any;\n        }\n        else {\n            itemsArray = (items as PageItems<any>).items;\n        }\n        //let items = this.items;\n        //this._selectedItems = selectedItems;\n\n        let comp: ((item:any, selectItem:any)=>boolean);\n        if (compare === undefined) {\n            comp = (item:any, selectItem:any) => item === selectItem;\n        }\n        else {\n            comp = compare;\n        }\n        let retItems = itemsArray.map(v => {\n            //let isObserved = isObservable(v);\n            //let obj = isObserved === true? toJS(v) : v;\n            //let obj = v;\n            let selected = selectedItems === undefined?\n                false\n                : selectedItems.find(si => comp(v, si)) !== undefined;\n            return {\n                selected: selected, \n                item: v, \n                labelId:uid()\n            };\n        });\n        this._items = retItems;\n    }\n\n    get items() {\n        //if (this._items === undefined) \n        //this.buildItems();\n        return this._items;\n    }\n    selectAll() {\n        if (this._items) this._items.forEach(v => v.selected = true);\n    }\n    unselectAll() {\n        if (this._items) this._items.forEach(v => v.selected = false);\n    }\n    /*\n    updateProps(nextProps:any) {\n        if (nextProps.selectedItems === this._selectedItems) return;\n        this.buildItems();\n    }\n    */\n    private onSelect(item:SelectableItem, selected:boolean) {\n        item.selected = selected;\n        let anySelected = this._items.some(v => v.selected);\n        this.list.props.item.onSelect(item.item, selected, anySelected);\n    }\n    \n    get selectedItems():any[] {\n        return this._items.filter(v => v.selected === true).map(v => v.item);\n    }\n    /*\n    set selectedItems(value: any[]) {\n        if (value === undefined) return;\n        if (this._items === undefined) return;\n        let sLen = this._items.length;\n        let list = value.slice();\n        for (let n=0; n<sLen; n++) {\n            let sItem = this._items[n];\n            let len = list.length;\n            if (len === 0) break;\n            let item = sItem.item;\n            for (let i=0; i<len; i++) {\n                let v = list[i];\n                if (item === v) {\n                    sItem.selected = true;\n                    value.splice(i, 1);\n                    break;\n                }\n            }\n        };\n    }\n    */\n    //w-100 mb-0 pl-3\n    //m-0 w-100\n    render = (item:SelectableItem, index:number):JSX.Element => {\n        let {className, key} = this.list.props.item;\n        let {labelId, selected, item:obItem} = item;\n        return <li key={key===undefined?index:key(item)} className={classNames(className)}>\n            <div className=\"d-flex align-items-center px-3\">\n                <input ref={input=>{\n                        if (!input) return;\n                        this.input = input; input.checked = selected;\n                    }}\n                    className=\"\" type=\"checkbox\" value=\"\" id={labelId}\n                    defaultChecked={selected}\n                    onChange={(e)=>{\n                        this.onSelect(item, e.target.checked)} \n                    }/>\n                <label className=\"\" style={{flex:1, marginBottom:0}} htmlFor={labelId}>\n                    {this.renderContent(obItem, index)}\n                </label>\n            </div>\n        </li>\n    }\n}\n/*\n<label>\n<label className=\"custom-control custom-checkbox\">\n    <input type='checkbox' className=\"custom-control-input\"\n        //checked={selected}\n        onChange={(e)=>this.onSelect(item, e.target.checked)} />\n    <span className=\"custom-control-indicator\" />\n</label>\n{this.renderContent(item.item, index)}\n</label>\n*/\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {PageItems} from '../../tool/pageItems';\nimport {ListBase} from './base';\nimport {Clickable} from './clickable';\nimport {Static} from './static';\nimport {Selectable} from './selectable';\nimport '../../css/va-list.css';\nimport { IObservableArray } from 'mobx';\n\ntype StaticRow = string|JSX.Element|(()=>string|JSX.Element);\n\nexport interface ListProps {\n    className?: string|string[];\n    items: any[] | IObservableArray<any> | PageItems<any>;\n    item: {\n        className?: string|string[];\n        render?: (item:any, index:number) => JSX.Element;\n        onSelect?: (item:any, isSelected:boolean, anySelected:boolean)=>void;\n        onClick?: (item:any)=>void;\n        key?: (item:any)=>string|number;\n    };\n    compare?:(item:any, selectItem:any)=>boolean;\n    selectedItems?:any[];\n    header?: StaticRow;\n    footer?: StaticRow;\n    before?: StaticRow;\n    loading?: StaticRow;\n    none?: StaticRow;\n}\n\n@observer\nexport class List extends React.Component<ListProps> {\n    private listBase: ListBase;\n    private selectable: Selectable;\n    constructor(props:ListProps) {\n        super(props);\n        this.buildBase();\n    }\n    _$scroll = (direct: 'top'|'bottom') => {\n        console.log('############### items scroll to ' + direct);\n    }\n    private buildBase() {\n        let {item} = this.props;\n        let {onClick, onSelect} = item;\n        if (onSelect !== undefined)\n            this.selectable = this.listBase = new Selectable(this);\n        else if (onClick !== undefined)\n            this.listBase = new Clickable(this);\n        else\n            this.listBase = new Static(this);\n    }\n    /*\n    componentWillUpdate(nextProps:ListProps, nextState, nextContext) {\n        //this.listBase.updateProps(nextProps);\n    }\n    */\n    componentWillUnmount() {\n        this.listBase.dispose();\n    }\n    selectAll() {\n        if (this.selectable) this.selectable.selectAll();\n    }\n    unselectAll() {\n        if (this.selectable) this.selectable.unselectAll();\n    }\n    get selectedItems():any[] {\n        return this.listBase.selectedItems;\n    }\n    render() {\n        let {className, header, footer, before, loading, none} = this.props;\n        if (before === undefined) before = '-';\n        if (loading === undefined) loading = () => <i className=\"fa fa-spinner fa-spin fa-2x fa-fw text-info\" />;\n        if (none === undefined) none = 'none';\n        //this.listBase.selectedItems = selectedItems;\n        let {items, loading:isLoading} = this.listBase;\n        function staticRow(row:StaticRow, type:string) {\n            if (!row) return;\n            switch (typeof row) {\n                default:\n                case 'string': return <li className={\"va-list-\"+type}>{row}</li>;\n                case 'function': return <li className={\"va-list-\"+type}>{(row as ()=>string|JSX.Element)()}</li>;\n                case 'object': return <li>{row}</li>\n            } \n        }\n        let content:any, waitingMore:any;\n        if (items === null)\n            content = staticRow(before, 'before');\n        else if (items === undefined)\n            content = staticRow(loading, 'loading');\n        else if (items.length === 0)\n            content = staticRow(none, 'none');\n        else {\n            content = items.map((item, index) => {\n                return this.listBase.render(item, index);\n            });\n        }\n        if (isLoading === true && items) {\n            waitingMore = staticRow(loading, 'loading');\n        }\n        return <ul className={classNames('va-list', className)}>\n            {staticRow(header, 'header')}\n            {content}\n            {waitingMore}\n            {staticRow(footer, 'footer')}\n        </ul>;\n    }\n}\n","import * as React from 'react';\nimport className from 'classnames';\nimport {PropGridProps} from './PropGrid';\nimport {LabeledProp, StringProp, NumberProp, ListProp, ComponentProp} from './propView';\n\nexport abstract class PropRow {\n    setValues(values: any) {}\n    abstract render(key:string): any;\n}\n\nexport class PropBorder extends PropRow {\n    render(key:string): JSX.Element {\n        return <div key={'_b_' + key} className=\"\">\n            <div className=\"w-100\">\n                <div style={{borderTop: '1px solid #f0f0f0'}} />\n            </div>\n        </div>;\n    }\n}\n\nexport class PropGap extends PropRow {\n    private param: string;\n    constructor(param?: string) {\n        super();\n        this.param = param;\n    }\n    render(key:string): JSX.Element {\n        let w: string;\n        switch (this.param) {\n            default: w = 'py-2'; break;\n            case '=': w = 'py-1'; break;\n            case '-': w = 'pb-1'; break;\n        }\n        let cn = className(w);\n        return <div key={'_g_' + key} className={cn} style={{backgroundColor: '#f0f0f0'}} />;\n    }\n}\n\nconst valueAlignStart = 'justify-content-start';\nconst valueAlignCenter = 'justify-content-center';\nconst valueAlignEnd = 'justify-content-end';\nexport abstract class LabeledPropRow extends PropRow {\n    protected gridProps: PropGridProps;\n    protected prop: LabeledProp;\n    protected content: any;\n    protected col: string;\n    //protected values: any;\n    constructor(gridProps:PropGridProps, prop: LabeledProp) {\n        super();\n        this.gridProps = gridProps;\n        this.prop = prop;\n        this.col = gridProps.labelFixLeft === true? 'col' : 'col-sm';\n        //this.values = values;\n    }\n    render(key:string):any {\n        let {onClick, bk} = this.prop;\n        let cn = className({\n            \"cursor-pointer\": onClick !== undefined,\n            \"bg-white\": bk === undefined, \n            \"row\": true\n        });\n        return <div key={key} className={cn} onClick={onClick}>\n            {this.renderLabel()}\n            {this.renderProp()}\n        </div>;\n    }\n    protected renderLabel():any {\n        let {label} = this.prop;\n        if (label === undefined) return null;\n        return <label className={this.col + '-3 col-form-label'}>\n            {label}\n        </label>;\n    }\n    protected renderProp():any {\n        let {label} = this.prop;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string = this.col + (label===undefined? '-12':'-9');\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n    protected renderPropBody():any {\n        return <div className=\"form-control-plaintext\">\n            {this.renderPropContent()}\n        </div>;\n    }\n    protected renderPropContent():any {\n        return this.content;\n    }\n}\n\nexport class StringPropRow extends LabeledPropRow {\n    protected prop: StringProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class NumberPropRow extends LabeledPropRow {\n    protected prop: NumberProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else this.content = values[this.prop.name];\n    }\n}\n\nexport class ListPropRow extends LabeledPropRow {\n    protected prop: ListProp;\n    setValues(values:any) {\n        if (values === undefined) this.content = undefined;\n        else {\n            let list = this.prop.list;\n            if (typeof list === 'string') this.content = values[list];\n            else this.content = undefined;\n        }\n    }\n    protected renderPropBody() {\n        let {list, row} = this.prop;\n        let items:any[] = typeof list === 'string'? this.content : list;\n        if (items === undefined) return <div/>;\n        // new row(item)\n        return <div className=\"w-100\">\n            {\n                items.map((item, index) => <React.Fragment key={index}>\n                    {index===0? null: <div style={{width:'100%', borderBottom:'1px solid #f0f0f0'}} />}\n                    {React.createElement(row, item)}\n                </React.Fragment>)\n            }\n        </div>;\n    }\n}\n\nexport class ComponentPropRow extends LabeledPropRow {\n    protected prop: ComponentProp;\n    protected renderPropBody() {\n        let {component} = this.prop;\n        return component;\n    }\n    protected renderProp():any {\n        let {label, full} = this.prop;\n        let align, vAlign;\n        switch (this.gridProps.alignValue) {\n            case 'left': align = valueAlignStart; break;\n            case 'center': align = valueAlignCenter; break;\n            case 'right': align = valueAlignEnd; break;\n        }\n        switch (this.prop.vAlign) {\n            case 'top': vAlign = 'align-items-start'; break;\n            default:\n            case 'center': vAlign = 'align-items-center'; break;\n            case 'bottom': vAlign = 'align-items-end'; break;\n            case 'stretch': vAlign = 'align-items-stretch'; break;\n        }\n        let col:string;\n        if (full !== true)\n            col = this.col + (label===undefined? '-12':'-9');\n        else\n            col = 'w-100';\n        let cn = className(align, vAlign, col, 'd-flex');\n        return <div className={cn}>\n            {this.renderPropBody()}\n        </div>;\n    }\n}\n","import { PropGridProps } from './PropGrid';\nimport {\n    PropRow, PropBorder, PropGap, \n    StringPropRow, NumberPropRow, ListPropRow, ComponentPropRow\n} from './row';\n\nexport interface Format {\n\n}\n\nexport interface PropBase {\n    onClick?: () => void;\n}\n\nexport interface LabeledProp extends PropBase {\n    label?: string;\n    bk?: string;\n    vAlign?: 'top' | 'bottom' | 'center' | 'stretch';\n}\n\nexport interface StringProp extends LabeledProp {\n    type: 'string';\n    name: string;\n}\n\nexport interface NumberProp extends LabeledProp {\n    type: 'number';\n    name: string;\n}\n\nexport interface FormatProp extends LabeledProp {\n    type: 'format';\n    format: Format;\n}\n\nexport interface ListProp extends LabeledProp {\n    type: 'list';\n    list: string | any[];  // string 表示名字，否则就是值\n    row: new (props: any) => React.Component;\n}\n\nexport interface ComponentProp extends LabeledProp {\n    type: 'component';\n    full?: boolean;\n    component: any; //JSX.Element;\n}\n\nexport type Prop = StringProp | NumberProp | FormatProp | ListProp | ComponentProp | string;\n\nexport class PropView {\n    private gridProps: PropGridProps\n    private props: Prop[];\n    //private values:any;\n    private rows: PropRow[];\n\n    constructor(gridProps: PropGridProps, props: Prop[]) {\n        this.gridProps = gridProps;\n        this.props = props;\n        //this.values = values;\n        this.buildRows();\n    }\n\n    private buildRows() {\n        this.rows = [];\n        let isGap: boolean = true;\n        for (let prop of this.props) {\n            if (typeof prop === 'string') {\n                this.rows.push(new PropGap(prop));\n                isGap = true;\n            }\n            else {\n                if (!isGap) this.rows.push(new PropBorder());\n                let row;\n                switch (prop.type) {\n                    default: continue;\n                    case 'string': row = new StringPropRow(this.gridProps, prop); break;\n                    case 'number': row = new NumberPropRow(this.gridProps, prop); break;\n                    case 'list': row = new ListPropRow(this.gridProps, prop); break;\n                    case 'component': row = new ComponentPropRow(this.gridProps, prop); break;\n                }\n                this.rows.push(row);\n                isGap = false;\n            }\n        }\n    }\n\n    setValues(values: any) {\n        for (let r of this.rows) r.setValues(values);\n    }\n\n    render() {\n        return this.rows.map((row, index) => row.render(String(index)));\n    }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {observer} from 'mobx-react';\nimport {Prop, PropView} from './propView';\n\nexport interface PropGridProps {\n    className?: string;\n    rows: Prop[];\n    values: any;\n    alignValue?: 'left'|'center'|'right';\n    labelFixLeft?: boolean;\n}\n\n@observer\nexport class PropGrid extends React.Component<PropGridProps> {\n    render() {\n        let {className, rows, values} = this.props;\n        let propView = new PropView(this.props, rows);\n        propView.setValues(values);\n        let cn = classNames('container-fluid', className);\n        return <div className={cn}>\n            {propView.render()}\n        </div>;\n    }\n}\n","export * from './propView';\nexport * from './row';\nexport * from './PropGrid';\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { Page, ItemSchema, UiSchema, StringSchema, UiTextItem, Edit, ImageSchema, nav, UiImageItem } from '../components';\nimport { userApi } from './userApi';\n\nexport class EditMeInfo extends React.Component {\n    private schema:ItemSchema[] = [\n        {name:'nick', type:'string'} as StringSchema,\n        {name:'icon', type:'image'} as ImageSchema\n    ];\n    private uiSchema:UiSchema = {\n        items: {\n            nick: {widget:'text', label:'别名', placeholder:'好的别名更方便记忆'} as UiTextItem,\n            icon: {widget:'image', label:'头像'} as UiImageItem,\n        }\n    }\n    @observable private data:any;\n\n    constructor(props:any) {\n        super(props);\n        let {nick, icon} = nav.user;\n        this.data = {\n            nick: nick,\n            icon: icon,\n        }\n    }\n\n    private onItemChanged = async (itemSchema:ItemSchema, newValue:any, preValue:any) => {\n        let {name} = itemSchema;\n        await userApi.userSetProp(name, newValue);\n        this.data[name] = newValue;\n        nav.user[name] = newValue;\n        nav.saveLocalUser();\n    }\n\n    render() {\n        return <Page header=\"个人信息\">\n            <Edit schema={this.schema} uiSchema={this.uiSchema}\n                data={this.data}\n                onItemChanged={this.onItemChanged} />\n        </Page>;\n    }\n}\n","import * as React from 'react';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport classNames from 'classnames';\nimport { IObservableValue } from 'mobx/lib/internal';\nimport '../../css/va-tab.css';\n\nexport type TabCaption = (selected:boolean) => JSX.Element;\n\nexport interface TabProp {\n    name: string;\n    caption: TabCaption;\n    content: () => JSX.Element;\n    notify?: IObservableValue<number>;\n    load?: () => Promise<void>;\n}\n\nexport interface TabsProps {\n    tabs: TabProp[];\n    tabPosition?: 'top' | 'bottom';\n    size?: 'sm' | 'lg' | 'md';\n    tabBack?: string;\n    contentBack?: string;\n    sep?: string;\n    selected?: string;\n}\n\nclass Tab {\n    name: string;\n    @observable selected: boolean;\n    caption: TabCaption;\n    contentBuilder: ()=>JSX.Element;\n    notify: IObservableValue<number>;\n    load?: () => Promise<void>;\n\n    private _content: JSX.Element;\n    \n    get content(): JSX.Element {\n        if (this.selected !== true) return this._content;\n        if (this._content !== undefined) return this._content;\n        return this._content = this.contentBuilder();\n    }\n\n    async start() {\n        if (this._content !== undefined) return;\n        if (this.load === undefined) return;\n        await this.load();\n    }\n}\n\nexport const TabCaptionComponent = (label:string, icon:string, color:string) => <div \n    className={'d-flex justify-content-center align-items-center flex-column cursor-pointer ' + color}>\n    <div><i className={'fa fa-lg fa-' + icon} /></div>\n    <small>{label}</small>\n</div>;\n\n@observer export class Tabs extends React.Component<TabsProps> {\n    private size: string;\n    private tabBack: string;\n    private contentBack: string;\n    private sep: string;\n    @observable private selectedTab: Tab;\n    @observable private tabs: Tab[];\n\n    constructor(props: TabsProps) {\n        super(props);\n        let {size, tabs, tabBack, contentBack, sep, selected} = this.props;\n        this.size = size || 'md';\n        this.tabs = tabs.map(v => {\n            let tab = new Tab();\n            tab.name = v.name;\n            tab.selected = false;\n            tab.caption = v.caption;\n            tab.contentBuilder = v.content;\n            tab.notify = v.notify;\n            tab.load = v.load;\n            return tab;\n        });\n        this.tabBack = tabBack || 'bg-light';\n        this.contentBack = contentBack;\n        this.sep = sep || 'border-top border-gray';\n        if (selected !== undefined) {\n            this.selectedTab = this.tabs.find(v => v.name === selected);\n        }\n        if (this.selectedTab === undefined) this.selectedTab = this.tabs[0];\n        this.selectedTab.selected = true;\n    }\n\n    async componentWillMount() {\n        if (this.tabs === undefined) return;\n        if (this.tabs.length === 0) return;\n        let tab = this.tabs[0];\n        await tab.start();\n    }\n\n    private tabClick = async (tab:Tab) => {\n        await tab.start();\n        this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    showTab(tabName: string) {\n        let tab = this.tabs.find(v => v.name === tabName);\n        if (tab === undefined) return;\n        if (this.selectedTab !== undefined) this.selectedTab.selected = false;\n        tab.selected = true;\n        this.selectedTab = tab;\n    }\n\n    render() {\n        let cn = classNames('tab', 'tab-' + this.size);\n        let content = <div className={classNames(this.contentBack, 'tab-content')}>\n            {this.tabs.map((v,index) => {\n                let style:React.CSSProperties={\n                    display: v.selected===true? undefined : 'none'};\n                return <div key={index} style={style}>{v.content}</div>;\n            })}\n        </div>;\n\n        let tabs = <div className={classNames(this.tabBack, this.sep, 'tab-tabs')}>\n            {this.tabs.map((v,index) => {\n                let {selected, caption, notify} = v;\n                let notifyCircle:any;\n                if (notify !== undefined) {\n                    let num = notify.get();\n                    if (num !== undefined) {\n                        if (num > 0) notifyCircle = <u>{num>99?'99+':num}</u>;\n                        else if (num < 0) notifyCircle = <u className=\"dot\" />;\n                    }\n                }\n                return <div key={index} className=\"\" onClick={()=>this.tabClick(v)}>\n                    <div className=\"align-self-center\">\n                        {notifyCircle}\n                        {caption(selected)}\n                    </div>\n                </div>\n            })}\n        </div>;\n\n        return <div className={cn}>\n            {\n                this.props.tabPosition === 'top'? \n                    <>{tabs}{content}</> :\n                    <>{content}{tabs}</>\n            }\n        </div>\n    }\n};\n","export * from './tabs';\n","import * as React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { VPage, Page, FA, List, Form, ItemSchema, StringSchema, UiInputItem, UiSchema, Context } from 'tonva';\nimport { CStockInfo } from './CStockInfo';\n\nexport class VTags extends VPage<CStockInfo> {\n    async open(param?: any) {\n        this.openPage(this.page);\n    }\n\n    private onSelect = (item:any, isSelected:boolean, anySelected:boolean) => {\n        this.controller.onTaged(item, isSelected);\n    }\n\n    private renderTag = (tag:any) => {\n        return <div className=\"px-3 py-2 cursor-pointer\">{tag.name}</div>;\n    }\n\n    private page = observer(() => {\n        let {tags, selectedTags} = this.controller;\n        return <Page header=\"选择分组\" headerClassName=\"bg-primary\">\n            <div className=\"px-3 py-2 cursor-pointer\" onClick={this.controller.onNewTag}><FA name=\"plus\" className=\"text-primary\" /> &nbsp; 新建分组</div>\n            <List items={tags} item={{onSelect:this.onSelect, render:this.renderTag}} selectedItems={selectedTags} />\n        </Page>;\n    })\n}\n\nconst schema:ItemSchema[] = [\n    {name: 'name', type: 'string', required: true, maxLength: 10} as StringSchema,\n    {name: 'submit', type: 'submit', } ,\n];\nconst uiSchema:UiSchema = {\n    items: {\n        name: { widget: 'text', label: null, placeholder: '分组名称' } as UiInputItem,\n        submit: { widget: 'button', label: '保存', className:'btn btn-primary' },\n    }\n};\n\nexport class VNewTag extends VPage<CStockInfo> {\n    async open(param?: any) {\n        this.openPage(this.page);\n    }\n\n    private onFormButtonClick = async (name:string, context: Context) => {\n        await this.controller.onSaveNewTag(context.data);\n    }\n\n    private page = () => {\n        return <Page header=\"新建分组\" headerClassName=\"bg-primary\">\n            <div className=\"px-3 py-3\">\n                <Form schema={schema}\n                    uiSchema={uiSchema}\n                    formData={undefined}\n                    onButtonClick={this.onFormButtonClick}\n                />\n            </div>\n        </Page>;\n    }\n}\n","/*eslint @typescript-eslint/no-unused-vars: [\"off\", { \"vars\": \"all\" }]*/\nimport { observable, IObservableArray, computed } from 'mobx';\nimport { CUqBase } from '../CUqBase';\nimport { CMiApp } from '../CMiApp';\nimport { VStockInfo } from './VStockInfo'\nimport { NStockInfo, StockPrice, StockEarning, StockRoe, StockCapitalearning, StockBonus, StockDivideInfo } from './StockInfoType';\nimport { VTags, VNewTag } from './VTags';\nimport { nav } from 'tonva';\n\nexport class CStockInfo extends CUqBase {\n  readonly cApp: CMiApp;\n  baseItem: NStockInfo;\n  @observable protected loaded: boolean = false;\n\n  @observable price : StockPrice;\n  @observable roe: StockRoe;\n  @observable tags: any[] = undefined;\n  @observable stockTags:any[];\n  selectedTags: any[];\n\n  protected _earning: IObservableArray<StockEarning> = observable.array<StockEarning>([], { deep: true});\n  protected _capitalearning: IObservableArray<StockCapitalearning> = observable.array<StockCapitalearning>([], { deep: true});\n  protected _bonus: IObservableArray<StockBonus> = observable.array<StockBonus>([], { deep: true});\n  protected _divideInfo: IObservableArray<StockDivideInfo> = observable.array<StockDivideInfo>([], { deep: true});\n  \n  @computed get earning(): IObservableArray<StockEarning> {\n    if (this.loaded === false) return undefined;\n    return this._earning;\n  }\n\n  @computed get capitalearning(): IObservableArray<StockCapitalearning> {\n    if (this.loaded === false) return undefined;\n    return this._capitalearning;\n  }\n\n  @computed get bonus(): IObservableArray<StockBonus> {\n    if (this.loaded === false) return undefined;\n    return this._bonus;\n  }\n\n  @computed get divideInfo(): IObservableArray<StockDivideInfo> {\n    if (this.loaded === false) return undefined;\n    return this._divideInfo;\n  }\n\n  loadData = () => {\n    this.loading();\n  }\n\n  async loadTags():Promise<void> {\n    if (this.tags === undefined) {\n      let ret = await this.uqs.mi.AllTags.query(undefined);\n      this.tags = ret.ret;\n    }\n  }\n\n  loading = async () => {\n    if (!this.baseItem)\n      return;\n    let { id } = this.baseItem;\n    let rets = await Promise.all([\n      this.cApp.miApi.query('q_stockallinfo', [id]),\n      this.uqs.mi.TagStock.query({user: nav.user.id, stock: id})\n    ]);\n    this.stockTags = rets[1].ret;\n    let ret = rets[0];\n    if (Array.isArray(ret[0])) {\n      let arr1 = ret[1];\n      if (Array.isArray(arr1)) {\n        this.price = arr1[0];\n      }\n\n      let arr2 = ret[2];\n      if (Array.isArray(arr2)) {\n        this.roe = arr2[0];\n      }\n\n      if (this._earning.length > 0) {\n        this._earning.clear();\n      }\n      let arr3 = ret[3];\n      if (Array.isArray(arr3)) {\n        this._earning.push(...arr3);\n      }\n\n      if (this._capitalearning.length > 0) {\n        this._capitalearning.clear();\n      }\n      let arr4 = ret[4];\n      if (Array.isArray(arr4)) {\n        this._capitalearning.push(...arr4);\n      }\n\n      if (this._bonus.length > 0) {\n        this._bonus.clear();\n      }\n      let arr5 = ret[5];\n      if (Array.isArray(arr5)) {\n        this._bonus.push(...arr5);\n      }\n\n      if (this._divideInfo.length > 0) {\n        this._divideInfo.clear();\n      }\n      let arr6 = ret[6];\n      if (Array.isArray(arr6)) {\n        this._divideInfo.push(...arr6);\n      }\n    }\n\n    this.loaded = true;\n  }\n\n  async internalStart(param: any) {\n    this.baseItem = param as NStockInfo;\n    this.loadData();\n    this.openVPage(VStockInfo);\n  }\n\n  openMetaView = () => {\n  }\n\n  onTags = async () => {\n    await this.loadTags();\n    this.selectedTags = this.tags.filter(v => {\n      let i = this.stockTags.findIndex(st => st.tag.id === v.id);\n      return i>=0;\n    });\n    //await this.loadTags();\n    this.openVPage(VTags);\n  }\n\n  onNewTag = () => {\n    this.openVPage(VNewTag);\n  }\n\n  onSaveNewTag = async (data:any) => {\n    let {name} = data;\n    let param = {id: undefined, name: name};\n    let ret = await this.uqs.mi.SaveTag.submit(param);\n    let {retId} = ret;\n    if (retId < 0) {\n      alert(name + ' 已经被使用了');\n      return;\n    }\n    this.tags.push({id: retId, name: name});\n    this.closePage();\n  }\n\n  onTaged = async (tag: any, isSelected: boolean) => {\n    let param = {\n      user: nav.user.id,\n      tag: tag.id,\n      arr1: [\n        {stock: this.baseItem.id}\n      ]\n    };\n    if (isSelected === true) {\n      let ret = await this.uqs.mi.TagStock.add(param);\n      let newTag = {\n        tag: {\n          id: tag.id,\n        }\n      }\n      this.stockTags.push(newTag);\n    }\n    else {\n      let ret = await this.uqs.mi.TagStock.del(param);\n      let i = this.stockTags.findIndex(v=>v.tag.id === tag.id);\n      this.stockTags.splice(i, 1);\n    }\n  }\n}\n","import * as React from 'react';\nimport {FetchError} from '../net/fetchError';\nimport { refetchApi } from '../net';\n\nexport interface FetchErrorProps extends FetchError {\n    clearError: ()=>void\n}\n\nexport default class FetchErrorView extends React.Component<FetchErrorProps, null> {\n    private reApi = async () => {\n        this.props.clearError();\n        const {channel, url, options, resolve, reject} = this.props;\n        await refetchApi(channel, url, options, resolve, reject);\n    }\n    private close = async () => {\n        this.props.clearError();\n    }\n    render() {\n        let {error, url} = this.props;\n            //let errMsg = fetchError.errorMsg;\n        let errContent;\n        if (typeof error === 'object') {\n            let err = [];\n            for (let i in error) {\n                err.push(<li key={i}><label>{i}</label><div>{error[i]}</div></li>);\n            }\n            errContent = <ul>{err}</ul>;\n        }\n        else {\n            errContent = <div>{error}</div>;\n        }\n        return <li>\n            <article className=\"page-container\">\n                <section>\n                    <div  className=\"va-error\">\n                        <div>网络出现问题</div>\n                        <div>点击重新访问</div>\n                        <div>url: {url}</div>\n                        {errContent}\n                        <div className=\"p-3\">\n                            <button type='button' onClick={this.reApi}>重新API</button>\n                            <button type='button' onClick={this.close}>关闭</button>\n                        </div>\n                    </div>\n                </section>\n            </article>\n        </li>;\n    }\n}\n","/*eslint @typescript-eslint/no-unused-vars: [\"off\", { \"vars\": \"all\" }]*/\nimport * as React from 'react';\nimport { View, nav } from 'tonva';\nimport { LMR, FA, SearchBox } from 'tonva';\nimport logo from '../images/logo.svg';\nimport { CHome } from './CHome';\n\nexport class VSiteHeader extends View<CHome> {\n    render() {\n        let currentSalesRegion = <FA name=\"globe\" />\n        let login = <div>\n            登录\n        </div>\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\n        let right = undefined;\n        /*\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\n            {currentSalesRegion} &nbsp;\n            <button onClick={()=>nav.start()}>Try</button>\n        </div>;*/\n        return <LMR\n            className=\"mb-3 align-items-center bg-white\"\n            left={left} right={right}>\n            <div className=\"\">\n                {this.controller.renderSearchHeader('md')}\n            </div>\n        </LMR>\n    }\n}","import * as React from 'react';\nimport { View } from 'tonva';\nimport { CHome } from './CHome';\nimport { SearchBox } from 'tonva';\n\nexport class VSearchHeader extends View<CHome> {\n\n    private onSearch = async (key: string) => {\n        // let { cProduct } = this.controller.cApp;\n        // cProduct.start(key);\n    }\n\n    render(param: any) {\n        return <SearchBox className=\"px-1 w-100\" \n            size={param}\n            onSearch={this.onSearch} \n            placeholder=\"功能...\" />\n    }\n}","/*eslint @typescript-eslint/no-unused-vars: [\"off\", { \"vars\": \"all\" }]*/\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { VPage, Page, View, List, LMR, FA } from 'tonva';\nimport { NStockInfo } from '../stockinfo';\nimport { CHome } from './CHome';\n\nexport class VHome extends View<CHome> {\n\n  render(param: any): JSX.Element {\n    return <this.page />\n  }\n\n  private page = observer(() => {\n    let { openMetaView, onPage } = this.controller;\n    let viewMetaButton = <></>;\n    if (this.controller.isLogined) {\n      viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n    }\n\n    return <Page header=\"自选股\"  onScrollBottom={onPage} \n      headerClassName='bg-primary py-1 px-3'>\n      \n      <this.content />\n    </Page>;\n  })\n\n  private onSelect = (item:any, isSelected:boolean, anySelected:boolean) => {\n\n  }\n\n  private content = observer(() => {\n    let {PageItems} = this.controller;\n    let header = <div className=\"px-3\">\n      <div className=\"px-3 c6\"/>\n      <div className=\"px-3 c8\">PE</div>\n      <div className=\"px-3 c8\">ROE</div>\n      <div className=\"px-3 c8\">PRICE</div>\n    </div>;\n    return <>\n      <List header={header}\n        items={PageItems}\n        item={{ render: this.renderRow, onClick: this.onSelected, key: this.rowKey }}\n        before={'搜索 资料'}\n      />\n    </>\n  });\n\n  renderRow = (item: any, index: number): JSX.Element => <this.rowContent {...item} />;\n  protected rowContent = (row: any): JSX.Element => {\n    let { id, name, code, pe, roe, price, order } = row as NStockInfo;\n    let left = <div className=\"c6\"><span className=\"text-primary\">{name}</span><br/>{code}</div>\n    return <LMR className=\"px-3 py-2\" left={left} right = {order.toString()} onClick={()=>this.onClickName(row)}>\n      <div className=\"d-flex flex-wrap\">\n        <div className=\"px-3 c8 d-flex\">{pe.toFixed(2)}</div>\n        <div className=\"px-3 c8\"> {roe===undefined?'':(roe * 100).toFixed(2)}</div>\n        <div className=\"px-3 c8\"> {price.toFixed(2)}</div>\n      </div>\n    </LMR>\n  }\n\n  private rowKey = (item: any) => {\n    let { id } = item;\n    return id;\n  }\n\n  protected onClickName = (item: NStockInfo) => {\n    this.controller.openStockInfo(item);\n    /* let {symbol} = item;\n    event.preventDefault();\n    let url = `http://finance.sina.com.cn/realstock/company/${symbol}/nc.shtml`;\n    window.open(url, '_blank'); */\n  }\n\n  protected onSelected = async (item: any): Promise<void> => {\n    let a = 0;\n  }\n\n  private callOnSelected(item: any) {\n    if (this.onSelected === undefined) {\n      alert('onSelect is undefined');\n      return;\n    }\n    this.onSelected(item);\n  }\n  clickRow = (item: any) => {\n    this.callOnSelected(item);\n  }\n}","/*eslint @typescript-eslint/no-unused-vars: [\"off\", { \"vars\": \"all\" }]*/\nimport * as React from 'react';\nimport { nav } from 'tonva';\nimport { PageItems, Controller } from 'tonva';\nimport { CUqBase } from '../CUqBase';\nimport { CStockInfo, NStockInfo } from '../stockinfo';\nimport { VSiteHeader } from './VSiteHeader';\nimport { VSearchHeader } from './VSearchHeader';\nimport { VHome } from './VHome';\nimport { CMiApp } from 'CMiApp';\n\nclass HomePageItems<T> extends PageItems<T> {\n  cHome: CHome;\n  constructor(cHome: CHome) {\n    super(true);\n    this.cHome = cHome;\n    this.pageSize = 30;\n    this.firstSize = 30;\n  }\n\n  protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\n    let query = {\n      name: 'tagpe',\n      pageStart: pageStart,\n      pageSize: pageSize,\n      user: this.cHome.user.id,\n      tag: param.tag,\n      yearlen: 1,\n    };\n    let result = await this.cHome.cApp.miApi.process(query, []);\n    if (Array.isArray(result) === false) return [];\n    return result as any[];\n  }\n  \n  protected setPageStart(item: any) {\n    this.pageStart = item === undefined ? 0 : item.order;\n  }\n}\n\nexport class CHome extends CUqBase {\n  PageItems: PageItems<any> = new HomePageItems<any>(this);\n\n  onPage = () => {\n    this.PageItems.more();\n  }\n\n  async searchMain(key: any) {\n    if (key !== undefined) await this.PageItems.first(key);\n  }\n\n  async internalStart(param: any) {\n\n  }\n\n  async load() {\n    this.searchMain({ tag: 1 });\n  }\n\n  renderSiteHeader = () => {\n    return this.renderView(VSiteHeader);\n  }\n\n  renderSearchHeader = (size?: string) => {\n    return this.renderView(VSearchHeader, size);\n  }\n\n\n  renderHome = () => {\n    return this.renderView(VHome);\n  }\n\n  openMetaView = () => {\n  }\n\n  tab = () => <this.renderHome />;\n\n  openStockInfo = (item: NStockInfo) => {\n    let cStockInfo = this.newC(CStockInfo);\n    cStockInfo.start(item);\n  }\n}","import {FetchError} from './fetchError';\nimport {HttpChannelUI} from './httpChannelUI';\nimport {nav} from 'tonva';\nimport { consts } from '../consts';\n\nexport async function httpGet(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(url, undefined, undefined);\n    let ret = await channel.get('', params);\n    return ret;\n}\n\nexport async function httpPost(url:string, params?:any):Promise<any> {\n    let channel = new HttpChannel(url, undefined, undefined);\n    let ret = await channel.post('', params);\n    return ret;\n}\n\nexport class HttpChannel {\n    private hostUrl: string;\n    private apiToken: string;\n    private ui?: HttpChannelUI;\n    private timeout: number;\n\n    constructor(hostUrl: string, apiToken:string, ui?: HttpChannelUI) {\n        this.hostUrl = hostUrl;\n        this.apiToken = apiToken;\n        this.ui = ui;\n        this.timeout = consts.isDevelopment === true? 500000:5000;\n    }\n\n    private startWait = () => {\n        if (this.ui !== undefined) this.ui.startWait();\n    }\n\n    private endWait = (url?:string, reject?:(reason?:any)=>void) => {\n        if (this.ui !== undefined) this.ui.endWait();\n        if (reject !== undefined) reject('访问webapi超时 ' + url);\n    }\n\n    private showError = async (error:FetchError) => {\n        if (this.ui !== undefined) await this.ui.showError(error);\n    }\n\n    used() {\n        this.post('', {});\n    }\n\n    async get(url: string, params: any = undefined): Promise<any> {\n        if (params) {\n            let keys = Object.keys(params);\n            if (keys.length > 0) {\n                let c = '?';\n                for (let k of keys) {\n                    let v = params[k];\n                    if (v === undefined) continue;\n                    url += c + k + '=' + params[k];\n                    c = '&';\n                }\n            }\n        }\n        let options = this.buildOptions();\n        options.method = 'GET';\n        return await this.innerFetch(url, options);\n    }\n\n    async post(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'POST';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async put(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'PUT';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n\n    async delete(url: string, params: any): Promise<any> {\n        let options = this.buildOptions();\n        options.method = 'DELETE';\n        options.body = JSON.stringify(params);\n        return await this.innerFetch(url, options);\n    }\n    async fetch(url: string, options: any, resolve:(value?:any)=>any, reject:(reason?:any)=>void):Promise<void> {\n        let that = this;\n        this.startWait();\n        let path = url;\n        function buildError(err: string) {\n            return {\n                channel: that,\n                url: path,\n                options: options,\n                resolve: resolve,\n                reject: reject,\n                error: err,\n            }\n        }\n        try {\n            console.log('%s %s', options.method, path);\n            let timeOutHandler = setTimeout(() => that.endWait(url, reject), this.timeout);\n            let res = await fetch(encodeURI(path), options);\n            if (res.ok === false) {\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                console.log('call error %s', res.statusText);\n                throw res.statusText;\n            }\n            let ct = res.headers.get('content-type');\n            if (ct && ct.indexOf('json')>=0) {\n                return res.json().then(async retJson => {\n                    clearTimeout(timeOutHandler);\n                    that.endWait();\n                    if (retJson.ok === true) {\n                        return resolve(retJson.res);\n                    }\n                    if (retJson.error === undefined) {\n                        await that.showError(buildError('not valid tonva json'));\n                    }\n                    else {\n                        await that.showError(buildError(retJson.error));\n                        reject(retJson.error);\n                    }\n                    //throw retJson.error;\n                }).catch(async error => {\n                    await that.showError(buildError(error.message));\n                });\n            }\n            else {\n                let text = await res.text();\n                clearTimeout(timeOutHandler);\n                that.endWait();\n                resolve(text);\n            }\n        }\n        catch(error) {\n            if (typeof error === 'string') {\n                if (error.toLowerCase().startsWith('unauthorized') === true) {\n                    nav.logout();\n                    return;\n                }\n            }\n            await this.showError(buildError(error.message));\n        };\n    }\n\n    private async innerFetch(url: string, options: any): Promise<any> {\n        let u = this.hostUrl + url;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(u, options, resolve, reject);\n        });\n    }\n\n    async callFetch(url:string, method:string, body:any):Promise<any> {\n        let options = this.buildOptions();\n        options.method = method;\n        options.body = body;\n        return await new Promise<any>(async (resolve, reject) => {\n            await this.fetch(url, options, resolve, reject);\n        });\n    }\n\n    private buildOptions(): any {\n        let {language, culture} = nav;\n        let headers = new Headers();\n        //headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json;charset=UTF-8');\n        let lang = language;\n        if (culture) lang += '-' + culture;\n        headers.append('Accept-Language', lang);\n        if (this.apiToken) { \n            headers.append('Authorization', this.apiToken); \n        }\n        let options = {\n            headers: headers,\n            // cache: 'no-cache',\n        };\n        return options;\n    }\n}\n","import {nav} from 'tonva';\n\nexport interface HttpChannelUI {\n    startWait():void;\n    endWait():void;\n    showError(error:any):Promise<void>;\n}\n\nexport class HttpChannelNavUI implements HttpChannelUI {\n    startWait() {\n        nav.startWait();\n    }\n    endWait() {\n        nav.endWait();\n    }\n    async showError(error:any):Promise<void> {\n        nav.endWait();\n        /*\n        if (error.name === 'SyntaxError') {\n            error = {\n                name: error.name,\n                message: error.message,\n            }\n        }*/\n        await nav.onError(error);\n    }\n}\n\n","//import {isDevelopment} from '../local';\nimport {HttpChannel} from './httpChannel';\n\nexport async function refetchApi(channel:HttpChannel, url, options, resolve, reject) {\n    await channel.fetch(url, options, resolve, reject);\n}\n\nexport abstract class ApiBase {\n    protected token: string;\n    protected path: string;\n    protected showWaiting: boolean;\n\n    constructor(path: string, showWaiting: boolean) {\n        this.path = path || '';\n        this.showWaiting = showWaiting;\n    }\n\n    protected abstract async getHttpChannel(): Promise<HttpChannel>;\n\n    public async call(url:string, method:string, body:any):Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.callFetch(url, method, body);\n    }\n\n    public async get(path:string, params:any=undefined): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.get(this.path + path, params);\n    }\n\n    public async post(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.post(this.path + path, params);\n    }\n\n    public async put(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.put(this.path + path, params);\n    }\n\n    public async delete(path:string, params:any): Promise<any> {\n        let channel = await this.getHttpChannel();\n        return await channel.delete(this.path + path, params);\n    }\n}\n","import _ from 'lodash';\nimport { HttpChannel } from './httpChannel';\nimport { HttpChannelNavUI } from './httpChannelUI';\nimport { ApiBase } from './apiBase';\n\nlet channelUIs: { [name: string]: HttpChannel } = {};\nlet channelNoUIs: { [name: string]: HttpChannel } = {};\n\nclass MiApiChannel extends ApiBase {\n  private apiName: string;\n  url: string;\n\n  constructor(url: string, basePath: string, apiName: string, uqToken: string, showWaiting?: boolean) {\n    super(basePath, showWaiting);\n    this.showWaiting = showWaiting;\n    this.apiName = apiName;\n    this.token = uqToken;\n    this.url = url;\n  }\n\n  protected async getHttpChannel(): Promise<HttpChannel> {\n    let channels: { [name: string]: HttpChannel };\n    let channelUI: HttpChannelNavUI;\n    if (this.showWaiting === true || this.showWaiting === undefined) {\n      channels = channelUIs;\n      channelUI = new HttpChannelNavUI();\n    }\n    else {\n      channels = channelNoUIs;\n    }\n    let channel = channels[this.apiName];\n    if (channel !== undefined) return channel;\n    channel = new HttpChannel(this.url, this.token, channelUI);\n    return channels[this.apiName] = channel;\n  }\n}\n\nexport class MiApi {\n  private channel: MiApiChannel;\n\n  constructor(url: string, basePath: string, apiName: string, uqToken: string, showWaiting?: boolean) {\n    this.channel = new MiApiChannel(url, basePath, apiName, uqToken, showWaiting);\n  }\n\n  async query(name: string, params: any[]): Promise<any> {\n    let pbody = { call: name, params: params };\n    return await this.channel.post('sql/call', pbody);\n  }\n\n  async page(name: string, params: any[], pageStart: number, pageSize: number): Promise<any> {\n    let p: any[];\n    switch (typeof params) {\n      case 'undefined': p = []; break;\n      default: p = _.clone(params); break;\n    }\n    p.push(pageStart);\n    p.push(pageSize);\n    let pbody = { call: name, params: p };\n    return await this.channel.post('sql/call', pbody);\n  }\n\n  async process(proc: any, params: any[]): Promise<any> {\n    let pbody = { proc: proc, params: params };\n    return await this.channel.post('sql/query', pbody);\n  }\n}\n","import * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { Loading } from 'tonva';\n\nexport const meTab = () => {\n    let LoadableComponent = Loadable({\n        loader: () => import('./tab'),\n        loading: Loading\n    });\n    return <LoadableComponent />;\n}\n","import * as React from 'react';\nimport { VPage, TabCaptionComponent, Page, Tabs } from 'tonva';\nimport { CMiApp } from '../CMiApp';\nimport { meTab } from '../me';\n\nconst color = (selected: boolean) => selected === true ? 'text-primary' : 'text-muted';\n\nexport class VHome extends VPage<CMiApp> {\n    async open(param?: any) {\n        this.openPage(this.render);\n    }\n    render = (param?: any): JSX.Element => {\n        let { cHome, cExporer } = this.controller;\n        let faceTabs = [\n            { name: 'home', label: '首页', icon: 'home', content: cHome.tab, notify: undefined, load:async()=>{await cHome.load()} },\n            { name: 'explorer', label: '发现', icon: 'search', content: cExporer.tab, load: async()=>{await cExporer.load()} },\n            { name: 'me', label: '我的', icon: 'user', content: meTab }\n        ].map(v => {\n            let { name, label, icon, content, notify, load } = v;\n            return {\n                name: name,\n                caption: (selected: boolean) => TabCaptionComponent(label, icon, color(selected)),\n                content: content,\n                notify: notify,\n                load: load,\n            }\n        });\n        return <Page header={false}>\n            <Tabs tabs={faceTabs} />\n        </Page>;\n    }\n}\n","/*eslint @typescript-eslint/no-unused-vars: [\"off\", { \"vars\": \"all\" }]*/\nimport * as React from 'react';\nimport { View, nav } from 'tonva';\nimport { LMR, FA, SearchBox } from 'tonva';\nimport logo from '../images/logo.svg';\nimport { CExplorer } from './CExplorer';\n\nexport class VSiteHeader extends View<CExplorer> {\n    render() {\n        let currentSalesRegion = <FA name=\"globe\" />\n        let login = <div>\n            登录\n        </div>\n        let left = <img className=\"m-1\" src={logo} alt=\"logo\" style={{height: \"3rem\", width: \"3rem\"}} />;\n        //let cart = this.controller.cApp.cCart.renderCartLabel();\n        let right = undefined;\n        /*\n        <div className=\"d-flex flex-row mr-1 align-items-center\">\n            {currentSalesRegion} &nbsp;\n            <button onClick={()=>nav.start()}>Try</button>\n        </div>;*/\n        return <LMR\n            className=\"mb-3 align-items-center bg-white\"\n            left={left} right={right}>\n            <div className=\"\">\n                {this.controller.renderSiteHeader()}\n            </div>\n        </LMR>\n    }\n}","/*eslint @typescript-eslint/no-unused-vars: [\"off\", { \"vars\": \"all\" }]*/\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { VPage, Page, View, List, LMR, FA } from 'tonva';\nimport { NStockInfo } from '../stockinfo';\nimport { CExplorer } from './CExplorer';\n\nexport class VExplorer extends View<CExplorer> {\n\n  render(param: any): JSX.Element {\n    return <this.page />\n  }\n\n  private page = observer(() => {\n    let { openMetaView, onPage } = this.controller;\n    let viewMetaButton = <></>;\n    if (this.controller.isLogined) {\n      viewMetaButton = <button type=\"button\" className=\"btn w-100\" onClick={openMetaView}>view</button>\n    }\n\n    return <Page header=\"股票发现\"  onScrollBottom={onPage} \n      headerClassName='bg-primary py-1 px-3'>\n      \n      <this.content />\n    </Page>;\n  })\n\n  private onSelect = (item:any, isSelected:boolean, anySelected:boolean) => {\n\n  }\n\n  private content = observer(() => {\n    let {PageItems} = this.controller;\n    let header = <div className=\"px-3\">\n      <div className=\"px-3 c6\"/>\n      <div className=\"px-3 c8\">PE</div>\n      <div className=\"px-3 c8\">ROE</div>\n      <div className=\"px-3 c8\">PRICE</div>\n    </div>;\n    return <>\n      <List header={header}\n        items={PageItems}\n        item={{ render: this.renderRow, onClick: this.onSelected, key: this.rowKey }}\n        before={'搜索 资料'}\n      />\n    </>\n  });\n\n  renderRow = (item: any, index: number): JSX.Element => <this.rowContent {...item} />;\n  protected rowContent = (row: any): JSX.Element => {\n    let { id, name, code, pe, roe, price, order } = row as NStockInfo;\n    let left = <div className=\"c6\"><span className=\"text-primary\">{name}</span><br/>{code}</div>\n    return <LMR className=\"px-3 py-2\" left={left} right = {order.toString()} onClick={()=>this.onClickName(row)}>\n      <div className=\"d-flex flex-wrap\">\n        <div className=\"px-3 c8 d-flex\">{pe.toFixed(2)}</div>\n        <div className=\"px-3 c8\"> {roe===undefined?'':(roe * 100).toFixed(2)}</div>\n        <div className=\"px-3 c8\"> {price.toFixed(2)}</div>\n      </div>\n    </LMR>\n  }\n\n  private rowKey = (item: any) => {\n    let { id } = item;\n    return id;\n  }\n\n  protected onClickName = (item: NStockInfo) => {\n    this.controller.openStockInfo(item);\n    /* let {symbol} = item;\n    event.preventDefault();\n    let url = `http://finance.sina.com.cn/realstock/company/${symbol}/nc.shtml`;\n    window.open(url, '_blank'); */\n  }\n\n  protected onSelected = async (item: any): Promise<void> => {\n    let a = 0;\n  }\n\n  private callOnSelected(item: any) {\n    if (this.onSelected === undefined) {\n      alert('onSelect is undefined');\n      return;\n    }\n    this.onSelected(item);\n  }\n  clickRow = (item: any) => {\n    this.callOnSelected(item);\n  }\n}","import * as React from 'react';\r\nimport { PageItems } from 'tonva';\r\nimport { CUqBase } from '../CUqBase';\r\nimport { CStockInfo, NStockInfo } from '../stockinfo';\r\nimport { VSiteHeader } from './VSiteHeader';\r\nimport { VExplorer } from './VExplorer';\r\n\r\nclass HomePageItems<T> extends PageItems<T> {\r\n    ce: CExplorer;\r\n    constructor(cHome: CExplorer) {\r\n        super(true);\r\n        this.ce = cHome;\r\n        this.pageSize = 30;\r\n        this.firstSize = 30;\r\n    }\r\n    protected async load(param: any, pageStart: any, pageSize: number): Promise<any[]> {\r\n        let query = {\r\n            name:'pe',\r\n            pageStart:pageStart,\r\n            pageSize:pageSize,\r\n            user:this.ce.user.id,\r\n            yearlen: 1,\r\n        };\r\n        let result = await this.ce.cApp.miApi.process(query, []);\r\n        if (Array.isArray(result) === false) return [];\r\n        return result as any[];\r\n    }\r\n    protected setPageStart(item: any) {\r\n        this.pageStart = item === undefined ? 0 : item.order;\r\n    }\r\n}\r\n\r\nexport class CExplorer extends CUqBase {\r\n    PageItems: PageItems<any> = new HomePageItems<any>(this);\r\n\r\n    onPage = () => {\r\n        this.PageItems.more();\r\n    }\r\n\r\n    async searchMain(key: string) {\r\n        if (key !== undefined) await this.PageItems.first(key);\r\n    }\r\n\r\n    async internalStart(param: any) {\r\n    }\r\n\r\n    async load() {\r\n      this.searchMain('');\r\n    }\r\n\r\n    renderSiteHeader = () => {\r\n        return this.renderView(VSiteHeader);\r\n    }\r\n   \r\n    renderHome = () => {\r\n        return this.renderView(VExplorer);\r\n    }\r\n    \r\n\r\n    openMetaView = () => {\r\n    }\r\n\r\n    tab = () => <this.renderHome />;\r\n\r\n    openStockInfo = (item:NStockInfo) => {\r\n        let cStockInfo = this.newC(CStockInfo);\r\n        cStockInfo.start(item);\r\n    }\r\n}","/*eslint @typescript-eslint/no-unused-vars: [\"off\", { \"vars\": \"all\" }]*/\nimport * as React from 'react';\nimport { CApp, CUq, Controller, VPage, CAppBase, IConstructor } from 'tonva';\nimport { CHome } from './home';\nimport { consts } from './consts';\nimport { MiApi } from './net';\nimport {nav} from 'tonva';\nimport { VHome } from 'ui/main';\nimport { CUqBase } from './CUqBase';\nimport { CExplorer } from './explorer';\n\nexport class CMiApp extends CAppBase {\n  cExporer: CExplorer;\n  cHome: CHome;\n  miApi: MiApi;\n\n  protected async internalStart() {\n    if (this.isLogined) {\n    }\n\n    let n = nav;\n\n    let token = this.user.token;\n\n    let miHost = consts.isDevelopment ? consts.miApiHostDebug : consts.miApiHost;\n    this.miApi = new MiApi(miHost, 'fsjs/', 'miapi', token, false);\n    this.cExporer = this.newC(CExplorer);\n    this.cHome = this.newC(CHome);\n   \n    //some test code\n    let params = [];\n    //let ret = await this.miApi.page('q_stocksquery', params, 0, 100);\n    let env = process.env;\n    //\n\n    this.openVPage(VHome);\n  }\n\n  protected newC<T extends CUqBase>(type: IConstructor<T>):T {\n    return new type(this);\n  }\n\n  public async showOneVPage(vp: new (coordinator: Controller) => VPage<Controller>, param?: any): Promise<void> {\n    await (new vp(this)).open(param);\n  }\n\n  protected onDispose() {\n  }\n}\n","import * as React from 'react';\nimport './App.css';\nimport { NavView, start, AppConfig } from 'tonva';\nimport { CMiApp } from 'CMiApp';\n\nconst appConfig:AppConfig = {\n  appName: 'bruce/mifen',\n  version: '1.01',\n  tvs: undefined, //TVs;\n};\n\nclass App extends React.Component {\n\n  private onLogined = async () => {\n    await start(CMiApp, appConfig);\n    /*\n    let page = <Page header={false}>\n      <Tabs tabs={faceTabs} />\n    </Page>\n    nav.push(page);\n    */\n    //let b = new B('b');\n    //await b.d();\n    //nav.push(<div>ddd</div>)\n  }\n  public render() {\n    return <NavView onLogined={this.onLogined} />\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}