ID Market (
	id,
	KEY name char(100),
	currency char(20),
);

ID Stock ver 0.2 (
	id,
	KEY market ID Market,
	KEY no,
	name char(50),
	rawId ID,
);

IDX StockValue ver 0.1 (
	id,
	miValue FLOAT,
	incValue FLOAT,
	earning FLOAT,
	divident FLOAT,
	price FLOAT,
	pvolumn FLOAT,
	roe FLOAT,
	inc1 FLOAT,
	inc2 FLOAT,
	inc3 FLOAT,
	inc4 FLOAT,
	preInc FLOAT,
	volumn FLOAT,
	smoothness TINYINT DEFAULT 1,
	date DATE,
	miRate FLOAT,
	dvRate FLOAT,
	ttm FLOAT,
);

QUERY SearchStock1 ver 0.1 (
	key CHAR(20),
)
PAGE (
	id ID asc,
) {
	PAGE SELECT a.id
		FROM Stock as a 
		WHERE 1=1 AND a.id>$pageStart
		LIMIT $pageSize;
};

QUERY SearchStock ver 0.5 (
	key CHAR(20),
	market CHAR(100),
	smooth INT,
)
PAGE ORDER Switch (miRateDesc, dvRateDesc, roeDesc, miRateAsc, dvRateAsc, roeAsc) (
	id ID,							-- (SwitchOrder，第一列ID) 合并插入 tv_$pageOrder 表，然后直接提取
	market ID,
	no char(20),
	name char(50),
	rawId ID,
	miValue FLOAT,
	incValue FLOAT,
	earning FLOAT,
	divident FLOAT,
	price FLOAT,
	roe FLOAT,
	inc1 FLOAT,
	inc2 FLOAT,
	inc3 FLOAT,
	inc4 FLOAT,
	preInc FLOAT,
	volumn FLOAT,
	smoothness TINYINT,
	miRate FLOAT,
	dvRate FLOAT,	
	ttm FLOAT,
) {
	VAR sKey CHAR(50);
	IF key IS NULL {
		SET sKey = '%%';
	}
	ELSE {
		SET sKey = concat('%', key, '%');
	}
	TABLE tblm(m CHAR(20));
	if NOT market IS NULL {
		TEXT market INTO tblm;
	}
	PAGE SELECT a.id, a.no, a.name, a.rawId,
		a.market,
		b.miValue, b.incValue, b.earning, b.divident, b.price, 
		case when b.ttm>=3 then b.miRate else null end as miRate, 
		b.roe, b.dvRate, b.ttm,
		b.inc1, b.inc2, b.inc3, b.inc4, b.preInc, b.volumn,
		b.smoothness
		FROM Stock as a 
			LEFT JOIN StockValue as b on a.id=b.id
			LEFT JOIN Market as c on a.market=c.id
			-- LEFT JOIN UserBlockStock as d on d.ix=$user AND d.id=a.id
		WHERE a.$ LIKE sKey 
			-- AND NOT b.preInc IS NULL
			AND (market IS NULL OR EXISTS(SELECT m FROM tblm WHERE m=c.name))
			AND (smooth is NULL OR smooth=0 OR b.smoothness>=smooth)
			AND (
					key IS NULL AND NOT EXISTS(SELECT ub.xi FROM UserBlockStock as ub WHERE ub.ix=$user AND ub.xi=a.id)
					OR NOT key IS NULL
				)
			-- AND a.id>$pageStart
		ORDER WHEN miRateDesc BY case when b.ttm>=3 then b.miRate else null end DESC
			WHEN dvRateDesc BY b.dvRate DESC
			WHEN roeDesc BY b.roe DESC
			WHEN miRateAsc BY case when b.ttm>=3 then b.miRate else null end DESC
			WHEN dvRateAsc BY b.dvRate DESC
			WHEN roeAsc BY b.roe DESC
			ELSE a.id ASC;
		-- LIMIT $pageSize;
};

OPEN ACT WriteStock ver 0.2 (
	ARR stocks (
		market char(100),
		no char(20),
		name char(50),
		rawId BIGINT,
		incValue FLOAT,
		earning FLOAT,
		divident FLOAT,
		roe FLOAT,
		inc1 FLOAT,
		inc2 FLOAT,
		inc3 FLOAT,
		inc4 FLOAT,
		preInc FLOAT,
		volumn FLOAT,
		smoothness TINYINT,
	)
) {
	foreach stocks {
		VAR mId ID = ID(Market, market);
		VAR stock ID = ID(Stock, mId, no);
		WITH Stock as a ID stock SET a.name=name, a.rawId=rawId; -- , a.$=concat_ws('\n', name, no);
		WITH StockValue as a ID stock
			SET a.incValue=incValue
				, a.miValue=incValue+IFNULL(divident,0)
				, a.earning=earning
				, a.divident=IFNULL(divident,0)
				, a.roe=roe, a.inc1=inc1, a.inc2=inc2, a.inc3=inc3, a.inc4=inc4
				, a.preInc=preInc, a.volumn=volumn
				, a.smoothness=smoothness;
		WITH StockValue as a ID stock 
			SET a.miRate=100 * a.miValue * a.volumn / a.price / IFNULL(a.pvolumn, a.volumn)
				, a.dvRate=100 * a.divident * a.volumn / a.price / IFNULL(a.pvolumn, a.volumn)
				, a.ttm=IF(a.earning>=0.01, (a.price*IFNULL(a.pvolumn, a.volumn))/a.earning/a.volumn, null)
			WHERE a.price>0 AND a.volumn>0;
	}
};

OPEN ACT WritePrice ver 0.2 (
	ARR prices (
		market char(100),
		no char(20),
		name char(50),
		rawId BIGINT,
		price FLOAT,
		pvolumn FLOAT,
		date INT,
	)
) {
	foreach prices {
		VAR mId ID = ID(Market, market);
		VAR stock ID = ID(Stock, mId, no);
		WITH Stock as a ID stock SET a.name=name, a.rawId=rawId; --, a.$=concat_ws('\n', name, no);
		WITH StockValue as a ID stock 
			SET a.price=price
				, a.pvolumn=pvolumn
				, a.date=concat(date DIV 10000, '-', (date DIV 100) MOD 100, '-', date MOD 100);
		WITH StockValue as a ID stock 
			SET a.miRate=100 * a.miValue * a.volumn / a.price / IFNULL(a.pvolumn, a.volumn)
				, a.dvRate=100 * a.divident * a.volumn / a.price / IFNULL(a.pvolumn, a.volumn)
				, a.ttm=IF(a.earning>=0.01, (a.price*IFNULL(a.pvolumn, a.volumn))/a.earning/a.volumn, null)
			WHERE a.price>0 AND a.volumn>0;
	}
};
